;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 21/07/2018 17:36:47
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000041674  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x001834  	6196
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x0018BE  	6334
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x0018DA  	6362
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x001694  	5780
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
_main:
0x1674	0x20894F  	MOV	#2196, W15
0x1676	0x227FF0  	MOV	#10239, W0
0x1678	0xB7A020  	MOV	WREG, SPLIM
0x167A	0x200010  	MOV	#1, W0
0x167C	0xB7A034  	MOV	WREG, PSVPAG
0x167E	0x200040  	MOV	#4, W0
0x1680	0xB72044  	IOR	CORCON
0x1682	0x0000000218F8  	CALL	6392
;DY_GCU.c,79 :: 		void main() {
;DY_GCU.c,80 :: 		init();
0x1686	0x07FF84  	RCALL	_init
;DY_GCU.c,81 :: 		Buzzer_Bip();
0x1688	0x07F9A8  	RCALL	_Buzzer_Bip
;DY_GCU.c,83 :: 		while (1)
L_main0:
;DY_GCU.c,87 :: 		bello += 1;
0x168A	0xB3C011  	MOV.B	#1, W1
0x168C	0x208060  	MOV	#lo_addr(_bello), W0
0x168E	0x40C810  	ADD.B	W1, [W0], [W0]
;DY_GCU.c,89 :: 		}
0x1690	0x37FFFC  	BRA	L_main0
;DY_GCU.c,90 :: 		}
L_end_main:
L__main_end_loop:
0x1692	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_init:
;DY_GCU.c,57 :: 		void init(void) {
;DY_GCU.c,58 :: 		EngineControl_init();
0x1590	0x781F8A  	PUSH	W10
0x1592	0x781F8B  	PUSH	W11
0x1594	0x781F8C  	PUSH	W12
0x1596	0x07FDEB  	RCALL	_EngineControl_init
;DY_GCU.c,59 :: 		dSignalLed_init();
0x1598	0x07FDE4  	RCALL	_dSignalLed_init
;DY_GCU.c,60 :: 		Can_init();
0x159A	0x07FDB2  	RCALL	_Can_init
;DY_GCU.c,61 :: 		GearMotor_init();
0x159C	0x07FE98  	RCALL	_GearMotor_init
;DY_GCU.c,62 :: 		ClutchMotor_init();
0x159E	0x07FE8B  	RCALL	_ClutchMotor_init
;DY_GCU.c,63 :: 		Efi_init();
0x15A0	0x07FD8E  	RCALL	_Efi_init
;DY_GCU.c,64 :: 		GearShift_init();
0x15A2	0x07FD77  	RCALL	_GearShift_init
;DY_GCU.c,65 :: 		StopLight_init();
0x15A4	0x07FDAB  	RCALL	_StopLight_init
;DY_GCU.c,66 :: 		Buzzer_init();
0x15A6	0x07FD98  	RCALL	_Buzzer_init
;DY_GCU.c,70 :: 		aac_init();
0x15A8	0x07FD92  	RCALL	_aac_init
;DY_GCU.c,73 :: 		setTimer(TIMER1_DEVICE, 0.001);
0x15AA	0x2126FB  	MOV	#4719, W11
0x15AC	0x23A83C  	MOV	#14979, W12
0x15AE	0xB3C01A  	MOV.B	#1, W10
0x15B0	0x07FABD  	RCALL	_setTimer
;DY_GCU.c,74 :: 		setInterruptPriority(TIMER1_DEVICE, MEDIUM_PRIORITY);
0x15B2	0xB3C04B  	MOV.B	#4, W11
0x15B4	0xB3C01A  	MOV.B	#1, W10
0x15B6	0x07F867  	RCALL	_setInterruptPriority
;DY_GCU.c,76 :: 		}
L_end_init:
0x15B8	0x78064F  	POP	W12
0x15BA	0x7805CF  	POP	W11
0x15BC	0x78054F  	POP	W10
0x15BE	0x060000  	RETURN
; end of _init
_EngineControl_init:
;enginecontrol.c,10 :: 		void EngineControl_init(void) {
;enginecontrol.c,11 :: 		ENGINE_STARTER_Direction = OUTPUT;
0x116E	0xA9A2D2  	BCLR	TRISD, #5
;enginecontrol.c,12 :: 		ENGINE_KEY_Direction = OUTPUT;
0x1170	0xA9E2E5  	BCLR	TRISG, #15
;enginecontrol.c,14 :: 		ENGINE_KEY = ENGINE_KEY_ON;
0x1172	0xA8E2E7  	BSET	RG15_bit, BitPos(RG15_bit+0)
;enginecontrol.c,15 :: 		engineControl_isChecking = FALSE;
0x1174	0x208921  	MOV	#lo_addr(_engineControl_isChecking), W1
0x1176	0xEF2000  	CLR	W0
0x1178	0x784880  	MOV.B	W0, [W1]
;enginecontrol.c,16 :: 		EngineControl_resetStartCheck();
0x117A	0x070228  	RCALL	_EngineControl_resetStartCheck
;enginecontrol.c,17 :: 		EngineControl_stop();
0x117C	0x070142  	RCALL	_EngineControl_stop
;enginecontrol.c,18 :: 		}
L_end_EngineControl_init:
0x117E	0x060000  	RETURN
; end of _EngineControl_init
_EngineControl_resetStartCheck:
;enginecontrol.c,38 :: 		void EngineControl_resetStartCheck(void) {
;enginecontrol.c,39 :: 		engineControl_startCheckCounter = 0;
0x15CC	0x2086D1  	MOV	#lo_addr(_engineControl_startCheckCounter), W1
0x15CE	0xEF2000  	CLR	W0
0x15D0	0x784880  	MOV.B	W0, [W1]
;enginecontrol.c,40 :: 		}
L_end_EngineControl_resetStartCheck:
0x15D2	0x060000  	RETURN
; end of _EngineControl_resetStartCheck
_EngineControl_stop:
;enginecontrol.c,34 :: 		void EngineControl_stop(void) {
;enginecontrol.c,35 :: 		ENGINE_STARTER = FALSE;
0x1402	0xA9A2D6  	BCLR	LATD5_bit, BitPos(LATD5_bit+0)
;enginecontrol.c,36 :: 		}
L_end_EngineControl_stop:
0x1404	0x060000  	RETURN
; end of _EngineControl_stop
_dSignalLed_init:
;d_signalled.c,7 :: 		void dSignalLed_init(void) {
;d_signalled.c,8 :: 		DSIGNAL_0_Direction = OUTPUT;
0x1162	0x781F8A  	PUSH	W10
0x1164	0xA9C2E5  	BCLR	TRISG14_bit, BitPos(TRISG14_bit+0)
;d_signalled.c,9 :: 		dSignalLed_unset(DSIGNAL_LED_0);
0x1166	0xEF2014  	CLR	W10
0x1168	0x07FCDB  	RCALL	_dSignalLed_unset
;d_signalled.c,10 :: 		}
L_end_dSignalLed_init:
0x116A	0x78054F  	POP	W10
0x116C	0x060000  	RETURN
; end of _dSignalLed_init
_dSignalLed_unset:
;d_signalled.c,28 :: 		void dSignalLed_unset(unsigned char led) {
;d_signalled.c,29 :: 		switch (led) {
0x0B20	0x370002  	BRA	L_dSignalLed_unset6
;d_signalled.c,30 :: 		case DSIGNAL_LED_0:
L_dSignalLed_unset8:
;d_signalled.c,31 :: 		DSIGNAL_0_Pin = DSIGNAL_LED_OFF;
0x0B22	0xA9C2E7  	BCLR	RG14_bit, BitPos(RG14_bit+0)
;d_signalled.c,32 :: 		break;
0x0B24	0x370002  	BRA	L_dSignalLed_unset7
;d_signalled.c,33 :: 		}
L_dSignalLed_unset6:
0x0B26	0xE15460  	CP.B	W10, #0
0x0B28	0x32FFFC  	BRA Z	L_dSignalLed_unset8
L__dSignalLed_unset15:
L_dSignalLed_unset7:
;d_signalled.c,34 :: 		}
L_end_dSignalLed_unset:
0x0B2A	0x060000  	RETURN
; end of _dSignalLed_unset
_Can_init:
;can.c,35 :: 		void Can_init() {
;can.c,36 :: 		unsigned int Can_Init_flags = 0;
0x1100	0x781F8A  	PUSH	W10
0x1102	0x781F8B  	PUSH	W11
0x1104	0x781F8C  	PUSH	W12
0x1106	0x781F8D  	PUSH	W13
;can.c,43 :: 		CAN1Initialize(2, 4, 3, 4, 2, Can_Init_flags);          // SJW,BRP,PHSEG1,PHSEG2,PROPSEG
0x1108	0x20004D  	MOV	#4, W13
0x110A	0x20003C  	MOV	#3, W12
0x110C	0x20004B  	MOV	#4, W11
0x110E	0x20002A  	MOV	#2, W10
0x1110	0x200FB0  	MOV	#251, W0
0x1112	0x781F80  	PUSH	W0
0x1114	0x200020  	MOV	#2, W0
0x1116	0x781F80  	PUSH	W0
0x1118	0x07FD61  	RCALL	_CAN1Initialize
0x111A	0xB1004F  	SUB	#4, W15
;can.c,44 :: 		CAN1SetOperationMode(_CAN_MODE_CONFIG, 0xFF);
0x111C	0x200FFB  	MOV	#255, W11
0x111E	0x20004A  	MOV	#4, W10
0x1120	0x07FBC0  	RCALL	_CAN1SetOperationMode
;can.c,53 :: 		CAN1SetMask(_CAN_MASK_B1, GCU_MASK_EFI_SW_EBB, _CAN_CONFIG_MATCH_MSG_TYPE & _CAN_CONFIG_STD_MSG);
0x1122	0x200FFD  	MOV	#255, W13
0x1124	0x207F4B  	MOV	#2036, W11
0x1126	0x20000C  	MOV	#0, W12
0x1128	0xEF2014  	CLR	W10
0x112A	0x07FA62  	RCALL	_CAN1SetMask
;can.c,54 :: 		CAN1SetFilter(_CAN_FILTER_B1_F1, GCU_FILTER_EFI, _CAN_CONFIG_STD_MSG);
0x112C	0x200FFD  	MOV	#255, W13
0x112E	0x20304B  	MOV	#772, W11
0x1130	0x20000C  	MOV	#0, W12
0x1132	0xEF2014  	CLR	W10
0x1134	0x07FA71  	RCALL	_CAN1SetFilter
;can.c,55 :: 		CAN1SetFilter(_CAN_FILTER_B1_F2, GCU_FILTER_SW_DCU, _CAN_CONFIG_STD_MSG);
0x1136	0x200FFD  	MOV	#255, W13
0x1138	0x20200B  	MOV	#512, W11
0x113A	0x20000C  	MOV	#0, W12
0x113C	0x20001A  	MOV	#1, W10
0x113E	0x07FA6C  	RCALL	_CAN1SetFilter
;can.c,60 :: 		CAN1SetOperationMode(_CAN_MODE_NORMAL, 0xFF);
0x1140	0x200FFB  	MOV	#255, W11
0x1142	0xEF2014  	CLR	W10
0x1144	0x07FBAE  	RCALL	_CAN1SetOperationMode
;can.c,62 :: 		Delay_ms(250);
0x1146	0x2001A8  	MOV	#26, W8
0x1148	0x26E727  	MOV	#28274, W7
L_Can_init0:
0x114A	0xED200E  	DEC	W7
0x114C	0x3AFFFE  	BRA NZ	L_Can_init0
0x114E	0xED2010  	DEC	W8
0x1150	0x3AFFFC  	BRA NZ	L_Can_init0
;can.c,64 :: 		Can_initInterrupt();
0x1152	0x07FDB4  	RCALL	_Can_initInterrupt
;can.c,65 :: 		Can_setWritePriority(CAN_PRIORITY_MEDIUM);
0x1154	0x200FDA  	MOV	#253, W10
0x1156	0x07FDB6  	RCALL	_Can_setWritePriority
;can.c,66 :: 		}
L_end_Can_init:
0x1158	0x7806CF  	POP	W13
0x115A	0x78064F  	POP	W12
0x115C	0x7805CF  	POP	W11
0x115E	0x78054F  	POP	W10
0x1160	0x060000  	RETURN
; end of _Can_init
_CAN1Initialize:
0x0BDC	0xFA0000  	LNK	#0
;__Lib_CAN_12.c,829 :: 		
0x0BDE	0x781F8A  	PUSH	W10
0x0BE0	0x781F8B  	PUSH	W11
0x0BE2	0x781F8C  	PUSH	W12
0x0BE4	0x781F8D  	PUSH	W13
; PROPSEG start address is: 4 (W2)
0x0BE6	0x97B94E  	MOV	[W14-8], W2
; CAN_CONFIG_FLAGS start address is: 12 (W6)
0x0BE8	0x97BB3E  	MOV	[W14-10], W6
;__Lib_CAN_12.c,835 :: 		
0x0BEA	0xA96391  	BCLR	C1CTRLbits, #11
;__Lib_CAN_12.c,836 :: 		
0x0BEC	0xA98391  	BCLR	C1CTRLbits, #12
;__Lib_CAN_12.c,837 :: 		
0x0BEE	0xA9A391  	BCLR	C1CTRLbits, #13
;__Lib_CAN_12.c,838 :: 		
0x0BF0	0xA9E391  	BCLR	C1CTRLbits, #15
;__Lib_CAN_12.c,843 :: 		
0x0BF2	0xBE9F8A  	PUSH.D	W10
0x0BF4	0x200FFB  	MOV	#255, W11
0x0BF6	0x20004A  	MOV	#4, W10
0x0BF8	0x07FE54  	RCALL	_CAN1SetOperationMode
0x0BFA	0xBE054F  	POP.D	W10
;__Lib_CAN_12.c,849 :: 		
;__Lib_CAN_12.c,848 :: 		
;__Lib_CAN_12.c,847 :: 		
;__Lib_CAN_12.c,846 :: 		
;__Lib_CAN_12.c,851 :: 		
0x0BFC	0x781F86  	PUSH	W6
;__Lib_CAN_12.c,850 :: 		
0x0BFE	0x781F82  	PUSH	W2
; PROPSEG end address is: 4 (W2)
;__Lib_CAN_12.c,851 :: 		
0x0C00	0x07FDC5  	RCALL	_CAN1SetBaudRate
0x0C02	0xB1004F  	SUB	#4, W15
;__Lib_CAN_12.c,853 :: 		
0x0C04	0x630070  	AND	W6, #16, W0
;__Lib_CAN_12.c,854 :: 		
0x0C06	0xE10070  	CP	W0, #16
0x0C08	0x3A0001  	BRA NZ	L_CAN1Initialize59
L__CAN1Initialize153:
;__Lib_CAN_12.c,855 :: 		
0x0C0A	0xA8438E  	BSET.B	C1RX0CONbits, #2
L_CAN1Initialize59:
;__Lib_CAN_12.c,858 :: 		
0x0C0C	0xAEA00C  	BTSS	W6, #5
0x0C0E	0x370021  	BRA	L_CAN1Initialize60
;__Lib_CAN_12.c,859 :: 		
0x0C10	0xAE600C  	BTSS	W6, #3
0x0C12	0x370010  	BRA	L_CAN1Initialize61
; CAN_CONFIG_FLAGS end address is: 12 (W6)
;__Lib_CAN_12.c,860 :: 		
0x0C14	0x200FFD  	MOV	#255, W13
0x0C16	0xEF2016  	CLR	W11
0x0C18	0xEF2018  	CLR	W12
0x0C1A	0xEF2014  	CLR	W10
0x0C1C	0x07FCE9  	RCALL	_CAN1SetMask
;__Lib_CAN_12.c,861 :: 		
0x0C1E	0x200FFD  	MOV	#255, W13
0x0C20	0xEF2016  	CLR	W11
0x0C22	0xEF2018  	CLR	W12
0x0C24	0x20001A  	MOV	#1, W10
0x0C26	0x07FCE4  	RCALL	_CAN1SetMask
;__Lib_CAN_12.c,862 :: 		
; FilterConfig1 start address is: 0 (W0)
0x0C28	0x200FF0  	MOV	#255, W0
;__Lib_CAN_12.c,863 :: 		
; FilterConfig2 start address is: 2 (W1)
0x0C2A	0x200FF1  	MOV	#255, W1
;__Lib_CAN_12.c,864 :: 		
0x0C2C	0x781F81  	PUSH	W1
; FilterConfig1 end address is: 0 (W0)
; FilterConfig2 end address is: 2 (W1)
0x0C2E	0x780080  	MOV	W0, W1
0x0C30	0x78004F  	POP	W0
0x0C32	0x37000C  	BRA	L_CAN1Initialize62
L_CAN1Initialize61:
;__Lib_CAN_12.c,866 :: 		
0x0C34	0x200F7D  	MOV	#247, W13
0x0C36	0xEF2016  	CLR	W11
0x0C38	0xEF2018  	CLR	W12
0x0C3A	0xEF2014  	CLR	W10
0x0C3C	0x07FCD9  	RCALL	_CAN1SetMask
;__Lib_CAN_12.c,867 :: 		
0x0C3E	0x200F7D  	MOV	#247, W13
0x0C40	0xEF2016  	CLR	W11
0x0C42	0xEF2018  	CLR	W12
0x0C44	0x20001A  	MOV	#1, W10
0x0C46	0x07FCD4  	RCALL	_CAN1SetMask
;__Lib_CAN_12.c,868 :: 		
; FilterConfig1 start address is: 2 (W1)
0x0C48	0x200F71  	MOV	#247, W1
;__Lib_CAN_12.c,869 :: 		
; FilterConfig2 start address is: 0 (W0)
0x0C4A	0x200F70  	MOV	#247, W0
; FilterConfig1 end address is: 2 (W1)
; FilterConfig2 end address is: 0 (W0)
;__Lib_CAN_12.c,870 :: 		
L_CAN1Initialize62:
;__Lib_CAN_12.c,871 :: 		
; FilterConfig2 start address is: 0 (W0)
; FilterConfig1 start address is: 2 (W1)
0x0C4C	0x780281  	MOV	W1, W5
; FilterConfig1 end address is: 2 (W1)
; FilterConfig2 end address is: 0 (W0)
0x0C4E	0x780200  	MOV	W0, W4
0x0C50	0x37000E  	BRA	L_CAN1Initialize63
L_CAN1Initialize60:
;__Lib_CAN_12.c,873 :: 		
0x0C52	0x200DFD  	MOV	#223, W13
0x0C54	0xEF2016  	CLR	W11
0x0C56	0xEF2018  	CLR	W12
0x0C58	0xEF2014  	CLR	W10
0x0C5A	0x07FCCA  	RCALL	_CAN1SetMask
;__Lib_CAN_12.c,874 :: 		
0x0C5C	0x200DFD  	MOV	#223, W13
0x0C5E	0xEF2016  	CLR	W11
0x0C60	0xEF2018  	CLR	W12
0x0C62	0x20001A  	MOV	#1, W10
0x0C64	0x07FCC5  	RCALL	_CAN1SetMask
;__Lib_CAN_12.c,875 :: 		
; FilterConfig1 start address is: 2 (W1)
0x0C66	0x200FF1  	MOV	#255, W1
;__Lib_CAN_12.c,876 :: 		
; FilterConfig2 start address is: 0 (W0)
0x0C68	0x200F70  	MOV	#247, W0
; FilterConfig1 end address is: 2 (W1)
; FilterConfig2 end address is: 0 (W0)
0x0C6A	0x780281  	MOV	W1, W5
0x0C6C	0x780200  	MOV	W0, W4
;__Lib_CAN_12.c,877 :: 		
L_CAN1Initialize63:
;__Lib_CAN_12.c,882 :: 		
; FilterConfig2 start address is: 8 (W4)
; FilterConfig1 start address is: 10 (W5)
0x0C6E	0x780685  	MOV	W5, W13
0x0C70	0xEF2016  	CLR	W11
0x0C72	0xEF2018  	CLR	W12
0x0C74	0xEF2014  	CLR	W10
0x0C76	0x07FCD0  	RCALL	_CAN1SetFilter
;__Lib_CAN_12.c,883 :: 		
0x0C78	0x780685  	MOV	W5, W13
; FilterConfig1 end address is: 10 (W5)
0x0C7A	0xEF2016  	CLR	W11
0x0C7C	0xEF2018  	CLR	W12
0x0C7E	0x20001A  	MOV	#1, W10
0x0C80	0x07FCCB  	RCALL	_CAN1SetFilter
;__Lib_CAN_12.c,884 :: 		
0x0C82	0x780684  	MOV	W4, W13
0x0C84	0xEF2016  	CLR	W11
0x0C86	0xEF2018  	CLR	W12
0x0C88	0x20002A  	MOV	#2, W10
0x0C8A	0x07FCC6  	RCALL	_CAN1SetFilter
;__Lib_CAN_12.c,885 :: 		
0x0C8C	0x780684  	MOV	W4, W13
0x0C8E	0xEF2016  	CLR	W11
0x0C90	0xEF2018  	CLR	W12
0x0C92	0x20003A  	MOV	#3, W10
0x0C94	0x07FCC1  	RCALL	_CAN1SetFilter
;__Lib_CAN_12.c,886 :: 		
0x0C96	0x780684  	MOV	W4, W13
0x0C98	0xEF2016  	CLR	W11
0x0C9A	0xEF2018  	CLR	W12
0x0C9C	0x20004A  	MOV	#4, W10
0x0C9E	0x07FCBC  	RCALL	_CAN1SetFilter
;__Lib_CAN_12.c,887 :: 		
0x0CA0	0x780684  	MOV	W4, W13
; FilterConfig2 end address is: 8 (W4)
0x0CA2	0xEF2016  	CLR	W11
0x0CA4	0xEF2018  	CLR	W12
0x0CA6	0x20005A  	MOV	#5, W10
0x0CA8	0x07FCB7  	RCALL	_CAN1SetFilter
;__Lib_CAN_12.c,890 :: 		
0x0CAA	0x200FFB  	MOV	#255, W11
0x0CAC	0xEF2014  	CLR	W10
0x0CAE	0x07FDF9  	RCALL	_CAN1SetOperationMode
;__Lib_CAN_12.c,891 :: 		
L_end_CAN1Initialize:
0x0CB0	0x7806CF  	POP	W13
0x0CB2	0x78064F  	POP	W12
0x0CB4	0x7805CF  	POP	W11
0x0CB6	0x78054F  	POP	W10
0x0CB8	0xFA8000  	ULNK
0x0CBA	0x060000  	RETURN
; end of _CAN1Initialize
_CAN1SetOperationMode:
0x08A2	0xFA0000  	LNK	#0
;__Lib_CAN_12.c,340 :: 		
;__Lib_CAN_12.c,341 :: 		
0x08A4	0xE20016  	CP0	W11
0x08A6	0x320017  	BRA Z	L_CAN1SetOperationMode13
L__CAN1SetOperationMode133:
;__Lib_CAN_12.c,343 :: 		
0x08A8	0x78008A  	MOV	W10, W1
0x08AA	0xB3C080  	MOV.B	#8, W0
0x08AC	0xFB0000  	SE	W0, W0
0x08AE	0xDD0880  	SL	W1, W0, W1
0x08B0	0x203900  	MOV	#lo_addr(C1CTRLbits), W0
0x08B2	0x688090  	XOR	W1, [W0], W1
0x08B4	0x207000  	MOV	#1792, W0
0x08B6	0x608080  	AND	W1, W0, W1
0x08B8	0x203900  	MOV	#lo_addr(C1CTRLbits), W0
0x08BA	0x688090  	XOR	W1, [W0], W1
0x08BC	0x881C81  	MOV	W1, C1CTRLbits
;__Lib_CAN_12.c,345 :: 		
L_CAN1SetOperationMode14:
0x08BE	0x203900  	MOV	#lo_addr(C1CTRLbits), W0
0x08C0	0x784010  	MOV.B	[W0], W0
0x08C2	0x784080  	MOV.B	W0, W1
0x08C4	0xB3CE00  	MOV.B	#224, W0
0x08C6	0x60C080  	AND.B	W1, W0, W1
0x08C8	0xFB8001  	ZE	W1, W0
0x08CA	0xDE00C5  	LSR	W0, #5, W1
0x08CC	0xFB8001  	ZE	W1, W0
0x08CE	0xE1000A  	CP	W0, W10
0x08D0	0x320001  	BRA Z	L_CAN1SetOperationMode15
L__CAN1SetOperationMode134:
0x08D2	0x37FFF5  	BRA	L_CAN1SetOperationMode14
L_CAN1SetOperationMode15:
;__Lib_CAN_12.c,346 :: 		
0x08D4	0x37000B  	BRA	L_CAN1SetOperationMode16
L_CAN1SetOperationMode13:
;__Lib_CAN_12.c,349 :: 		
0x08D6	0x78008A  	MOV	W10, W1
0x08D8	0xB3C080  	MOV.B	#8, W0
0x08DA	0xFB0000  	SE	W0, W0
0x08DC	0xDD0880  	SL	W1, W0, W1
0x08DE	0x203900  	MOV	#lo_addr(C1CTRLbits), W0
0x08E0	0x688090  	XOR	W1, [W0], W1
0x08E2	0x207000  	MOV	#1792, W0
0x08E4	0x608080  	AND	W1, W0, W1
0x08E6	0x203900  	MOV	#lo_addr(C1CTRLbits), W0
0x08E8	0x688090  	XOR	W1, [W0], W1
0x08EA	0x881C81  	MOV	W1, C1CTRLbits
;__Lib_CAN_12.c,351 :: 		
L_CAN1SetOperationMode16:
;__Lib_CAN_12.c,352 :: 		
L_end_CAN1SetOperationMode:
0x08EC	0xFA8000  	ULNK
0x08EE	0x060000  	RETURN
; end of _CAN1SetOperationMode
_CAN1SetBaudRate:
0x078C	0xFA0000  	LNK	#0
;__Lib_CAN_12.c,432 :: 		
; PROPSEG start address is: 2 (W1)
0x078E	0x97B8CE  	MOV	[W14-8], W1
; CAN_CONFIG_FLAGS start address is: 8 (W4)
0x0790	0x97BA3E  	MOV	[W14-10], W4
;__Lib_CAN_12.c,435 :: 		
0x0792	0x550061  	SUB	W10, #1, W0
0x0794	0x780500  	MOV	W0, W10
;__Lib_CAN_12.c,436 :: 		
0x0796	0x558061  	SUB	W11, #1, W0
0x0798	0x780580  	MOV	W0, W11
;__Lib_CAN_12.c,437 :: 		
0x079A	0x560061  	SUB	W12, #1, W0
0x079C	0x780600  	MOV	W0, W12
;__Lib_CAN_12.c,438 :: 		
0x079E	0x568061  	SUB	W13, #1, W0
0x07A0	0x780680  	MOV	W0, W13
;__Lib_CAN_12.c,439 :: 		
; PROPSEG start address is: 10 (W5)
0x07A2	0x5082E1  	SUB	W1, #1, W5
; PROPSEG end address is: 2 (W1)
;__Lib_CAN_12.c,441 :: 		
0x07A4	0x78418A  	MOV.B	W10, W3
0x07A6	0xB3C060  	MOV.B	#6, W0
0x07A8	0xFB8083  	ZE	W3, W1
0x07AA	0xFB0100  	SE	W0, W2
0x07AC	0xDD0982  	SL	W1, W2, W3
0x07AE	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x07B0	0x69C190  	XOR.B	W3, [W0], W3
0x07B2	0xB3CC00  	MOV.B	#192, W0
0x07B4	0x61C180  	AND.B	W3, W0, W3
0x07B6	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x07B8	0x69C190  	XOR.B	W3, [W0], W3
0x07BA	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x07BC	0x784803  	MOV.B	W3, [W0]
;__Lib_CAN_12.c,442 :: 		
0x07BE	0x78408B  	MOV.B	W11, W1
0x07C0	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x07C2	0x68C090  	XOR.B	W1, [W0], W1
0x07C4	0xB3C3F0  	MOV.B	#63, W0
0x07C6	0x60C080  	AND.B	W1, W0, W1
0x07C8	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x07CA	0x68C090  	XOR.B	W1, [W0], W1
0x07CC	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x07CE	0x784801  	MOV.B	W1, [W0]
;__Lib_CAN_12.c,443 :: 		
0x07D0	0x784085  	MOV.B	W5, W1
; PROPSEG end address is: 10 (W5)
0x07D2	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x07D4	0x68C090  	XOR.B	W1, [W0], W1
0x07D6	0x60C0E7  	AND.B	W1, #7, W1
0x07D8	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x07DA	0x68C090  	XOR.B	W1, [W0], W1
0x07DC	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x07DE	0x784801  	MOV.B	W1, [W0]
;__Lib_CAN_12.c,444 :: 		
0x07E0	0x78418C  	MOV.B	W12, W3
0x07E2	0xB3C030  	MOV.B	#3, W0
0x07E4	0xFB8083  	ZE	W3, W1
0x07E6	0xFB0100  	SE	W0, W2
0x07E8	0xDD0982  	SL	W1, W2, W3
0x07EA	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x07EC	0x69C190  	XOR.B	W3, [W0], W3
0x07EE	0xB3C380  	MOV.B	#56, W0
0x07F0	0x61C180  	AND.B	W3, W0, W3
0x07F2	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x07F4	0x69C190  	XOR.B	W3, [W0], W3
0x07F6	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x07F8	0x784803  	MOV.B	W3, [W0]
;__Lib_CAN_12.c,445 :: 		
0x07FA	0x78008D  	MOV	W13, W1
0x07FC	0xB3C080  	MOV.B	#8, W0
0x07FE	0xFB0000  	SE	W0, W0
0x0800	0xDD0880  	SL	W1, W0, W1
0x0802	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x0804	0x688090  	XOR	W1, [W0], W1
0x0806	0x207000  	MOV	#1792, W0
0x0808	0x608080  	AND	W1, W0, W1
0x080A	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x080C	0x688090  	XOR	W1, [W0], W1
0x080E	0x881CA1  	MOV	W1, C1CFG2bits
;__Lib_CAN_12.c,447 :: 		
0x0810	0xAF4008  	BTSC	W4, #2
0x0812	0x370001  	BRA	L_CAN1SetBaudRate17
;__Lib_CAN_12.c,448 :: 		
0x0814	0xA8C394  	BSET	C1CFG2bits, #6
L_CAN1SetBaudRate17:
;__Lib_CAN_12.c,450 :: 		
0x0816	0xAE0008  	BTSS	W4, #0
0x0818	0x370001  	BRA	L_CAN1SetBaudRate18
;__Lib_CAN_12.c,451 :: 		
0x081A	0xA8E394  	BSET	C1CFG2bits, #7
L_CAN1SetBaudRate18:
;__Lib_CAN_12.c,453 :: 		
0x081C	0xAE2008  	BTSS	W4, #1
0x081E	0x370001  	BRA	L_CAN1SetBaudRate19
; CAN_CONFIG_FLAGS end address is: 8 (W4)
;__Lib_CAN_12.c,454 :: 		
0x0820	0xA8C395  	BSET	C1CFG2bits, #14
L_CAN1SetBaudRate19:
;__Lib_CAN_12.c,455 :: 		
L_end_CAN1SetBaudRate:
0x0822	0xFA8000  	ULNK
0x0824	0x060000  	RETURN
; end of _CAN1SetBaudRate
_CAN1SetMask:
0x05F0	0xFA0000  	LNK	#0
;__Lib_CAN_12.c,476 :: 		
;__Lib_CAN_12.c,478 :: 		
0x05F2	0x781F8A  	PUSH	W10
0x05F4	0x781F8D  	PUSH	W13
0x05F6	0xE15060  	CP	W10, #0
0x05F8	0x3A0006  	BRA NZ	L_CAN1SetMask20
L__CAN1SetMask138:
;__Lib_CAN_12.c,479 :: 		
0x05FA	0x781F8D  	PUSH	W13
0x05FC	0x20330A  	MOV	#lo_addr(C1RXM0SID), W10
0x05FE	0xEF201A  	CLR	W13
0x0600	0x07FF61  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x0602	0xB1002F  	SUB	#2, W15
0x0604	0x370005  	BRA	L_CAN1SetMask21
L_CAN1SetMask20:
;__Lib_CAN_12.c,482 :: 		
0x0606	0x781F8D  	PUSH	W13
0x0608	0x20338A  	MOV	#lo_addr(C1RXM1SID), W10
0x060A	0xEF201A  	CLR	W13
0x060C	0x07FF5B  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x060E	0xB1002F  	SUB	#2, W15
L_CAN1SetMask21:
;__Lib_CAN_12.c,483 :: 		
L_end_CAN1SetMask:
0x0610	0x7806CF  	POP	W13
0x0612	0x78054F  	POP	W10
0x0614	0xFA8000  	ULNK
0x0616	0x060000  	RETURN
; end of _CAN1SetMask
__Lib_CAN_12_CAN1IDToRegs:
0x04C4	0xFA0000  	LNK	#0
;__Lib_CAN_12.c,253 :: 		
; CAN_CONFIG_FLAGS start address is: 2 (W1)
0x04C6	0x97B8CE  	MOV	[W14-8], W1
;__Lib_CAN_12.c,254 :: 		
0x04C8	0x37008B  	BRA	L___Lib_CAN_12_CAN1IDToRegs0
;__Lib_CAN_12.c,255 :: 		
L___Lib_CAN_12_CAN1IDToRegs2:
;__Lib_CAN_12.c,256 :: 		
0x04CA	0xAE6002  	BTSS	W1, #3
0x04CC	0x370003  	BRA	L___Lib_CAN_12_CAN1IDToRegs3
; CAN_CONFIG_FLAGS end address is: 2 (W1)
;__Lib_CAN_12.c,258 :: 		
0x04CE	0xDD5842  	SL	W11, #2, W0
0x04D0	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,260 :: 		
0x04D2	0x370019  	BRA	L___Lib_CAN_12_CAN1IDToRegs4
L___Lib_CAN_12_CAN1IDToRegs3:
;__Lib_CAN_12.c,262 :: 		
0x04D4	0x200163  	MOV	#lo_addr(W11), W3
0x04D6	0x418062  	ADD	W3, #2, W0
0x04D8	0x780090  	MOV	[W0], W1
0x04DA	0x21FFC0  	MOV	#8188, W0
0x04DC	0x608D00  	AND	W1, W0, [W10]
;__Lib_CAN_12.c,263 :: 		
0x04DE	0x78001A  	MOV	[W10], W0
0x04E0	0x700061  	IOR	W0, #1, W0
0x04E2	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,264 :: 		
0x04E4	0x450162  	ADD	W10, #2, W2
0x04E6	0x780502  	MOV	W2, W10
;__Lib_CAN_12.c,265 :: 		
0x04E8	0x418062  	ADD	W3, #2, W0
0x04EA	0x780010  	MOV	[W0], W0
0x04EC	0x600063  	AND	W0, #3, W0
0x04EE	0xDD00CA  	SL	W0, #10, W1
0x04F0	0xDE5846  	LSR	W11, #6, W0
0x04F2	0x708900  	IOR	W1, W0, [W2]
;__Lib_CAN_12.c,266 :: 		
0x04F4	0x450162  	ADD	W10, #2, W2
0x04F6	0x780502  	MOV	W2, W10
;__Lib_CAN_12.c,267 :: 		
0x04F8	0x780092  	MOV	[W2], W1
0x04FA	0x203FF0  	MOV	#1023, W0
0x04FC	0x608900  	AND	W1, W0, [W2]
;__Lib_CAN_12.c,268 :: 		
0x04FE	0x2003F0  	MOV	#63, W0
0x0500	0x658000  	AND	W11, W0, W0
0x0502	0xDD004A  	SL	W0, #10, W0
0x0504	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,269 :: 		
L___Lib_CAN_12_CAN1IDToRegs4:
;__Lib_CAN_12.c,270 :: 		
0x0506	0x370072  	BRA	L___Lib_CAN_12_CAN1IDToRegs1
;__Lib_CAN_12.c,272 :: 		
L___Lib_CAN_12_CAN1IDToRegs5:
;__Lib_CAN_12.c,273 :: 		
; CAN_CONFIG_FLAGS start address is: 2 (W1)
0x0508	0xAEA002  	BTSS	W1, #5
0x050A	0x37001F  	BRA	L___Lib_CAN_12_CAN1IDToRegs6
;__Lib_CAN_12.c,274 :: 		
0x050C	0xAE6002  	BTSS	W1, #3
0x050E	0x370006  	BRA	L___Lib_CAN_12_CAN1IDToRegs7
; CAN_CONFIG_FLAGS end address is: 2 (W1)
;__Lib_CAN_12.c,276 :: 		
0x0510	0xDD5842  	SL	W11, #2, W0
0x0512	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,277 :: 		
0x0514	0x78001A  	MOV	[W10], W0
0x0516	0x700061  	IOR	W0, #1, W0
0x0518	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,278 :: 		
0x051A	0x370016  	BRA	L___Lib_CAN_12_CAN1IDToRegs8
L___Lib_CAN_12_CAN1IDToRegs7:
;__Lib_CAN_12.c,280 :: 		
0x051C	0x200163  	MOV	#lo_addr(W11), W3
0x051E	0x418062  	ADD	W3, #2, W0
0x0520	0x780090  	MOV	[W0], W1
0x0522	0x21FFC0  	MOV	#8188, W0
0x0524	0x608D00  	AND	W1, W0, [W10]
;__Lib_CAN_12.c,281 :: 		
0x0526	0x78001A  	MOV	[W10], W0
0x0528	0x700061  	IOR	W0, #1, W0
0x052A	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,282 :: 		
0x052C	0x450162  	ADD	W10, #2, W2
0x052E	0x780502  	MOV	W2, W10
;__Lib_CAN_12.c,283 :: 		
0x0530	0x418062  	ADD	W3, #2, W0
0x0532	0x780010  	MOV	[W0], W0
0x0534	0x600063  	AND	W0, #3, W0
0x0536	0xDD00CA  	SL	W0, #10, W1
0x0538	0xDE5846  	LSR	W11, #6, W0
0x053A	0x708900  	IOR	W1, W0, [W2]
;__Lib_CAN_12.c,284 :: 		
0x053C	0x4500E2  	ADD	W10, #2, W1
0x053E	0x780501  	MOV	W1, W10
;__Lib_CAN_12.c,285 :: 		
0x0540	0x2003F0  	MOV	#63, W0
0x0542	0x658000  	AND	W11, W0, W0
0x0544	0xDD004A  	SL	W0, #10, W0
0x0546	0x780880  	MOV	W0, [W1]
;__Lib_CAN_12.c,286 :: 		
L___Lib_CAN_12_CAN1IDToRegs8:
;__Lib_CAN_12.c,287 :: 		
0x0548	0x370016  	BRA	L___Lib_CAN_12_CAN1IDToRegs9
L___Lib_CAN_12_CAN1IDToRegs6:
;__Lib_CAN_12.c,289 :: 		
0x054A	0x200163  	MOV	#lo_addr(W11), W3
0x054C	0x418062  	ADD	W3, #2, W0
0x054E	0x780090  	MOV	[W0], W1
0x0550	0x21FFC0  	MOV	#8188, W0
0x0552	0x608D00  	AND	W1, W0, [W10]
;__Lib_CAN_12.c,290 :: 		
0x0554	0x78009A  	MOV	[W10], W1
0x0556	0x2FFFE0  	MOV	#65534, W0
0x0558	0x608D00  	AND	W1, W0, [W10]
;__Lib_CAN_12.c,291 :: 		
0x055A	0x450162  	ADD	W10, #2, W2
0x055C	0x780502  	MOV	W2, W10
;__Lib_CAN_12.c,292 :: 		
0x055E	0x418062  	ADD	W3, #2, W0
0x0560	0x780010  	MOV	[W0], W0
0x0562	0x600063  	AND	W0, #3, W0
0x0564	0xDD00CA  	SL	W0, #10, W1
0x0566	0xDE5846  	LSR	W11, #6, W0
0x0568	0x708900  	IOR	W1, W0, [W2]
;__Lib_CAN_12.c,293 :: 		
0x056A	0x4500E2  	ADD	W10, #2, W1
0x056C	0x780501  	MOV	W1, W10
;__Lib_CAN_12.c,294 :: 		
0x056E	0x2003F0  	MOV	#63, W0
0x0570	0x658000  	AND	W11, W0, W0
0x0572	0xDD004A  	SL	W0, #10, W0
0x0574	0x780880  	MOV	W0, [W1]
;__Lib_CAN_12.c,295 :: 		
L___Lib_CAN_12_CAN1IDToRegs9:
;__Lib_CAN_12.c,296 :: 		
0x0576	0x37003A  	BRA	L___Lib_CAN_12_CAN1IDToRegs1
;__Lib_CAN_12.c,298 :: 		
L___Lib_CAN_12_CAN1IDToRegs10:
;__Lib_CAN_12.c,299 :: 		
; CAN_CONFIG_FLAGS start address is: 2 (W1)
0x0578	0xAE6002  	BTSS	W1, #3
0x057A	0x37000C  	BRA	L___Lib_CAN_12_CAN1IDToRegs11
; CAN_CONFIG_FLAGS end address is: 2 (W1)
;__Lib_CAN_12.c,301 :: 		
0x057C	0x2003F0  	MOV	#63, W0
0x057E	0x658000  	AND	W11, W0, W0
0x0580	0xDD0042  	SL	W0, #2, W0
0x0582	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,302 :: 		
0x0584	0x2FFC00  	MOV	#65472, W0
0x0586	0x658000  	AND	W11, W0, W0
0x0588	0xDD0045  	SL	W0, #5, W0
0x058A	0x700D1A  	IOR	W0, [W10], [W10]
;__Lib_CAN_12.c,303 :: 		
0x058C	0x78009A  	MOV	[W10], W1
0x058E	0x2FFFE0  	MOV	#65534, W0
0x0590	0x608D00  	AND	W1, W0, [W10]
;__Lib_CAN_12.c,304 :: 		
0x0592	0x370025  	BRA	L___Lib_CAN_12_CAN1IDToRegs12
L___Lib_CAN_12_CAN1IDToRegs11:
;__Lib_CAN_12.c,306 :: 		
0x0594	0x200163  	MOV	#lo_addr(W11), W3
0x0596	0x418062  	ADD	W3, #2, W0
0x0598	0x780090  	MOV	[W0], W1
0x059A	0x21F000  	MOV	#7936, W0
0x059C	0x608000  	AND	W1, W0, W0
0x059E	0xDD0043  	SL	W0, #3, W0
0x05A0	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,307 :: 		
0x05A2	0x4180E2  	ADD	W3, #2, W1
0x05A4	0x200FC0  	MOV	#252, W0
0x05A6	0x600011  	AND	W0, [W1], W0
0x05A8	0x700D1A  	IOR	W0, [W10], [W10]
;__Lib_CAN_12.c,308 :: 		
0x05AA	0x78001A  	MOV	[W10], W0
0x05AC	0x700061  	IOR	W0, #1, W0
0x05AE	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,309 :: 		
0x05B0	0x450162  	ADD	W10, #2, W2
0x05B2	0x780502  	MOV	W2, W10
;__Lib_CAN_12.c,310 :: 		
0x05B4	0x418062  	ADD	W3, #2, W0
0x05B6	0x780010  	MOV	[W0], W0
0x05B8	0x600063  	AND	W0, #3, W0
0x05BA	0xDD00CE  	SL	W0, #14, W1
0x05BC	0x2C0000  	MOV	#49152, W0
0x05BE	0x658000  	AND	W11, W0, W0
0x05C0	0xDE0042  	LSR	W0, #2, W0
0x05C2	0x708900  	IOR	W1, W0, [W2]
;__Lib_CAN_12.c,311 :: 		
0x05C4	0x23FC00  	MOV	#16320, W0
0x05C6	0x658000  	AND	W11, W0, W0
0x05C8	0xDE0046  	LSR	W0, #6, W0
0x05CA	0x700D1A  	IOR	W0, [W10], [W10]
;__Lib_CAN_12.c,312 :: 		
0x05CC	0x4500E2  	ADD	W10, #2, W1
0x05CE	0x780501  	MOV	W1, W10
;__Lib_CAN_12.c,313 :: 		
0x05D0	0x2003F0  	MOV	#63, W0
0x05D2	0x658000  	AND	W11, W0, W0
0x05D4	0xDD004A  	SL	W0, #10, W0
0x05D6	0x780880  	MOV	W0, [W1]
;__Lib_CAN_12.c,314 :: 		
0x05D8	0x78009A  	MOV	[W10], W1
0x05DA	0x201800  	MOV	#384, W0
0x05DC	0x708D00  	IOR	W1, W0, [W10]
;__Lib_CAN_12.c,315 :: 		
L___Lib_CAN_12_CAN1IDToRegs12:
;__Lib_CAN_12.c,316 :: 		
0x05DE	0x370006  	BRA	L___Lib_CAN_12_CAN1IDToRegs1
;__Lib_CAN_12.c,318 :: 		
L___Lib_CAN_12_CAN1IDToRegs0:
; CAN_CONFIG_FLAGS start address is: 2 (W1)
0x05E0	0xE16861  	CP	W13, #1
0x05E2	0x32FF73  	BRA Z	L___Lib_CAN_12_CAN1IDToRegs2
L___Lib_CAN_12_CAN1IDToRegs129:
0x05E4	0xE16860  	CP	W13, #0
0x05E6	0x32FF90  	BRA Z	L___Lib_CAN_12_CAN1IDToRegs5
L___Lib_CAN_12_CAN1IDToRegs130:
0x05E8	0xE16862  	CP	W13, #2
0x05EA	0x32FFC6  	BRA Z	L___Lib_CAN_12_CAN1IDToRegs10
L___Lib_CAN_12_CAN1IDToRegs131:
; CAN_CONFIG_FLAGS end address is: 2 (W1)
L___Lib_CAN_12_CAN1IDToRegs1:
;__Lib_CAN_12.c,319 :: 		
L_end_CAN1IDToRegs:
0x05EC	0xFA8000  	ULNK
0x05EE	0x060000  	RETURN
; end of __Lib_CAN_12_CAN1IDToRegs
_CAN1SetFilter:
0x0618	0xFA0000  	LNK	#0
;__Lib_CAN_12.c,505 :: 		
;__Lib_CAN_12.c,508 :: 		
0x061A	0x781F8A  	PUSH	W10
0x061C	0x781F8D  	PUSH	W13
0x061E	0x370024  	BRA	L_CAN1SetFilter22
;__Lib_CAN_12.c,509 :: 		
L_CAN1SetFilter24:
;__Lib_CAN_12.c,510 :: 		
0x0620	0x781F8D  	PUSH	W13
0x0622	0x20300A  	MOV	#lo_addr(C1RXF0SID), W10
0x0624	0x20001D  	MOV	#1, W13
0x0626	0x07FF4E  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x0628	0xB1002F  	SUB	#2, W15
;__Lib_CAN_12.c,511 :: 		
0x062A	0x370029  	BRA	L_CAN1SetFilter23
;__Lib_CAN_12.c,512 :: 		
L_CAN1SetFilter25:
;__Lib_CAN_12.c,513 :: 		
0x062C	0x781F8D  	PUSH	W13
0x062E	0x20308A  	MOV	#lo_addr(C1RXF1SID), W10
0x0630	0x20001D  	MOV	#1, W13
0x0632	0x07FF48  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x0634	0xB1002F  	SUB	#2, W15
;__Lib_CAN_12.c,514 :: 		
0x0636	0x370023  	BRA	L_CAN1SetFilter23
;__Lib_CAN_12.c,515 :: 		
L_CAN1SetFilter26:
;__Lib_CAN_12.c,516 :: 		
0x0638	0x781F8D  	PUSH	W13
0x063A	0x20310A  	MOV	#lo_addr(C1RXF2SID), W10
0x063C	0x20001D  	MOV	#1, W13
0x063E	0x07FF42  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x0640	0xB1002F  	SUB	#2, W15
;__Lib_CAN_12.c,517 :: 		
0x0642	0x37001D  	BRA	L_CAN1SetFilter23
;__Lib_CAN_12.c,518 :: 		
L_CAN1SetFilter27:
;__Lib_CAN_12.c,519 :: 		
0x0644	0x781F8D  	PUSH	W13
0x0646	0x20318A  	MOV	#lo_addr(C1RXF3SID), W10
0x0648	0x20001D  	MOV	#1, W13
0x064A	0x07FF3C  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x064C	0xB1002F  	SUB	#2, W15
;__Lib_CAN_12.c,520 :: 		
0x064E	0x370017  	BRA	L_CAN1SetFilter23
;__Lib_CAN_12.c,521 :: 		
L_CAN1SetFilter28:
;__Lib_CAN_12.c,522 :: 		
0x0650	0x781F8D  	PUSH	W13
0x0652	0x20320A  	MOV	#lo_addr(C1RXF4SID), W10
0x0654	0x20001D  	MOV	#1, W13
0x0656	0x07FF36  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x0658	0xB1002F  	SUB	#2, W15
;__Lib_CAN_12.c,523 :: 		
0x065A	0x370011  	BRA	L_CAN1SetFilter23
;__Lib_CAN_12.c,524 :: 		
L_CAN1SetFilter29:
;__Lib_CAN_12.c,525 :: 		
0x065C	0x781F8D  	PUSH	W13
0x065E	0x20328A  	MOV	#lo_addr(C1RXF5SID), W10
0x0660	0x20001D  	MOV	#1, W13
0x0662	0x07FF30  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x0664	0xB1002F  	SUB	#2, W15
;__Lib_CAN_12.c,526 :: 		
0x0666	0x37000B  	BRA	L_CAN1SetFilter23
L_CAN1SetFilter22:
0x0668	0xE15060  	CP	W10, #0
0x066A	0x32FFDA  	BRA Z	L_CAN1SetFilter24
L__CAN1SetFilter140:
0x066C	0xE15061  	CP	W10, #1
0x066E	0x32FFDE  	BRA Z	L_CAN1SetFilter25
L__CAN1SetFilter141:
0x0670	0xE15062  	CP	W10, #2
0x0672	0x32FFE2  	BRA Z	L_CAN1SetFilter26
L__CAN1SetFilter142:
0x0674	0xE15063  	CP	W10, #3
0x0676	0x32FFE6  	BRA Z	L_CAN1SetFilter27
L__CAN1SetFilter143:
0x0678	0xE15064  	CP	W10, #4
0x067A	0x32FFEA  	BRA Z	L_CAN1SetFilter28
L__CAN1SetFilter144:
0x067C	0x37FFEF  	BRA	L_CAN1SetFilter29
L_CAN1SetFilter23:
;__Lib_CAN_12.c,527 :: 		
L_end_CAN1SetFilter:
0x067E	0x7806CF  	POP	W13
0x0680	0x78054F  	POP	W10
0x0682	0xFA8000  	ULNK
0x0684	0x060000  	RETURN
; end of _CAN1SetFilter
_Can_initInterrupt:
;can.c,149 :: 		void Can_initInterrupt(void) {
;can.c,156 :: 		IEC1BITS.C1IE = 1;
0x0CBC	0xA8608F  	BSET	IEC1bits, #11
;can.c,157 :: 		C1INTEBITS.RXB0IE = 1;
0x0CBE	0xA80398  	BSET.B	C1INTEbits, #0
;can.c,158 :: 		C1INTEBITS.RXB1IE = 1;
0x0CC0	0xA82398  	BSET.B	C1INTEbits, #1
;can.c,160 :: 		}
L_end_Can_initInterrupt:
0x0CC2	0x060000  	RETURN
; end of _Can_initInterrupt
_Can_setWritePriority:
;can.c,114 :: 		void Can_setWritePriority(unsigned int txPriority) {
;can.c,115 :: 		can_txPriority = txPriority;
0x0CC4	0x88404A  	MOV	W10, _can_txPriority
;can.c,116 :: 		}
L_end_Can_setWritePriority:
0x0CC6	0x060000  	RETURN
; end of _Can_setWritePriority
_GearMotor_init:
;gearmotor.c,7 :: 		void GearMotor_init(void) {
;gearmotor.c,8 :: 		GEARMOTOR_IN1_Direction = OUTPUT;
0x12CE	0xA902C6  	BCLR	TRISB0_bit, BitPos(TRISB0_bit+0)
;gearmotor.c,9 :: 		GEARMOTOR_IN2_Direction = OUTPUT;
0x12D0	0xA922CC  	BCLR	TRISC1_bit, BitPos(TRISC1_bit+0)
;gearmotor.c,10 :: 		GEARMOTOR_INH_Direction = OUTPUT;
0x12D2	0xA922C6  	BCLR	TRISB1_bit, BitPos(TRISB1_bit+0)
;gearmotor.c,11 :: 		GearMotor_release();
0x12D4	0x07FC23  	RCALL	_GearMotor_release
;gearmotor.c,12 :: 		}
L_end_GearMotor_init:
0x12D6	0x060000  	RETURN
; end of _GearMotor_init
_GearMotor_release:
;gearmotor.c,32 :: 		void GearMotor_release(void) {
;gearmotor.c,33 :: 		GEARMOTOR_INH_Pin = 0;
0x0B1C	0xA922CA  	BCLR	LATB1_bit, BitPos(LATB1_bit+0)
;gearmotor.c,34 :: 		}
L_end_GearMotor_release:
0x0B1E	0x060000  	RETURN
; end of _GearMotor_release
_ClutchMotor_init:
;clutchmotor.c,16 :: 		void ClutchMotor_init(void) {
;clutchmotor.c,17 :: 		setTimer(TIMER2_DEVICE, CLUTCHMOTOR_PWM_PERIOD);
0x12B6	0x781F8A  	PUSH	W10
0x12B8	0x781F8B  	PUSH	W11
0x12BA	0x781F8C  	PUSH	W12
0x12BC	0x2D70AB  	MOV	#55050, W11
0x12BE	0x23CA3C  	MOV	#15523, W12
0x12C0	0xB3C02A  	MOV.B	#2, W10
0x12C2	0x07FC34  	RCALL	_setTimer
;clutchmotor.c,18 :: 		ClutchMotor_setupPWM();
0x12C4	0x07FD04  	RCALL	_ClutchMotor_setupPWM
;clutchmotor.c,19 :: 		}
L_end_ClutchMotor_init:
0x12C6	0x78064F  	POP	W12
0x12C8	0x7805CF  	POP	W11
0x12CA	0x78054F  	POP	W10
0x12CC	0x060000  	RETURN
; end of _ClutchMotor_init
_setTimer:
;dspic.c,136 :: 		void setTimer(unsigned char device, double timePeriod) {
;dspic.c,138 :: 		setInterruptPriority(device, MEDIUM_PRIORITY);
0x0B2C	0x781F8A  	PUSH	W10
0x0B2E	0x781F8B  	PUSH	W11
0x0B30	0x781F8C  	PUSH	W12
0x0B32	0x781F8B  	PUSH	W11
0x0B34	0x781F8C  	PUSH	W12
0x0B36	0xB3C04B  	MOV.B	#4, W11
0x0B38	0x07FDA6  	RCALL	_setInterruptPriority
0x0B3A	0x78064F  	POP	W12
0x0B3C	0x7805CF  	POP	W11
;dspic.c,140 :: 		prescalerIndex = getTimerPrescaler(timePeriod);
0x0B3E	0x781F8B  	PUSH	W11
0x0B40	0x781F8C  	PUSH	W12
0x0B42	0x781F8A  	PUSH	W10
0x0B44	0x78050B  	MOV	W11, W10
0x0B46	0x78058C  	MOV	W12, W11
0x0B48	0x07FE05  	RCALL	_getTimerPrescaler
0x0B4A	0x78054F  	POP	W10
0x0B4C	0x78064F  	POP	W12
0x0B4E	0x7805CF  	POP	W11
; prescalerIndex start address is: 2 (W1)
0x0B50	0x784080  	MOV.B	W0, W1
;dspic.c,141 :: 		switch (device) {
0x0B52	0x370037  	BRA	L_setTimer46
;dspic.c,142 :: 		case TIMER1_DEVICE:
L_setTimer48:
;dspic.c,143 :: 		TIMER1_PERIOD = getTimerPeriod(timePeriod, prescalerIndex);
0x0B54	0x78050B  	MOV	W11, W10
0x0B56	0x78058C  	MOV	W12, W11
; prescalerIndex end address is: 2 (W1)
0x0B58	0x784601  	MOV.B	W1, W12
0x0B5A	0x07FE84  	RCALL	_getTimerPeriod
0x0B5C	0xB7A102  	MOV	WREG, PR1
;dspic.c,144 :: 		TIMER1_ENABLE_INTERRUPT = TRUE;
0x0B5E	0xA8608C  	BSET	IEC0bits, #3
;dspic.c,145 :: 		T1CON = 0x8004;
0x0B60	0x280040  	MOV	#32772, W0
0x0B62	0xB7A104  	MOV	WREG, T1CON
;dspic.c,148 :: 		break;
0x0B64	0x370034  	BRA	L_setTimer47
;dspic.c,149 :: 		case TIMER2_DEVICE:
L_setTimer49:
;dspic.c,150 :: 		TIMER2_PERIOD = getTimerPeriod(timePeriod, prescalerIndex);
; prescalerIndex start address is: 2 (W1)
0x0B66	0x781F81  	PUSH	W1
0x0B68	0x78050B  	MOV	W11, W10
0x0B6A	0x78058C  	MOV	W12, W11
0x0B6C	0x784601  	MOV.B	W1, W12
0x0B6E	0x07FE7A  	RCALL	_getTimerPeriod
0x0B70	0x7800CF  	POP	W1
0x0B72	0xB7A10C  	MOV	WREG, PR2
;dspic.c,151 :: 		TIMER2_ENABLE_INTERRUPT = TRUE;
0x0B74	0xA8C08C  	BSET	IEC0bits, #6
;dspic.c,152 :: 		TIMER2_ENABLE = TRUE;
0x0B76	0xA8E111  	BSET	T2CONbits, #15
;dspic.c,153 :: 		TIMER2_PRESCALER = prescalerIndex;
0x0B78	0x784181  	MOV.B	W1, W3
; prescalerIndex end address is: 2 (W1)
0x0B7A	0xB3C040  	MOV.B	#4, W0
0x0B7C	0xFB8083  	ZE	W3, W1
0x0B7E	0xFB0100  	SE	W0, W2
0x0B80	0xDD0982  	SL	W1, W2, W3
0x0B82	0x201100  	MOV	#lo_addr(T2CONbits), W0
0x0B84	0x69C190  	XOR.B	W3, [W0], W3
0x0B86	0xB3C300  	MOV.B	#48, W0
0x0B88	0x61C180  	AND.B	W3, W0, W3
0x0B8A	0x201100  	MOV	#lo_addr(T2CONbits), W0
0x0B8C	0x69C190  	XOR.B	W3, [W0], W3
0x0B8E	0x201100  	MOV	#lo_addr(T2CONbits), W0
0x0B90	0x784803  	MOV.B	W3, [W0]
;dspic.c,154 :: 		break;
0x0B92	0x37001D  	BRA	L_setTimer47
;dspic.c,155 :: 		case TIMER4_DEVICE:
L_setTimer50:
;dspic.c,156 :: 		TIMER4_PERIOD = getTimerPeriod(timePeriod, prescalerIndex);
; prescalerIndex start address is: 2 (W1)
0x0B94	0x781F81  	PUSH	W1
0x0B96	0x78050B  	MOV	W11, W10
0x0B98	0x78058C  	MOV	W12, W11
0x0B9A	0x784601  	MOV.B	W1, W12
0x0B9C	0x07FE63  	RCALL	_getTimerPeriod
0x0B9E	0x7800CF  	POP	W1
0x0BA0	0xB7A11A  	MOV	WREG, PR4
;dspic.c,157 :: 		TIMER4_ENABLE_INTERRUPT = TRUE;
0x0BA2	0xA8A08E  	BSET	IEC1bits, #5
;dspic.c,158 :: 		TIMER4_ENABLE = TRUE;
0x0BA4	0xA8E11F  	BSET	T4CONbits, #15
;dspic.c,159 :: 		TIMER4_PRESCALER = prescalerIndex;
0x0BA6	0x784181  	MOV.B	W1, W3
; prescalerIndex end address is: 2 (W1)
0x0BA8	0xB3C040  	MOV.B	#4, W0
0x0BAA	0xFB8083  	ZE	W3, W1
0x0BAC	0xFB0100  	SE	W0, W2
0x0BAE	0xDD0982  	SL	W1, W2, W3
0x0BB0	0x2011E0  	MOV	#lo_addr(T4CONbits), W0
0x0BB2	0x69C190  	XOR.B	W3, [W0], W3
0x0BB4	0xB3C300  	MOV.B	#48, W0
0x0BB6	0x61C180  	AND.B	W3, W0, W3
0x0BB8	0x2011E0  	MOV	#lo_addr(T4CONbits), W0
0x0BBA	0x69C190  	XOR.B	W3, [W0], W3
0x0BBC	0x2011E0  	MOV	#lo_addr(T4CONbits), W0
0x0BBE	0x784803  	MOV.B	W3, [W0]
;dspic.c,160 :: 		break;
0x0BC0	0x370006  	BRA	L_setTimer47
;dspic.c,161 :: 		}
L_setTimer46:
; prescalerIndex start address is: 2 (W1)
0x0BC2	0xE15461  	CP.B	W10, #1
0x0BC4	0x32FFC7  	BRA Z	L_setTimer48
L__setTimer100:
0x0BC6	0xE15462  	CP.B	W10, #2
0x0BC8	0x32FFCE  	BRA Z	L_setTimer49
L__setTimer101:
0x0BCA	0xE15463  	CP.B	W10, #3
0x0BCC	0x32FFE3  	BRA Z	L_setTimer50
L__setTimer102:
; prescalerIndex end address is: 2 (W1)
L_setTimer47:
;dspic.c,162 :: 		}
L_end_setTimer:
0x0BCE	0x78064F  	POP	W12
0x0BD0	0x7805CF  	POP	W11
0x0BD2	0x78054F  	POP	W10
0x0BD4	0x060000  	RETURN
; end of _setTimer
_setInterruptPriority:
;dspic.c,14 :: 		void setInterruptPriority(unsigned char device, unsigned char priority) {
;dspic.c,15 :: 		switch (device) {
0x0686	0x370056  	BRA	L_setInterruptPriority0
;dspic.c,16 :: 		case INT0_DEVICE:
L_setInterruptPriority2:
;dspic.c,17 :: 		INT0_PRIORITY = priority;
0x0688	0x78408B  	MOV.B	W11, W1
0x068A	0x200940  	MOV	#lo_addr(IPC0bits), W0
0x068C	0x68C090  	XOR.B	W1, [W0], W1
0x068E	0x60C0E7  	AND.B	W1, #7, W1
0x0690	0x200940  	MOV	#lo_addr(IPC0bits), W0
0x0692	0x68C090  	XOR.B	W1, [W0], W1
0x0694	0x200940  	MOV	#lo_addr(IPC0bits), W0
0x0696	0x784801  	MOV.B	W1, [W0]
;dspic.c,18 :: 		break;
0x0698	0x37005C  	BRA	L_setInterruptPriority1
;dspic.c,19 :: 		case INT1_DEVICE:
L_setInterruptPriority3:
;dspic.c,20 :: 		INT1_PRIORITY = priority;
0x069A	0x78408B  	MOV.B	W11, W1
0x069C	0x2009C0  	MOV	#lo_addr(IPC4bits), W0
0x069E	0x68C090  	XOR.B	W1, [W0], W1
0x06A0	0x60C0E7  	AND.B	W1, #7, W1
0x06A2	0x2009C0  	MOV	#lo_addr(IPC4bits), W0
0x06A4	0x68C090  	XOR.B	W1, [W0], W1
0x06A6	0x2009C0  	MOV	#lo_addr(IPC4bits), W0
0x06A8	0x784801  	MOV.B	W1, [W0]
;dspic.c,21 :: 		break;
0x06AA	0x370053  	BRA	L_setInterruptPriority1
;dspic.c,22 :: 		case INT2_DEVICE:
L_setInterruptPriority4:
;dspic.c,23 :: 		INT2_PRIORITY = priority;
0x06AC	0xFB800B  	ZE	W11, W0
0x06AE	0x780080  	MOV	W0, W1
0x06B0	0xB3C0C0  	MOV.B	#12, W0
0x06B2	0xFB0000  	SE	W0, W0
0x06B4	0xDD0880  	SL	W1, W0, W1
0x06B6	0x2009E0  	MOV	#lo_addr(IPC5bits), W0
0x06B8	0x688090  	XOR	W1, [W0], W1
0x06BA	0x270000  	MOV	#28672, W0
0x06BC	0x608080  	AND	W1, W0, W1
0x06BE	0x2009E0  	MOV	#lo_addr(IPC5bits), W0
0x06C0	0x688090  	XOR	W1, [W0], W1
0x06C2	0x8804F1  	MOV	W1, IPC5bits
;dspic.c,24 :: 		break;
0x06C4	0x370046  	BRA	L_setInterruptPriority1
;dspic.c,25 :: 		case INT4_DEVICE:
L_setInterruptPriority5:
;dspic.c,26 :: 		INT4_PRIORITY = priority;
0x06C6	0x78418B  	MOV.B	W11, W3
0x06C8	0xB3C040  	MOV.B	#4, W0
0x06CA	0xFB8083  	ZE	W3, W1
0x06CC	0xFB0100  	SE	W0, W2
0x06CE	0xDD0982  	SL	W1, W2, W3
0x06D0	0x200A60  	MOV	#lo_addr(IPC9bits), W0
0x06D2	0x69C190  	XOR.B	W3, [W0], W3
0x06D4	0xB3C700  	MOV.B	#112, W0
0x06D6	0x61C180  	AND.B	W3, W0, W3
0x06D8	0x200A60  	MOV	#lo_addr(IPC9bits), W0
0x06DA	0x69C190  	XOR.B	W3, [W0], W3
0x06DC	0x200A60  	MOV	#lo_addr(IPC9bits), W0
0x06DE	0x784803  	MOV.B	W3, [W0]
;dspic.c,27 :: 		break;
0x06E0	0x370038  	BRA	L_setInterruptPriority1
;dspic.c,28 :: 		case TIMER1_DEVICE:
L_setInterruptPriority6:
;dspic.c,29 :: 		TIMER1_PRIORITY = priority;
0x06E2	0xFB800B  	ZE	W11, W0
0x06E4	0x780080  	MOV	W0, W1
0x06E6	0xB3C0C0  	MOV.B	#12, W0
0x06E8	0xFB0000  	SE	W0, W0
0x06EA	0xDD0880  	SL	W1, W0, W1
0x06EC	0x200940  	MOV	#lo_addr(IPC0bits), W0
0x06EE	0x688090  	XOR	W1, [W0], W1
0x06F0	0x270000  	MOV	#28672, W0
0x06F2	0x608080  	AND	W1, W0, W1
0x06F4	0x200940  	MOV	#lo_addr(IPC0bits), W0
0x06F6	0x688090  	XOR	W1, [W0], W1
0x06F8	0x8804A1  	MOV	W1, IPC0bits
;dspic.c,30 :: 		break;
0x06FA	0x37002B  	BRA	L_setInterruptPriority1
;dspic.c,31 :: 		case TIMER2_DEVICE:
L_setInterruptPriority7:
;dspic.c,32 :: 		TIMER2_PRIORITY = priority;
0x06FC	0xFB800B  	ZE	W11, W0
0x06FE	0x780080  	MOV	W0, W1
0x0700	0xB3C080  	MOV.B	#8, W0
0x0702	0xFB0000  	SE	W0, W0
0x0704	0xDD0880  	SL	W1, W0, W1
0x0706	0x200960  	MOV	#lo_addr(IPC1bits), W0
0x0708	0x688090  	XOR	W1, [W0], W1
0x070A	0x207000  	MOV	#1792, W0
0x070C	0x608080  	AND	W1, W0, W1
0x070E	0x200960  	MOV	#lo_addr(IPC1bits), W0
0x0710	0x688090  	XOR	W1, [W0], W1
0x0712	0x8804B1  	MOV	W1, IPC1bits
;dspic.c,33 :: 		break;
0x0714	0x37001E  	BRA	L_setInterruptPriority1
;dspic.c,34 :: 		case TIMER4_DEVICE:
L_setInterruptPriority8:
;dspic.c,35 :: 		TIMER4_PRIORITY = priority;
0x0716	0x78418B  	MOV.B	W11, W3
0x0718	0xB3C040  	MOV.B	#4, W0
0x071A	0xFB8083  	ZE	W3, W1
0x071C	0xFB0100  	SE	W0, W2
0x071E	0xDD0982  	SL	W1, W2, W3
0x0720	0x2009E0  	MOV	#lo_addr(IPC5bits), W0
0x0722	0x69C190  	XOR.B	W3, [W0], W3
0x0724	0xB3C700  	MOV.B	#112, W0
0x0726	0x61C180  	AND.B	W3, W0, W3
0x0728	0x2009E0  	MOV	#lo_addr(IPC5bits), W0
0x072A	0x69C190  	XOR.B	W3, [W0], W3
0x072C	0x2009E0  	MOV	#lo_addr(IPC5bits), W0
0x072E	0x784803  	MOV.B	W3, [W0]
;dspic.c,36 :: 		break;
0x0730	0x370010  	BRA	L_setInterruptPriority1
;dspic.c,37 :: 		default:
L_setInterruptPriority9:
;dspic.c,38 :: 		break;
0x0732	0x37000F  	BRA	L_setInterruptPriority1
;dspic.c,39 :: 		}
L_setInterruptPriority0:
0x0734	0xE15464  	CP.B	W10, #4
0x0736	0x32FFA8  	BRA Z	L_setInterruptPriority2
L__setInterruptPriority72:
0x0738	0xE15465  	CP.B	W10, #5
0x073A	0x32FFAF  	BRA Z	L_setInterruptPriority3
L__setInterruptPriority73:
0x073C	0xE15466  	CP.B	W10, #6
0x073E	0x32FFB6  	BRA Z	L_setInterruptPriority4
L__setInterruptPriority74:
0x0740	0xE15468  	CP.B	W10, #8
0x0742	0x32FFC1  	BRA Z	L_setInterruptPriority5
L__setInterruptPriority75:
0x0744	0xE15461  	CP.B	W10, #1
0x0746	0x32FFCD  	BRA Z	L_setInterruptPriority6
L__setInterruptPriority76:
0x0748	0xE15462  	CP.B	W10, #2
0x074A	0x32FFD8  	BRA Z	L_setInterruptPriority7
L__setInterruptPriority77:
0x074C	0xE15463  	CP.B	W10, #3
0x074E	0x32FFE3  	BRA Z	L_setInterruptPriority8
L__setInterruptPriority78:
0x0750	0x37FFF0  	BRA	L_setInterruptPriority9
L_setInterruptPriority1:
;dspic.c,40 :: 		}
L_end_setInterruptPriority:
0x0752	0x060000  	RETURN
; end of _setInterruptPriority
_getTimerPrescaler:
;dspic.c,210 :: 		unsigned char getTimerPrescaler(double timePeriod) {
;dspic.c,213 :: 		exactTimerPrescaler = getExactTimerPrescaler(timePeriod);
0x0754	0x07FD62  	RCALL	_getExactTimerPrescaler
; exactTimerPrescaler start address is: 8 (W4)
0x0756	0xBE0200  	MOV.D	W0, W4
;dspic.c,214 :: 		for (i = 0; i < sizeof(PRESCALER_VALUES) / 2; i += 1) {
; i start address is: 6 (W3)
0x0758	0xEF2006  	CLR	W3
; i end address is: 6 (W3)
L_getTimerPrescaler66:
; i start address is: 6 (W3)
; exactTimerPrescaler start address is: 8 (W4)
; exactTimerPrescaler end address is: 8 (W4)
0x075A	0xE11C64  	CP.B	W3, #4
0x075C	0x310014  	BRA GEU	L_getTimerPrescaler67
L__getTimerPrescaler117:
; exactTimerPrescaler end address is: 8 (W4)
;dspic.c,215 :: 		if ((int) exactTimerPrescaler < PRESCALER_VALUES[i]) {
; exactTimerPrescaler start address is: 8 (W4)
0x075E	0xBE9F84  	PUSH.D	W4
0x0760	0x781F83  	PUSH	W3
0x0762	0xBE9F8A  	PUSH.D	W10
0x0764	0xBE0004  	MOV.D	W4, W0
0x0766	0x07FD61  	RCALL	__Float2Longint
0x0768	0xBE054F  	POP.D	W10
0x076A	0x7801CF  	POP	W3
0x076C	0xBE024F  	POP.D	W4
0x076E	0xFB8083  	ZE	W3, W1
0x0770	0xDD0941  	SL	W1, #1, W2
0x0772	0x2800A1  	MOV	#lo_addr(_PRESCALER_VALUES), W1
0x0774	0x408102  	ADD	W1, W2, W2
0x0776	0x780092  	MOV	[W2], W1
0x0778	0xE10001  	CP	W0, W1
0x077A	0x310002  	BRA GEU	L_getTimerPrescaler69
L__getTimerPrescaler118:
; exactTimerPrescaler end address is: 8 (W4)
;dspic.c,216 :: 		return i;
0x077C	0x784003  	MOV.B	W3, W0
; i end address is: 6 (W3)
0x077E	0x370005  	BRA	L_end_getTimerPrescaler
;dspic.c,217 :: 		}
L_getTimerPrescaler69:
;dspic.c,214 :: 		for (i = 0; i < sizeof(PRESCALER_VALUES) / 2; i += 1) {
; i start address is: 0 (W0)
; exactTimerPrescaler start address is: 8 (W4)
; i start address is: 6 (W3)
0x0780	0x41C061  	ADD.B	W3, #1, W0
; i end address is: 6 (W3)
;dspic.c,218 :: 		}
; exactTimerPrescaler end address is: 8 (W4)
; i end address is: 0 (W0)
0x0782	0x784180  	MOV.B	W0, W3
0x0784	0x37FFEA  	BRA	L_getTimerPrescaler66
L_getTimerPrescaler67:
;dspic.c,219 :: 		i -= 1;
; i start address is: 6 (W3)
0x0786	0xFB8003  	ZE	W3, W0
; i end address is: 6 (W3)
0x0788	0xED2000  	DEC	W0
;dspic.c,221 :: 		return i;
;dspic.c,222 :: 		}
L_end_getTimerPrescaler:
0x078A	0x060000  	RETURN
; end of _getTimerPrescaler
_getExactTimerPrescaler:
;dspic.c,224 :: 		double getExactTimerPrescaler(double timePeriod) {
;dspic.c,225 :: 		return (timePeriod * 1000000) / (INSTRUCTION_PERIOD * MAX_TIMER_PERIOD_VALUE);
0x021A	0xBE000A  	MOV.D	W10, W0
0x021C	0x224002  	MOV	#9216, W2
0x021E	0x249743  	MOV	#18804, W3
0x0220	0x07FF6F  	RCALL	__Mul_FP
0x0222	0x2CC002  	MOV	#52224, W2
0x0224	0x2454C3  	MOV	#17740, W3
0x0226	0x0707AC  	RCALL	__Div_FP
;dspic.c,226 :: 		}
L_end_getExactTimerPrescaler:
0x0228	0x060000  	RETURN
; end of _getExactTimerPrescaler
__Mul_FP:
0x0100	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,855 :: 		
;__Lib_MathDouble.c,857 :: 		
0x0102	0x070002  	RCALL	MulFP___mulsf3
;__Lib_MathDouble.c,858 :: 		
0x0104	0x000000040216  	GOTO	the_end__Mul_FP
;__Lib_MathDouble.c,861 :: 		
MulFP___mulsf3:
;__Lib_MathDouble.c,862 :: 		
0x0108	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,863 :: 		
0x010A	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,864 :: 		
0x010C	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,865 :: 		
0x010E	0x070030  	RCALL	MulFP__funpack2
;__Lib_MathDouble.c,866 :: 		
0x0110	0x330037  	BRA N	MulFP__fPropagateNaN
;__Lib_MathDouble.c,867 :: 		
0x0112	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.c,868 :: 		
0x0114	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,869 :: 		
0x0116	0x320024  	BRA Z	MulFP_aisinfinite
;__Lib_MathDouble.c,870 :: 		
0x0118	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,871 :: 		
0x011A	0x320027  	BRA Z	MulFP_bisinfinite
;__Lib_MathDouble.c,872 :: 		
0x011C	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,873 :: 		
0x011E	0x320022  	BRA Z	MulFP_return8_1
;__Lib_MathDouble.c,874 :: 		
0x0120	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,875 :: 		
0x0122	0x320021  	BRA Z	MulFP_return2_1
;__Lib_MathDouble.c,876 :: 		
0x0124	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,877 :: 		
0x0126	0xB107EB  	SUB	#126, W11
;__Lib_MathDouble.c,878 :: 		
0x0128	0xB83401  	MUL.UU	W6, W1, W8
;__Lib_MathDouble.c,879 :: 		
0x012A	0xB83A00  	MUL.UU	W7, W0, W4
;__Lib_MathDouble.c,880 :: 		
0x012C	0x420408  	ADD	W4, W8, W8
;__Lib_MathDouble.c,881 :: 		
0x012E	0x4A8489  	ADDC	W5, W9, W9
;__Lib_MathDouble.c,882 :: 		
0x0130	0xB83A01  	MUL.UU	W7, W1, W4
;__Lib_MathDouble.c,883 :: 		
0x0132	0xB83000  	MUL.UU	W6, W0, W0
;__Lib_MathDouble.c,884 :: 		
0x0134	0x408088  	ADD	W1, W8, W1
;__Lib_MathDouble.c,885 :: 		
0x0136	0x4A0109  	ADDC	W4, W9, W2
;__Lib_MathDouble.c,886 :: 		
0x0138	0x330004  	BRA N	MulFP_formsticky
;__Lib_MathDouble.c,887 :: 		
0x013A	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,888 :: 		
0x013C	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,889 :: 		
0x013E	0x490102  	ADDC	W2, W2, W2
;__Lib_MathDouble.c,890 :: 		
0x0140	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,891 :: 		
MulFP_formsticky:
;__Lib_MathDouble.c,892 :: 		
0x0142	0xDD09C9  	SL	W1, #9, W3
;__Lib_MathDouble.c,893 :: 		
0x0144	0x700183  	IOR	W0, W3, W3
;__Lib_MathDouble.c,894 :: 		
0x0146	0x320001  	BRA Z	MulFP_formRandSig
;__Lib_MathDouble.c,895 :: 		
0x0148	0x200013  	MOV	#1, W3
;__Lib_MathDouble.c,896 :: 		
MulFP_formRandSig:
;__Lib_MathDouble.c,897 :: 		
0x014A	0xDE14C8  	LSR	W2, #8, W9
;__Lib_MathDouble.c,898 :: 		
0x014C	0xDD1448  	SL	W2, #8, W8
;__Lib_MathDouble.c,899 :: 		
0x014E	0xDE0947  	LSR	W1, #7, W2
;__Lib_MathDouble.c,900 :: 		
0x0150	0xB20012  	AND	#1, W2
;__Lib_MathDouble.c,901 :: 		
0x0152	0xDE08C8  	LSR	W1, #8, W1
;__Lib_MathDouble.c,902 :: 		
0x0154	0x708408  	IOR	W1, W8, W8
;__Lib_MathDouble.c,903 :: 		
0x0156	0x070024  	RCALL	MulFP__fpack
;__Lib_MathDouble.c,904 :: 		
MulFP_return0_1:
;__Lib_MathDouble.c,905 :: 		
0x0158	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.c,906 :: 		
0x015A	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,907 :: 		
0x015C	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,908 :: 		
0x015E	0x370019  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,909 :: 		
MulFP_aisinfinite:
;__Lib_MathDouble.c,910 :: 		
0x0160	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,911 :: 		
0x0162	0x32001B  	BRA Z	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,912 :: 		
MulFP_return8_1:
;__Lib_MathDouble.c,913 :: 		
0x0164	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,914 :: 		
MulFP_return2_1:
;__Lib_MathDouble.c,915 :: 		
0x0166	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,916 :: 		
0x0168	0x37FFF7  	BRA	MulFP_return0_1
;__Lib_MathDouble.c,917 :: 		
MulFP_bisinfinite:
;__Lib_MathDouble.c,918 :: 		
0x016A	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,919 :: 		
0x016C	0x3AFFFC  	BRA NZ	MulFP_return2_1
;__Lib_MathDouble.c,920 :: 		
0x016E	0x370015  	BRA	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,921 :: 		
MulFP__funpack2:
;__Lib_MathDouble.c,922 :: 		
0x0170	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,923 :: 		
0x0172	0x07003C  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,924 :: 		
0x0174	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,925 :: 		
0x0176	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,926 :: 		
0x0178	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,927 :: 		
0x017A	0x070038  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,928 :: 		
0x017C	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,929 :: 		
0x017E	0x060000  	RETURN
;__Lib_MathDouble.c,930 :: 		
MulFP__fPropagateNaN:
;__Lib_MathDouble.c,931 :: 		
0x0180	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,932 :: 		
0x0182	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,933 :: 		
0x0184	0x360005  	BRA LEU	MulFP_return0_2
;__Lib_MathDouble.c,934 :: 		
0x0186	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,935 :: 		
0x0188	0x360002  	BRA LEU	MulFP_return8_2
;__Lib_MathDouble.c,936 :: 		
0x018A	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,937 :: 		
0x018C	0x3A0001  	BRA NZ	MulFP_return0_2
;__Lib_MathDouble.c,938 :: 		
MulFP_return8_2:
;__Lib_MathDouble.c,939 :: 		
0x018E	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,940 :: 		
MulFP_return0_2:
;__Lib_MathDouble.c,941 :: 		
0x0190	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,942 :: 		
MulFP__fbopExit:
;__Lib_MathDouble.c,943 :: 		
0x0192	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,944 :: 		
0x0194	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,945 :: 		
0x0196	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,946 :: 		
0x0198	0x060000  	RETURN
;__Lib_MathDouble.c,947 :: 		
MulFP__fbopReturnNaN:
;__Lib_MathDouble.c,948 :: 		
0x019A	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,949 :: 		
0x019C	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,950 :: 		
0x019E	0x37FFF9  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,951 :: 		
MulFP__fpack:
;__Lib_MathDouble.c,952 :: 		
0x01A0	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,953 :: 		
0x01A2	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,954 :: 		
0x01A4	0x3D000B  	BRA GE	MulFP_notsubnormal
;__Lib_MathDouble.c,955 :: 		
0x01A6	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,956 :: 		
0x01A8	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,957 :: 		
0x01AA	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,958 :: 		
0x01AC	0x34001D  	BRA LE	MulFP_zerosig
;__Lib_MathDouble.c,959 :: 		
MulFP_subnormal1:
;__Lib_MathDouble.c,960 :: 		
0x01AE	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,961 :: 		
0x01B0	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,962 :: 		
0x01B2	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,963 :: 		
0x01B4	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,964 :: 		
0x01B6	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,965 :: 		
0x01B8	0x3AFFFA  	BRA NZ	MulFP_subnormal1
;__Lib_MathDouble.c,966 :: 		
0x01BA	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,967 :: 		
MulFP_notsubnormal:
;__Lib_MathDouble.c,968 :: 		
0x01BC	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,969 :: 		
0x01BE	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,970 :: 		
0x01C0	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,971 :: 		
0x01C2	0x320009  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,972 :: 		
0x01C4	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,973 :: 		
0x01C6	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,974 :: 		
0x01C8	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,975 :: 		
0x01CA	0x320005  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,976 :: 		
0x01CC	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,977 :: 		
0x01CE	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,978 :: 		
0x01D0	0x3A0002  	BRA NZ	MulFP_packupandgo
;__Lib_MathDouble.c,979 :: 		
0x01D2	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,980 :: 		
0x01D4	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,981 :: 		
MulFP_packupandgo:
;__Lib_MathDouble.c,982 :: 		
0x01D6	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,983 :: 		
0x01D8	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,984 :: 		
0x01DA	0x3D0005  	BRA GE	MulFP_overflow
;__Lib_MathDouble.c,985 :: 		
0x01DC	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,986 :: 		
0x01DE	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,987 :: 		
0x01E0	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,988 :: 		
0x01E2	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,989 :: 		
0x01E4	0x060000  	RETURN
;__Lib_MathDouble.c,990 :: 		
MulFP_overflow:
;__Lib_MathDouble.c,991 :: 		
0x01E6	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,992 :: 		
MulFP_zerosig:
;__Lib_MathDouble.c,993 :: 		
0x01E8	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,994 :: 		
0x01EA	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,995 :: 		
MulFP__funpack:
;__Lib_MathDouble.c,996 :: 		
0x01EC	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,997 :: 		
0x01EE	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,998 :: 		
0x01F0	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,999 :: 		
0x01F2	0x320008  	BRA Z	MulFP_zeroorsub
;__Lib_MathDouble.c,1000 :: 		
0x01F4	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1001 :: 		
0x01F6	0x320002  	BRA Z	MulFP_nanorinf
;__Lib_MathDouble.c,1002 :: 		
MulFP_finitereturn:
;__Lib_MathDouble.c,1003 :: 		
0x01F8	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1004 :: 		
0x01FA	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1005 :: 		
MulFP_nanorinf:
;__Lib_MathDouble.c,1006 :: 		
0x01FC	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1007 :: 		
0x01FE	0x320001  	BRA Z	MulFP_infinite
;__Lib_MathDouble.c,1008 :: 		
0x0200	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1009 :: 		
MulFP_infinite:
;__Lib_MathDouble.c,1010 :: 		
0x0202	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1011 :: 		
MulFP_zeroorsub:
;__Lib_MathDouble.c,1012 :: 		
0x0204	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1013 :: 		
0x0206	0x3A0002  	BRA NZ	MulFP_subnormal2
;__Lib_MathDouble.c,1014 :: 		
0x0208	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1015 :: 		
MulFP_normalize:
;__Lib_MathDouble.c,1016 :: 		
0x020A	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1017 :: 		
MulFP_subnormal2:
;__Lib_MathDouble.c,1018 :: 		
0x020C	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1019 :: 		
0x020E	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1020 :: 		
0x0210	0x3BFFFC  	BRA NN	MulFP_normalize
;__Lib_MathDouble.c,1021 :: 		
0x0212	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1022 :: 		
0x0214	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1025 :: 		
the_end__Mul_FP:
;__Lib_MathDouble.c,1028 :: 		
L_end__Mul_FP:
0x0216	0xFA8000  	ULNK
0x0218	0x060000  	RETURN
; end of __Mul_FP
__Div_FP:
0x1180	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1050 :: 		
;__Lib_MathDouble.c,1052 :: 		
0x1182	0x070002  	RCALL	DivFP___divsf3
;__Lib_MathDouble.c,1053 :: 		
0x1184	0x0000000412B2  	GOTO	the_end__Div_FP
;__Lib_MathDouble.c,1056 :: 		
DivFP___divsf3:
;__Lib_MathDouble.c,1057 :: 		
0x1188	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,1058 :: 		
0x118A	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,1059 :: 		
0x118C	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,1060 :: 		
0x118E	0x07003E  	RCALL	DivFP__funpack2
;__Lib_MathDouble.c,1061 :: 		
0x1190	0x330045  	BRA N	DivFP__fPropagateNaN
;__Lib_MathDouble.c,1062 :: 		
0x1192	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.c,1063 :: 		
0x1194	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,1064 :: 		
0x1196	0x32002E  	BRA Z	DivFP_aisinfinite
;__Lib_MathDouble.c,1065 :: 		
0x1198	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1066 :: 		
0x119A	0x320033  	BRA Z	DivFP_returnZero
;__Lib_MathDouble.c,1067 :: 		
0x119C	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,1068 :: 		
0x119E	0x32002F  	BRA Z	DivFP_aiszero
;__Lib_MathDouble.c,1069 :: 		
0x11A0	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,1070 :: 		
0x11A2	0x320031  	BRA Z	DivFP_returnInf
;__Lib_MathDouble.c,1071 :: 		
DivFP_finitenonzero:
;__Lib_MathDouble.c,1072 :: 		
0x11A4	0x558585  	SUB	W11, W5, W11
;__Lib_MathDouble.c,1073 :: 		
0x11A6	0xB007EB  	ADD	#126, W11
;__Lib_MathDouble.c,1074 :: 		
0x11A8	0x200009  	MOV	#0, W9
;__Lib_MathDouble.c,1075 :: 		
0x11AA	0x200408  	MOV	#64, W8
;__Lib_MathDouble.c,1076 :: 		
0x11AC	0x370005  	BRA	DivFP_diventry
;__Lib_MathDouble.c,1077 :: 		
DivFP_divnext:
;__Lib_MathDouble.c,1078 :: 		
0x11AE	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,1079 :: 		
0x11B0	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,1080 :: 		
0x11B2	0x31000A  	BRA C	DivFP_divdone
;__Lib_MathDouble.c,1081 :: 		
DivFP_divloop:
;__Lib_MathDouble.c,1082 :: 		
0x11B4	0x430306  	ADD	W6, W6, W6
;__Lib_MathDouble.c,1083 :: 		
0x11B6	0x4B8387  	ADDC	W7, W7, W7
;__Lib_MathDouble.c,1084 :: 		
DivFP_diventry:
;__Lib_MathDouble.c,1085 :: 		
0x11B8	0x530100  	SUB	W6, W0, W2
;__Lib_MathDouble.c,1086 :: 		
0x11BA	0x5B8181  	SUBB	W7, W1, W3
;__Lib_MathDouble.c,1087 :: 		
0x11BC	0x33FFF8  	BRA N	DivFP_divnext
;__Lib_MathDouble.c,1088 :: 		
0x11BE	0xBE8302  	MOV.D	W2, W6
;__Lib_MathDouble.c,1089 :: 		
0x11C0	0xA80010  	BSET	W8, #0
;__Lib_MathDouble.c,1090 :: 		
0x11C2	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,1091 :: 		
0x11C4	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,1092 :: 		
0x11C6	0x39FFF6  	BRA NC	DivFP_divloop
;__Lib_MathDouble.c,1093 :: 		
DivFP_divdone:
;__Lib_MathDouble.c,1094 :: 		
0x11C8	0xDD39C6  	SL	W7, #6, W3
;__Lib_MathDouble.c,1095 :: 		
0x11CA	0x730183  	IOR	W6, W3, W3
;__Lib_MathDouble.c,1096 :: 		
0x11CC	0x320001  	BRA Z	DivFP_stickyok
;__Lib_MathDouble.c,1097 :: 		
0x11CE	0x200013  	MOV	#1, W3
;__Lib_MathDouble.c,1098 :: 		
DivFP_stickyok:
;__Lib_MathDouble.c,1099 :: 		
0x11D0	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1100 :: 		
0x11D2	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1101 :: 		
0x11D4	0xA39809  	BTST.Z	W9, #9
;__Lib_MathDouble.c,1102 :: 		
0x11D6	0x320005  	BRA Z	DivFP_guardused
;__Lib_MathDouble.c,1103 :: 		
0x11D8	0xA70008  	BTSC	W8, #0
;__Lib_MathDouble.c,1104 :: 		
0x11DA	0xA80006  	BSET	W3, #0
;__Lib_MathDouble.c,1105 :: 		
0x11DC	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1106 :: 		
0x11DE	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1107 :: 		
0x11E0	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,1108 :: 		
DivFP_guardused:
;__Lib_MathDouble.c,1109 :: 		
0x11E2	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1110 :: 		
0x11E4	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1111 :: 		
0x11E6	0xEB0100  	CLR	W2
;__Lib_MathDouble.c,1112 :: 		
0x11E8	0xD28102  	RLC	W2, W2
;__Lib_MathDouble.c,1113 :: 		
0x11EA	0x070028  	RCALL	DivFP__fpack
;__Lib_MathDouble.c,1114 :: 		
DivFP_return0_1:
;__Lib_MathDouble.c,1115 :: 		
0x11EC	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.c,1116 :: 		
0x11EE	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,1117 :: 		
0x11F0	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,1118 :: 		
0x11F2	0x37001D  	BRA	DivFP__fbopExit
;__Lib_MathDouble.c,1119 :: 		
DivFP_aisinfinite:
;__Lib_MathDouble.c,1120 :: 		
0x11F4	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1121 :: 		
0x11F6	0x32001F  	BRA Z	DivFP__fbopReturnNaN
;__Lib_MathDouble.c,1122 :: 		
DivFP_return8_1:
;__Lib_MathDouble.c,1123 :: 		
0x11F8	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,1124 :: 		
DivFP_return2_1:
;__Lib_MathDouble.c,1125 :: 		
0x11FA	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1126 :: 		
0x11FC	0x37FFF7  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1127 :: 		
DivFP_aiszero:
;__Lib_MathDouble.c,1128 :: 		
0x11FE	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,1129 :: 		
0x1200	0x32001A  	BRA Z	DivFP__fbopReturnNaN
;__Lib_MathDouble.c,1130 :: 		
DivFP_returnZero:
;__Lib_MathDouble.c,1131 :: 		
0x1202	0xB80060  	MUL.UU	W0, #0, W0
;__Lib_MathDouble.c,1132 :: 		
0x1204	0x37FFF3  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1133 :: 		
DivFP_returnInf:
;__Lib_MathDouble.c,1134 :: 		
0x1206	0x200000  	MOV	#0, W0
;__Lib_MathDouble.c,1135 :: 		
0x1208	0x27F801  	MOV	#32640, W1
;__Lib_MathDouble.c,1136 :: 		
0x120A	0x37FFF0  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1137 :: 		
DivFP__funpack2:
;__Lib_MathDouble.c,1138 :: 		
0x120C	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,1139 :: 		
0x120E	0x07003C  	RCALL	DivFP__funpack
;__Lib_MathDouble.c,1140 :: 		
0x1210	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,1141 :: 		
0x1212	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,1142 :: 		
0x1214	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1143 :: 		
0x1216	0x070038  	RCALL	DivFP__funpack
;__Lib_MathDouble.c,1144 :: 		
0x1218	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,1145 :: 		
0x121A	0x060000  	RETURN
;__Lib_MathDouble.c,1146 :: 		
DivFP__fPropagateNaN:
;__Lib_MathDouble.c,1147 :: 		
0x121C	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1148 :: 		
0x121E	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,1149 :: 		
0x1220	0x360005  	BRA LEU	DivFP_return0
;__Lib_MathDouble.c,1150 :: 		
0x1222	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1151 :: 		
0x1224	0x360002  	BRA LEU	DivFP_return8
;__Lib_MathDouble.c,1152 :: 		
0x1226	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,1153 :: 		
0x1228	0x3A0001  	BRA NZ	DivFP_return0
;__Lib_MathDouble.c,1154 :: 		
DivFP_return8:
;__Lib_MathDouble.c,1155 :: 		
0x122A	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,1156 :: 		
DivFP_return0:
;__Lib_MathDouble.c,1157 :: 		
0x122C	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,1158 :: 		
DivFP__fbopExit:
;__Lib_MathDouble.c,1159 :: 		
0x122E	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,1160 :: 		
0x1230	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,1161 :: 		
0x1232	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,1162 :: 		
0x1234	0x060000  	RETURN
;__Lib_MathDouble.c,1163 :: 		
DivFP__fbopReturnNaN:
;__Lib_MathDouble.c,1164 :: 		
0x1236	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,1165 :: 		
0x1238	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,1166 :: 		
0x123A	0x37FFF9  	BRA	DivFP__fbopExit
;__Lib_MathDouble.c,1167 :: 		
DivFP__fpack:
;__Lib_MathDouble.c,1168 :: 		
0x123C	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,1169 :: 		
0x123E	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,1170 :: 		
0x1240	0x3D000B  	BRA GE	DivFP_notsubnormal
;__Lib_MathDouble.c,1171 :: 		
0x1242	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,1172 :: 		
0x1244	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,1173 :: 		
0x1246	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,1174 :: 		
0x1248	0x34001D  	BRA LE	DivFP_zerosig
;__Lib_MathDouble.c,1175 :: 		
DivFP_subnormal:
;__Lib_MathDouble.c,1176 :: 		
0x124A	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,1177 :: 		
0x124C	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,1178 :: 		
0x124E	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1179 :: 		
0x1250	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1180 :: 		
0x1252	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,1181 :: 		
0x1254	0x3AFFFA  	BRA NZ	DivFP_subnormal
;__Lib_MathDouble.c,1182 :: 		
0x1256	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,1183 :: 		
DivFP_notsubnormal:
;__Lib_MathDouble.c,1184 :: 		
0x1258	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,1185 :: 		
0x125A	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,1186 :: 		
0x125C	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,1187 :: 		
0x125E	0x320009  	BRA Z	DivFP_packupandgo
;__Lib_MathDouble.c,1188 :: 		
0x1260	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,1189 :: 		
0x1262	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,1190 :: 		
0x1264	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,1191 :: 		
0x1266	0x320005  	BRA Z	DivFP_packupandgo
;__Lib_MathDouble.c,1192 :: 		
0x1268	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,1193 :: 		
0x126A	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,1194 :: 		
0x126C	0x3A0002  	BRA NZ	DivFP_packupandgo
;__Lib_MathDouble.c,1195 :: 		
0x126E	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1196 :: 		
0x1270	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1197 :: 		
DivFP_packupandgo:
;__Lib_MathDouble.c,1198 :: 		
0x1272	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,1199 :: 		
0x1274	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,1200 :: 		
0x1276	0x3D0005  	BRA GE	DivFP_overfloW
;__Lib_MathDouble.c,1201 :: 		
0x1278	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,1202 :: 		
0x127A	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,1203 :: 		
0x127C	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,1204 :: 		
0x127E	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,1205 :: 		
0x1280	0x060000  	RETURN
;__Lib_MathDouble.c,1206 :: 		
DivFP_overfloW:
;__Lib_MathDouble.c,1207 :: 		
0x1282	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,1208 :: 		
DivFP_zerosig:
;__Lib_MathDouble.c,1209 :: 		
0x1284	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,1210 :: 		
0x1286	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,1211 :: 		
DivFP__funpack:
;__Lib_MathDouble.c,1212 :: 		
0x1288	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,1213 :: 		
0x128A	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,1214 :: 		
0x128C	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,1215 :: 		
0x128E	0x320008  	BRA Z	DivFP_zeroorsub
;__Lib_MathDouble.c,1216 :: 		
0x1290	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1217 :: 		
0x1292	0x320002  	BRA Z	DivFP_nanorinf
;__Lib_MathDouble.c,1218 :: 		
DivFP_finitereturn:
;__Lib_MathDouble.c,1219 :: 		
0x1294	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1220 :: 		
0x1296	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1221 :: 		
DivFP_nanorinf:
;__Lib_MathDouble.c,1222 :: 		
0x1298	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1223 :: 		
0x129A	0x320001  	BRA Z	DivFP_infinite
;__Lib_MathDouble.c,1224 :: 		
0x129C	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1225 :: 		
DivFP_infinite:
;__Lib_MathDouble.c,1226 :: 		
0x129E	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1227 :: 		
DivFP_zeroorsub:
;__Lib_MathDouble.c,1228 :: 		
0x12A0	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1229 :: 		
0x12A2	0x3A0002  	BRA NZ	DivFP_subnormal2
;__Lib_MathDouble.c,1230 :: 		
0x12A4	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1231 :: 		
DivFP_normalize:
;__Lib_MathDouble.c,1232 :: 		
0x12A6	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1233 :: 		
DivFP_subnormal2:
;__Lib_MathDouble.c,1234 :: 		
0x12A8	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1235 :: 		
0x12AA	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1236 :: 		
0x12AC	0x3BFFFC  	BRA NN	DivFP_normalize
;__Lib_MathDouble.c,1237 :: 		
0x12AE	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1238 :: 		
0x12B0	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1241 :: 		
the_end__Div_FP:
;__Lib_MathDouble.c,1243 :: 		
L_end__Div_FP:
0x12B2	0xFA8000  	ULNK
0x12B4	0x060000  	RETURN
; end of __Div_FP
__Float2Longint:
0x022A	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,479 :: 		
;__Lib_MathDouble.c,481 :: 		
0x022C	0x070002  	RCALL	Float2Longint__fixsfsi
;__Lib_MathDouble.c,482 :: 		
0x022E	0x00000004029E  	GOTO	the_end__Float2Longint
;__Lib_MathDouble.c,486 :: 		
Float2Longint__fixsfsi:
;__Lib_MathDouble.c,487 :: 		
0x0232	0xBE8100  	MOV.D	W0, W2
;__Lib_MathDouble.c,488 :: 		
0x0234	0x07001F  	RCALL	Float2Longint__funpack
;__Lib_MathDouble.c,489 :: 		
0x0236	0xA77004  	BTSC	W4, #7
;__Lib_MathDouble.c,490 :: 		
0x0238	0xA1F003  	BCLR	W3, #15
;__Lib_MathDouble.c,491 :: 		
0x023A	0xB10965  	SUB	#150, W5
;__Lib_MathDouble.c,492 :: 		
0x023C	0x320016  	BRA Z	Float2Longint_setsign
;__Lib_MathDouble.c,493 :: 		
0x023E	0x35000D  	BRA LT	Float2Longint_shiftright
;__Lib_MathDouble.c,494 :: 		
0x0240	0xE12868  	CP	W5, #8
;__Lib_MathDouble.c,495 :: 		
0x0242	0x350006  	BRA LT	Float2Longint_shiftleft
;__Lib_MathDouble.c,496 :: 		
0x0244	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,497 :: 		
0x0246	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,498 :: 		
0x0248	0xE20006  	CP0	W3
;__Lib_MathDouble.c,499 :: 		
0x024A	0x3B0013  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,500 :: 		
0x024C	0x280001  	MOV	#32768, W1
;__Lib_MathDouble.c,501 :: 		
0x024E	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,502 :: 		
Float2Longint_shiftleft:
;__Lib_MathDouble.c,503 :: 		
0x0250	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,504 :: 		
0x0252	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,505 :: 		
0x0254	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,506 :: 		
0x0256	0x3AFFFC  	BRA NZ	Float2Longint_shiftleft
;__Lib_MathDouble.c,507 :: 		
0x0258	0x370008  	BRA	Float2Longint_setsign
;__Lib_MathDouble.c,508 :: 		
Float2Longint_shiftright:
;__Lib_MathDouble.c,509 :: 		
0x025A	0x428FF8  	ADD	W5, #24, [W15]
;__Lib_MathDouble.c,510 :: 		
0x025C	0x3C0002  	BRA GT	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,511 :: 		
0x025E	0xEB0080  	CLR	W1
;__Lib_MathDouble.c,512 :: 		
0x0260	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,513 :: 		
Float2Longint_shiftrightloop:
;__Lib_MathDouble.c,514 :: 		
0x0262	0xD10081  	LSR	W1, W1
;__Lib_MathDouble.c,515 :: 		
0x0264	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,516 :: 		
0x0266	0xE80285  	INC	W5, W5
;__Lib_MathDouble.c,517 :: 		
0x0268	0x3AFFFC  	BRA NZ	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,518 :: 		
Float2Longint_setsign:
;__Lib_MathDouble.c,519 :: 		
0x026A	0xE20006  	CP0	W3
;__Lib_MathDouble.c,520 :: 		
0x026C	0x3B0002  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,521 :: 		
0x026E	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,522 :: 		
0x0270	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,523 :: 		
Float2Longint_exit:
;__Lib_MathDouble.c,524 :: 		
0x0272	0x060000  	RETURN
;__Lib_MathDouble.c,525 :: 		
Float2Longint__funpack:
;__Lib_MathDouble.c,526 :: 		
0x0274	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,527 :: 		
0x0276	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,528 :: 		
0x0278	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,529 :: 		
0x027A	0x320008  	BRA Z	Float2Longint_zeroorsub
;__Lib_MathDouble.c,530 :: 		
0x027C	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,531 :: 		
0x027E	0x320002  	BRA Z	Float2Longint_nanorinf
;__Lib_MathDouble.c,532 :: 		
Float2Longint_finitereturn:
;__Lib_MathDouble.c,533 :: 		
0x0280	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,534 :: 		
0x0282	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,535 :: 		
Float2Longint_nanorinf:
;__Lib_MathDouble.c,536 :: 		
0x0284	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,537 :: 		
0x0286	0x320001  	BRA Z	Float2Longint_infinite
;__Lib_MathDouble.c,538 :: 		
0x0288	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,539 :: 		
Float2Longint_infinite:
;__Lib_MathDouble.c,540 :: 		
0x028A	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,541 :: 		
Float2Longint_zeroorsub:
;__Lib_MathDouble.c,542 :: 		
0x028C	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,543 :: 		
0x028E	0x3A0002  	BRA NZ	Float2Longint_subnormal
;__Lib_MathDouble.c,544 :: 		
0x0290	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,545 :: 		
Float2Longint_normalize:
;__Lib_MathDouble.c,546 :: 		
0x0292	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,547 :: 		
Float2Longint_subnormal:
;__Lib_MathDouble.c,548 :: 		
0x0294	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,549 :: 		
0x0296	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,550 :: 		
0x0298	0x3BFFFC  	BRA NN	Float2Longint_normalize
;__Lib_MathDouble.c,551 :: 		
0x029A	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,552 :: 		
0x029C	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,555 :: 		
the_end__Float2Longint:
;__Lib_MathDouble.c,557 :: 		
L_end__Float2Longint:
0x029E	0xFA8000  	ULNK
0x02A0	0x060000  	RETURN
; end of __Float2Longint
_getTimerPeriod:
0x0864	0xFA0008  	LNK	#8
;dspic.c,206 :: 		unsigned int getTimerPeriod(double timePeriod, unsigned char prescalerIndex) {
;dspic.c,207 :: 		return (unsigned int) ((timePeriod * 1000000) / (INSTRUCTION_PERIOD * PRESCALER_VALUES[prescalerIndex]));
0x0866	0x781F8C  	PUSH	W12
0x0868	0xBE000A  	MOV.D	W10, W0
0x086A	0x224002  	MOV	#9216, W2
0x086C	0x249743  	MOV	#18804, W3
0x086E	0x07FC48  	RCALL	__Mul_FP
0x0870	0x78064F  	POP	W12
0x0872	0x980720  	MOV	W0, [W14+4]
0x0874	0x980731  	MOV	W1, [W14+6]
0x0876	0xFB800C  	ZE	W12, W0
0x0878	0xDD00C1  	SL	W0, #1, W1
0x087A	0x2800A0  	MOV	#lo_addr(_PRESCALER_VALUES), W0
0x087C	0x400101  	ADD	W0, W1, W2
0x087E	0x780012  	MOV	[W2], W0
0x0880	0xEB0080  	CLR	W1
0x0882	0x07FDC5  	RCALL	__Long2Float
0x0884	0x2CCCD2  	MOV	#52429, W2
0x0886	0x23D4C3  	MOV	#15692, W3
0x0888	0x07FC3B  	RCALL	__Mul_FP
0x088A	0x980700  	MOV	W0, [W14+0]
0x088C	0x980711  	MOV	W1, [W14+2]
0x088E	0x90002E  	MOV	[W14+4], W0
0x0890	0x9000BE  	MOV	[W14+6], W1
0x0892	0xBE9F82  	PUSH.D	W2
0x0894	0x90010E  	MOV	[W14+0], W2
0x0896	0x90019E  	MOV	[W14+2], W3
0x0898	0x070473  	RCALL	__Div_FP
0x089A	0xBE014F  	POP.D	W2
0x089C	0x07FCC6  	RCALL	__Float2Longint
;dspic.c,208 :: 		}
L_end_getTimerPeriod:
0x089E	0xFA8000  	ULNK
0x08A0	0x060000  	RETURN
; end of _getTimerPeriod
__Long2Float:
0x040E	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,104 :: 		
;__Lib_MathDouble.c,106 :: 		
0x0410	0x070002  	RCALL	LL_intro_Long2Float
;__Lib_MathDouble.c,107 :: 		
0x0412	0x0000000404C0  	GOTO	the_end__Long2Float
;__Lib_MathDouble.c,109 :: 		
LL_intro_Long2Float:
;__Lib_MathDouble.c,110 :: 		
0x0416	0xE20004  	CP0	W2
;__Lib_MathDouble.c,111 :: 		
0x0418	0x3A0006  	BRA NZ	Longint2Float__floatsisf
;__Lib_MathDouble.c,113 :: 		
Longword2Float__floatuisf:
;__Lib_MathDouble.c,114 :: 		
0x041A	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,115 :: 		
0x041C	0xE20002  	CP0	W1
;__Lib_MathDouble.c,116 :: 		
0x041E	0x3E000F  	BRA GTU	Long2Float_notspecial
;__Lib_MathDouble.c,117 :: 		
0x0420	0xE20000  	CP0	W0
;__Lib_MathDouble.c,118 :: 		
0x0422	0x320027  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,119 :: 		
0x0424	0x37000C  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,121 :: 		
Longint2Float__floatsisf:
;__Lib_MathDouble.c,122 :: 		
0x0426	0x8800A1  	MOV	W1, W10
;__Lib_MathDouble.c,123 :: 		
0x0428	0xE20002  	CP0	W1
;__Lib_MathDouble.c,124 :: 		
0x042A	0x350004  	BRA LT	Longint2Float_negative
;__Lib_MathDouble.c,125 :: 		
0x042C	0x3C0008  	BRA GT	Long2Float_notspecial
;__Lib_MathDouble.c,126 :: 		
0x042E	0xE20000  	CP0	W0
;__Lib_MathDouble.c,127 :: 		
0x0430	0x320020  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,128 :: 		
0x0432	0x370005  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,129 :: 		
Longint2Float_negative:
;__Lib_MathDouble.c,130 :: 		
0x0434	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,131 :: 		
0x0436	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,132 :: 		
0x0438	0x3B0002  	BRA NN	Long2Float_notspecial
;__Lib_MathDouble.c,133 :: 		
0x043A	0x2CF001  	MOV	#52992, W1
;__Lib_MathDouble.c,134 :: 		
0x043C	0x37001A  	BRA	Long2Float_return0
;__Lib_MathDouble.c,136 :: 		
Long2Float_notspecial:
;__Lib_MathDouble.c,137 :: 		
0x043E	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,138 :: 		
0x0440	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,139 :: 		
0x0442	0x20096B  	MOV	#150, W11
;__Lib_MathDouble.c,140 :: 		
0x0444	0xCF8209  	FF1L	W9, W4
;__Lib_MathDouble.c,141 :: 		
0x0446	0x390002  	BRA NC	Long2Float_fixshift
;__Lib_MathDouble.c,142 :: 		
0x0448	0xCF8208  	FF1L	W8, W4
;__Lib_MathDouble.c,143 :: 		
0x044A	0xB04104  	ADD.B	#16, W4
;__Lib_MathDouble.c,144 :: 		
Long2Float_fixshift:
;__Lib_MathDouble.c,145 :: 		
0x044C	0x524269  	SUB.B	W4, #9, W4
;__Lib_MathDouble.c,146 :: 		
0x044E	0x32000E  	BRA Z	Long2Float_round
;__Lib_MathDouble.c,147 :: 		
0x0450	0x3B0008  	BRA NN	Long2Float_shiftleft
;__Lib_MathDouble.c,148 :: 		
Long2Float_shiftright:
;__Lib_MathDouble.c,149 :: 		
0x0452	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,150 :: 		
0x0454	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,151 :: 		
0x0456	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,152 :: 		
0x0458	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,153 :: 		
0x045A	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,154 :: 		
0x045C	0xE84204  	INC.B	W4, W4
;__Lib_MathDouble.c,155 :: 		
0x045E	0x3AFFF9  	BRA NZ	Long2Float_shiftright
;__Lib_MathDouble.c,156 :: 		
0x0460	0x370005  	BRA	Long2Float_round
;__Lib_MathDouble.c,157 :: 		
Long2Float_shiftleft:
;__Lib_MathDouble.c,158 :: 		
0x0462	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,159 :: 		
0x0464	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,160 :: 		
0x0466	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,161 :: 		
0x0468	0xE94204  	DEC.B	W4, W4
;__Lib_MathDouble.c,162 :: 		
0x046A	0x3AFFFB  	BRA NZ	Long2Float_shiftleft
;__Lib_MathDouble.c,163 :: 		
Long2Float_round:
;__Lib_MathDouble.c,164 :: 		
0x046C	0x070003  	RCALL	Long2Float__fpack
;__Lib_MathDouble.c,165 :: 		
0x046E	0xA7F00A  	BTSC	W10, #15
;__Lib_MathDouble.c,166 :: 		
0x0470	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,167 :: 		
Long2Float_return0:
;__Lib_MathDouble.c,168 :: 		
0x0472	0x060000  	RETURN
;__Lib_MathDouble.c,169 :: 		
Long2Float__fpack:
;__Lib_MathDouble.c,170 :: 		
0x0474	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,171 :: 		
0x0476	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,172 :: 		
0x0478	0x3D000B  	BRA GE	Long2Float_notsubnormal
;__Lib_MathDouble.c,173 :: 		
0x047A	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,174 :: 		
0x047C	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,175 :: 		
0x047E	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,176 :: 		
0x0480	0x34001D  	BRA LE	Long2Float_zerosig
;__Lib_MathDouble.c,177 :: 		
Long2Float_subnormal:
;__Lib_MathDouble.c,178 :: 		
0x0482	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,179 :: 		
0x0484	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,180 :: 		
0x0486	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,181 :: 		
0x0488	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,182 :: 		
0x048A	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,183 :: 		
0x048C	0x3AFFFA  	BRA NZ	Long2Float_subnormal
;__Lib_MathDouble.c,184 :: 		
0x048E	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,185 :: 		
Long2Float_notsubnormal:
;__Lib_MathDouble.c,186 :: 		
0x0490	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,187 :: 		
0x0492	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,188 :: 		
0x0494	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,189 :: 		
0x0496	0x320009  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,190 :: 		
0x0498	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,191 :: 		
0x049A	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,192 :: 		
0x049C	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,193 :: 		
0x049E	0x320005  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,194 :: 		
0x04A0	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,195 :: 		
0x04A2	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,196 :: 		
0x04A4	0x3A0002  	BRA NZ	Long2Float_packupandgo
;__Lib_MathDouble.c,197 :: 		
0x04A6	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,198 :: 		
0x04A8	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,199 :: 		
Long2Float_packupandgo:
;__Lib_MathDouble.c,200 :: 		
0x04AA	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,201 :: 		
0x04AC	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,202 :: 		
0x04AE	0x3D0005  	BRA GE	Long2Float_overflow
;__Lib_MathDouble.c,203 :: 		
0x04B0	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,204 :: 		
0x04B2	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,205 :: 		
0x04B4	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,206 :: 		
0x04B6	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,207 :: 		
0x04B8	0x060000  	RETURN
;__Lib_MathDouble.c,208 :: 		
Long2Float_overflow:
;__Lib_MathDouble.c,209 :: 		
0x04BA	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,210 :: 		
Long2Float_zerosig:
;__Lib_MathDouble.c,211 :: 		
0x04BC	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,212 :: 		
0x04BE	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,215 :: 		
the_end__Long2Float:
;__Lib_MathDouble.c,218 :: 		
L_end__Long2Float:
0x04C0	0xFA8000  	ULNK
0x04C2	0x060000  	RETURN
; end of __Long2Float
_ClutchMotor_setupPWM:
;clutchmotor.c,21 :: 		void ClutchMotor_setupPWM(void) {
;clutchmotor.c,22 :: 		OC8CON = 0x6; //PWM on Timer 2
0x0CCE	0x781F8A  	PUSH	W10
0x0CD0	0x781F8B  	PUSH	W11
0x0CD2	0x781F8C  	PUSH	W12
0x0CD4	0x200060  	MOV	#6, W0
0x0CD6	0xB7A1AE  	MOV	WREG, OC8CON
;clutchmotor.c,23 :: 		CLUTCHMOTOR_PWM_PERIOD_VALUE = getTimerPeriod(CLUTCHMOTOR_PWM_PERIOD, TIMER2_PRESCALER);
0x0CD8	0x201100  	MOV	#lo_addr(T2CONbits), W0
0x0CDA	0x784010  	MOV.B	[W0], W0
0x0CDC	0x784080  	MOV.B	W0, W1
0x0CDE	0xB3C300  	MOV.B	#48, W0
0x0CE0	0x60C080  	AND.B	W1, W0, W1
0x0CE2	0xFB8001  	ZE	W1, W0
0x0CE4	0xDE00C4  	LSR	W0, #4, W1
0x0CE6	0x784601  	MOV.B	W1, W12
0x0CE8	0x2D70AA  	MOV	#55050, W10
0x0CEA	0x23CA3B  	MOV	#15523, W11
0x0CEC	0x07FDBB  	RCALL	_getTimerPeriod
0x0CEE	0x884420  	MOV	W0, _CLUTCHMOTOR_PWM_PERIOD_VALUE
;clutchmotor.c,26 :: 		(CLUTCHMOTOR_MAX_PWM_PERCENTAGE / 100.0));
0x0CF0	0xEB0080  	CLR	W1
0x0CF2	0x07FB8D  	RCALL	__Long2Float
0x0CF4	0x247AE2  	MOV	#18350, W2
0x0CF6	0x23DE13  	MOV	#15841, W3
0x0CF8	0x07FA03  	RCALL	__Mul_FP
0x0CFA	0x07FA97  	RCALL	__Float2Longint
0x0CFC	0x884430  	MOV	W0, _CLUTCHMOTOR_PWM_MAX_VALUE
;clutchmotor.c,28 :: 		(CLUTCHMOTOR_MIN_PWM_PERCENTAGE / 100.0));
0x0CFE	0x804420  	MOV	_CLUTCHMOTOR_PWM_PERIOD_VALUE, W0
0x0D00	0xEB0080  	CLR	W1
0x0D02	0x07FB85  	RCALL	__Long2Float
0x0D04	0x2CCCD2  	MOV	#52429, W2
0x0D06	0x23D4C3  	MOV	#15692, W3
0x0D08	0x07F9FB  	RCALL	__Mul_FP
0x0D0A	0x07FA8F  	RCALL	__Float2Longint
0x0D0C	0x884340  	MOV	W0, _CLUTCHMOTOR_PWM_MIN_VALUE
;clutchmotor.c,29 :: 		CLUTCHMOTOR_PERCENTAGE_STEP = (CLUTCHMOTOR_PWM_MAX_VALUE - CLUTCHMOTOR_PWM_MIN_VALUE) / 100.0;
0x0D0E	0x208861  	MOV	#lo_addr(_CLUTCHMOTOR_PWM_MAX_VALUE), W1
0x0D10	0x100011  	SUBR	W0, [W1], W0
0x0D12	0xEB0080  	CLR	W1
0x0D14	0x07FB7C  	RCALL	__Long2Float
0x0D16	0x200002  	MOV	#0, W2
0x0D18	0x242C83  	MOV	#17096, W3
0x0D1A	0x070232  	RCALL	__Div_FP
0x0D1C	0x884320  	MOV	W0, _CLUTCHMOTOR_PERCENTAGE_STEP
0x0D1E	0x884331  	MOV	W1, _CLUTCHMOTOR_PERCENTAGE_STEP+2
;clutchmotor.c,30 :: 		OC8R = CLUTCHMOTOR_PWM_MIN_VALUE;
0x0D20	0x804340  	MOV	_CLUTCHMOTOR_PWM_MIN_VALUE, W0
0x0D22	0xB7A1AC  	MOV	WREG, OC8R
;clutchmotor.c,31 :: 		ClutchMotor_setPosition(100);
0x0D24	0xB3C64A  	MOV.B	#100, W10
0x0D26	0x07FD7F  	RCALL	_ClutchMotor_setPosition
;clutchmotor.c,32 :: 		}
L_end_ClutchMotor_setupPWM:
0x0D28	0x78064F  	POP	W12
0x0D2A	0x7805CF  	POP	W11
0x0D2C	0x78054F  	POP	W10
0x0D2E	0x060000  	RETURN
; end of _ClutchMotor_setupPWM
_ClutchMotor_setPosition:
0x0826	0xFA0004  	LNK	#4
;clutchmotor.c,34 :: 		void ClutchMotor_setPosition(unsigned char percentage) {
;clutchmotor.c,36 :: 		pwmValue = (unsigned int) ((percentage * CLUTCHMOTOR_PERCENTAGE_STEP) + CLUTCHMOTOR_PWM_MIN_VALUE);
0x0828	0xFB800A  	ZE	W10, W0
0x082A	0xEB0080  	CLR	W1
0x082C	0x07FDF0  	RCALL	__Long2Float
0x082E	0x804322  	MOV	_CLUTCHMOTOR_PERCENTAGE_STEP, W2
0x0830	0x804333  	MOV	_CLUTCHMOTOR_PERCENTAGE_STEP+2, W3
0x0832	0x07FC66  	RCALL	__Mul_FP
0x0834	0x980700  	MOV	W0, [W14+0]
0x0836	0x980711  	MOV	W1, [W14+2]
0x0838	0x804340  	MOV	_CLUTCHMOTOR_PWM_MIN_VALUE, W0
0x083A	0xEB0080  	CLR	W1
0x083C	0x07FDE8  	RCALL	__Long2Float
0x083E	0x90010E  	MOV	[W14+0], W2
0x0840	0x90019E  	MOV	[W14+2], W3
0x0842	0x07FD2F  	RCALL	__AddSub_FP
0x0844	0x07FCF2  	RCALL	__Float2Longint
; pwmValue start address is: 4 (W2)
0x0846	0x780100  	MOV	W0, W2
;clutchmotor.c,37 :: 		if (pwmValue > CLUTCHMOTOR_PWM_MAX_VALUE) {
0x0848	0x208861  	MOV	#lo_addr(_CLUTCHMOTOR_PWM_MAX_VALUE), W1
0x084A	0xE10011  	CP	W0, [W1]
0x084C	0x360002  	BRA LEU	L_ClutchMotor_setPosition0
L__ClutchMotor_setPosition8:
; pwmValue end address is: 4 (W2)
;clutchmotor.c,38 :: 		pwmValue = CLUTCHMOTOR_PWM_MAX_VALUE;
; pwmValue start address is: 0 (W0)
0x084E	0x804430  	MOV	_CLUTCHMOTOR_PWM_MAX_VALUE, W0
;clutchmotor.c,39 :: 		} else if (pwmValue < CLUTCHMOTOR_PWM_MIN_VALUE) {
; pwmValue end address is: 0 (W0)
0x0850	0x370006  	BRA	L_ClutchMotor_setPosition1
L_ClutchMotor_setPosition0:
; pwmValue start address is: 4 (W2)
0x0852	0x208680  	MOV	#lo_addr(_CLUTCHMOTOR_PWM_MIN_VALUE), W0
0x0854	0xE11010  	CP	W2, [W0]
0x0856	0x310002  	BRA GEU	L__ClutchMotor_setPosition3
L__ClutchMotor_setPosition9:
; pwmValue end address is: 4 (W2)
;clutchmotor.c,40 :: 		pwmValue = CLUTCHMOTOR_PWM_MIN_VALUE;
; pwmValue start address is: 0 (W0)
0x0858	0x804340  	MOV	_CLUTCHMOTOR_PWM_MIN_VALUE, W0
; pwmValue end address is: 0 (W0)
;clutchmotor.c,41 :: 		}
0x085A	0x370001  	BRA	L_ClutchMotor_setPosition2
L__ClutchMotor_setPosition3:
;clutchmotor.c,39 :: 		} else if (pwmValue < CLUTCHMOTOR_PWM_MIN_VALUE) {
0x085C	0x780002  	MOV	W2, W0
;clutchmotor.c,41 :: 		}
L_ClutchMotor_setPosition2:
; pwmValue start address is: 0 (W0)
; pwmValue end address is: 0 (W0)
L_ClutchMotor_setPosition1:
;clutchmotor.c,42 :: 		OC8RS = pwmValue;
; pwmValue start address is: 0 (W0)
0x085E	0xB7A1AA  	MOV	WREG, OC8RS
; pwmValue end address is: 0 (W0)
;clutchmotor.c,43 :: 		}
L_end_ClutchMotor_setPosition:
0x0860	0xFA8000  	ULNK
0x0862	0x060000  	RETURN
; end of _ClutchMotor_setPosition
__AddSub_FP:
0x02A2	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,582 :: 		
;__Lib_MathDouble.c,584 :: 		
0x02A4	0x070002  	RCALL	AddSubFP__addsf3
;__Lib_MathDouble.c,585 :: 		
0x02A6	0x00000004040A  	GOTO	the_end__AddSub_FP
;__Lib_MathDouble.c,588 :: 		
AddSubFP__addsf3:
;__Lib_MathDouble.c,589 :: 		
0x02AA	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,590 :: 		
0x02AC	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,591 :: 		
0x02AE	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,592 :: 		
0x02B0	0x070059  	RCALL	AddSubFP__funpack2
;__Lib_MathDouble.c,593 :: 		
0x02B2	0x330060  	BRA N	AddSubFP__fPropagateNaN
;__Lib_MathDouble.c,594 :: 		
0x02B4	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,595 :: 		
0x02B6	0x32004F  	BRA Z	AddSubFP_aisinfinite
;__Lib_MathDouble.c,596 :: 		
AddSubFP_checkspecialb:
;__Lib_MathDouble.c,597 :: 		
0x02B8	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,598 :: 		
0x02BA	0x320052  	BRA Z	AddSubFP_return2_3
;__Lib_MathDouble.c,599 :: 		
0x02BC	0x6C8203  	XOR	W9, W3, W4
;__Lib_MathDouble.c,600 :: 		
0x02BE	0x3B0007  	BRA NN	AddSubFP_getsign
;__Lib_MathDouble.c,601 :: 		
0x02C0	0xD00509  	SL	W9, W10
;__Lib_MathDouble.c,602 :: 		
0x02C2	0xD00603  	SL	W3, W12
;__Lib_MathDouble.c,603 :: 		
0x02C4	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,604 :: 		
0x02C6	0x5D060C  	SUBB	W10, W12, W12
;__Lib_MathDouble.c,605 :: 		
0x02C8	0x390002  	BRA NC	AddSubFP_getsign
;__Lib_MathDouble.c,606 :: 		
0x02CA	0x320002  	BRA Z	AddSubFP_gotsign
;__Lib_MathDouble.c,607 :: 		
0x02CC	0x880039  	MOV	W9, W3
;__Lib_MathDouble.c,608 :: 		
AddSubFP_getsign:
;__Lib_MathDouble.c,609 :: 		
0x02CE	0x8800C3  	MOV	W3, W12
;__Lib_MathDouble.c,610 :: 		
AddSubFP_gotsign:
;__Lib_MathDouble.c,611 :: 		
0x02D0	0x558285  	SUB	W11, W5, W5
;__Lib_MathDouble.c,612 :: 		
0x02D2	0x3D0004  	BRA GE	AddSubFP_expcanonical
;__Lib_MathDouble.c,613 :: 		
0x02D4	0xFD0300  	EXCH	W0, W6
;__Lib_MathDouble.c,614 :: 		
0x02D6	0xFD0381  	EXCH	W1, W7
;__Lib_MathDouble.c,615 :: 		
0x02D8	0xEA0285  	NEG	W5, W5
;__Lib_MathDouble.c,616 :: 		
0x02DA	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,617 :: 		
AddSubFP_expcanonical:
;__Lib_MathDouble.c,618 :: 		
0x02DC	0x720F84  	IOR	W4, W4, [W15]
;__Lib_MathDouble.c,619 :: 		
0x02DE	0x3B0002  	BRA NN	AddSubFP_nonegate
;__Lib_MathDouble.c,620 :: 		
0x02E0	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,621 :: 		
0x02E2	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,622 :: 		
AddSubFP_nonegate:
;__Lib_MathDouble.c,623 :: 		
0x02E4	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,624 :: 		
0x02E6	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,625 :: 		
0x02E8	0xE1287A  	CP	W5, #26
;__Lib_MathDouble.c,626 :: 		
0x02EA	0x39000A  	BRA NC	AddSubFP_aligniter
;__Lib_MathDouble.c,627 :: 		
0x02EC	0x880006  	MOV	W6, W0
;__Lib_MathDouble.c,628 :: 		
0x02EE	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,629 :: 		
0x02F0	0xB207F7  	AND	#127, W7
;__Lib_MathDouble.c,630 :: 		
0x02F2	0x758087  	IOR	W11, W7, W1
;__Lib_MathDouble.c,631 :: 		
0x02F4	0x37002D  	BRA	AddSubFP_signoff
;__Lib_MathDouble.c,632 :: 		
AddSubFP_align:
;__Lib_MathDouble.c,633 :: 		
0x02F6	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,634 :: 		
0x02F8	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,635 :: 		
0x02FA	0x600561  	AND	W0, #1, W10
;__Lib_MathDouble.c,636 :: 		
0x02FC	0xD18081  	ASR	W1, W1
;__Lib_MathDouble.c,637 :: 		
0x02FE	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,638 :: 		
AddSubFP_aligniter:
;__Lib_MathDouble.c,639 :: 		
0x0300	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,640 :: 		
0x0302	0x3BFFF9  	BRA NN	AddSubFP_align
;__Lib_MathDouble.c,641 :: 		
AddSubFP_aligned:
;__Lib_MathDouble.c,642 :: 		
0x0304	0x400406  	ADD	W0, W6, W8
;__Lib_MathDouble.c,643 :: 		
0x0306	0x488487  	ADDC	W1, W7, W9
;__Lib_MathDouble.c,644 :: 		
0x0308	0x3B0002  	BRA NN	AddSubFP_normalizesum
;__Lib_MathDouble.c,645 :: 		
0x030A	0x140460  	SUBR	W8, #0, W8
;__Lib_MathDouble.c,646 :: 		
0x030C	0x1C84E0  	SUBBR	W9, #0, W9
;__Lib_MathDouble.c,647 :: 		
AddSubFP_normalizesum:
;__Lib_MathDouble.c,648 :: 		
0x030E	0xA38809  	BTST.Z	W9, #8
;__Lib_MathDouble.c,649 :: 		
0x0310	0x320007  	BRA Z	AddSubFP_checknormal
;__Lib_MathDouble.c,650 :: 		
0x0312	0x71818A  	IOR	W3, W10, W3
;__Lib_MathDouble.c,651 :: 		
0x0314	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,652 :: 		
0x0316	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,653 :: 		
0x0318	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,654 :: 		
0x031A	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,655 :: 		
0x031C	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,656 :: 		
0x031E	0x370017  	BRA	AddSubFP_round
;__Lib_MathDouble.c,657 :: 		
AddSubFP_checknormal:
;__Lib_MathDouble.c,658 :: 		
0x0320	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,659 :: 		
0x0322	0x3A0013  	BRA NZ	AddSubFP_discardguard
;__Lib_MathDouble.c,660 :: 		
AddSubFP_underflow:
;__Lib_MathDouble.c,661 :: 		
0x0324	0xE20016  	CP0	W11
;__Lib_MathDouble.c,662 :: 		
0x0326	0x340013  	BRA LE	AddSubFP_round
;__Lib_MathDouble.c,663 :: 		
0x0328	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,664 :: 		
0x032A	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,665 :: 		
0x032C	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,666 :: 		
0x032E	0x74440A  	IOR.B	W8, W10, W8
;__Lib_MathDouble.c,667 :: 		
0x0330	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,668 :: 		
0x0332	0x3A000D  	BRA NZ	AddSubFP_round
;__Lib_MathDouble.c,669 :: 		
AddSubFP_normalizeloop:
;__Lib_MathDouble.c,670 :: 		
0x0334	0xE20016  	CP0	W11
;__Lib_MathDouble.c,671 :: 		
0x0336	0x340007  	BRA LE	AddSubFP_normalizeexit
;__Lib_MathDouble.c,672 :: 		
0x0338	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,673 :: 		
0x033A	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,674 :: 		
0x033C	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,675 :: 		
0x033E	0x3A0001  	BRA NZ	AddSubFP_normalizetest
;__Lib_MathDouble.c,676 :: 		
0x0340	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,677 :: 		
AddSubFP_normalizetest:
;__Lib_MathDouble.c,678 :: 		
0x0342	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,679 :: 		
0x0344	0x32FFF7  	BRA Z	AddSubFP_normalizeloop
;__Lib_MathDouble.c,680 :: 		
AddSubFP_normalizeexit:
;__Lib_MathDouble.c,681 :: 		
0x0346	0xEB0100  	CLR	W2
;__Lib_MathDouble.c,682 :: 		
0x0348	0x370002  	BRA	AddSubFP_round
;__Lib_MathDouble.c,683 :: 		
AddSubFP_discardguard:
;__Lib_MathDouble.c,684 :: 		
0x034A	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,685 :: 		
0x034C	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,686 :: 		
AddSubFP_round:
;__Lib_MathDouble.c,687 :: 		
0x034E	0x070022  	RCALL	AddSubFP__fpack
;__Lib_MathDouble.c,688 :: 		
AddSubFP_signoff:
;__Lib_MathDouble.c,689 :: 		
0x0350	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,690 :: 		
0x0352	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,691 :: 		
0x0354	0x370018  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,692 :: 		
AddSubFP_aisinfinite:
;__Lib_MathDouble.c,693 :: 		
0x0356	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,694 :: 		
0x0358	0x3A0002  	BRA NZ	AddSubFP_return8_3
;__Lib_MathDouble.c,695 :: 		
0x035A	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,696 :: 		
0x035C	0x330018  	BRA N	AddSubFP__fbopReturnNaN
;__Lib_MathDouble.c,697 :: 		
AddSubFP_return8_3:
;__Lib_MathDouble.c,698 :: 		
0x035E	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,699 :: 		
AddSubFP_return2_3:
;__Lib_MathDouble.c,700 :: 		
0x0360	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,701 :: 		
0x0362	0x370011  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,702 :: 		
AddSubFP__funpack2:
;__Lib_MathDouble.c,703 :: 		
0x0364	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,704 :: 		
0x0366	0x07003C  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,705 :: 		
0x0368	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,706 :: 		
0x036A	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,707 :: 		
0x036C	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,708 :: 		
0x036E	0x070038  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,709 :: 		
0x0370	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,710 :: 		
0x0372	0x060000  	RETURN
;__Lib_MathDouble.c,711 :: 		
AddSubFP__fPropagateNaN:
;__Lib_MathDouble.c,712 :: 		
0x0374	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,713 :: 		
0x0376	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,714 :: 		
0x0378	0x360005  	BRA LEU	AddSubFP_return0_1
;__Lib_MathDouble.c,715 :: 		
0x037A	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,716 :: 		
0x037C	0x360002  	BRA LEU	AddSubFP_return8_1
;__Lib_MathDouble.c,717 :: 		
0x037E	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,718 :: 		
0x0380	0x3A0001  	BRA NZ	AddSubFP_return0_1
;__Lib_MathDouble.c,719 :: 		
AddSubFP_return8_1:
;__Lib_MathDouble.c,720 :: 		
0x0382	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,721 :: 		
AddSubFP_return0_1:
;__Lib_MathDouble.c,722 :: 		
0x0384	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,723 :: 		
AddSubFP__fbopExit:
;__Lib_MathDouble.c,724 :: 		
0x0386	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,725 :: 		
0x0388	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,726 :: 		
0x038A	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,727 :: 		
0x038C	0x060000  	RETURN
;__Lib_MathDouble.c,728 :: 		
AddSubFP__fbopReturnNaN:
;__Lib_MathDouble.c,729 :: 		
0x038E	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,730 :: 		
0x0390	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,731 :: 		
0x0392	0x37FFF9  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,732 :: 		
AddSubFP__fpack:
;__Lib_MathDouble.c,733 :: 		
0x0394	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,734 :: 		
0x0396	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,735 :: 		
0x0398	0x3D000B  	BRA GE	AddSubFP_notsubnormal_1
;__Lib_MathDouble.c,736 :: 		
0x039A	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,737 :: 		
0x039C	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,738 :: 		
0x039E	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,739 :: 		
0x03A0	0x34001D  	BRA LE	AddSubFP_zerosig
;__Lib_MathDouble.c,740 :: 		
AddSubFP_subnormal_1:
;__Lib_MathDouble.c,741 :: 		
0x03A2	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,742 :: 		
0x03A4	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,743 :: 		
0x03A6	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,744 :: 		
0x03A8	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,745 :: 		
0x03AA	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,746 :: 		
0x03AC	0x3AFFFA  	BRA NZ	AddSubFP_subnormal_1
;__Lib_MathDouble.c,747 :: 		
0x03AE	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,748 :: 		
AddSubFP_notsubnormal_1:
;__Lib_MathDouble.c,749 :: 		
0x03B0	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,750 :: 		
0x03B2	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,751 :: 		
0x03B4	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,752 :: 		
0x03B6	0x320009  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,753 :: 		
0x03B8	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,754 :: 		
0x03BA	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,755 :: 		
0x03BC	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,756 :: 		
0x03BE	0x320005  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,757 :: 		
0x03C0	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,758 :: 		
0x03C2	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,759 :: 		
0x03C4	0x3A0002  	BRA NZ	AddSubFP_packupandgo
;__Lib_MathDouble.c,760 :: 		
0x03C6	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,761 :: 		
0x03C8	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,762 :: 		
AddSubFP_packupandgo:
;__Lib_MathDouble.c,763 :: 		
0x03CA	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,764 :: 		
0x03CC	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,765 :: 		
0x03CE	0x3D0005  	BRA GE	AddSubFP_overflow
;__Lib_MathDouble.c,766 :: 		
0x03D0	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,767 :: 		
0x03D2	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,768 :: 		
0x03D4	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,769 :: 		
0x03D6	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,770 :: 		
0x03D8	0x060000  	RETURN
;__Lib_MathDouble.c,771 :: 		
AddSubFP_overflow:
;__Lib_MathDouble.c,772 :: 		
0x03DA	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,773 :: 		
AddSubFP_zerosig:
;__Lib_MathDouble.c,774 :: 		
0x03DC	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,775 :: 		
0x03DE	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,776 :: 		
AddSubFP__funpack:
;__Lib_MathDouble.c,777 :: 		
0x03E0	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,778 :: 		
0x03E2	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,779 :: 		
0x03E4	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,780 :: 		
0x03E6	0x320008  	BRA Z	AddSubFP_zeroorsub
;__Lib_MathDouble.c,781 :: 		
0x03E8	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,782 :: 		
0x03EA	0x320002  	BRA Z	AddSubFP_nanorinf
;__Lib_MathDouble.c,783 :: 		
AddSubFP_finitereturn:
;__Lib_MathDouble.c,784 :: 		
0x03EC	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,785 :: 		
0x03EE	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,786 :: 		
AddSubFP_nanorinf:
;__Lib_MathDouble.c,787 :: 		
0x03F0	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,788 :: 		
0x03F2	0x320001  	BRA Z	AddSubFP_infinite
;__Lib_MathDouble.c,789 :: 		
0x03F4	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,790 :: 		
AddSubFP_infinite:
;__Lib_MathDouble.c,791 :: 		
0x03F6	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,792 :: 		
AddSubFP_zeroorsub:
;__Lib_MathDouble.c,793 :: 		
0x03F8	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,794 :: 		
0x03FA	0x3A0002  	BRA NZ	AddSubFP_subnormal_2
;__Lib_MathDouble.c,795 :: 		
0x03FC	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,796 :: 		
AddSubFP_normalize:
;__Lib_MathDouble.c,797 :: 		
0x03FE	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,798 :: 		
AddSubFP_subnormal_2:
;__Lib_MathDouble.c,799 :: 		
0x0400	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,800 :: 		
0x0402	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,801 :: 		
0x0404	0x3BFFFC  	BRA NN	AddSubFP_normalize
;__Lib_MathDouble.c,802 :: 		
0x0406	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,803 :: 		
0x0408	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,806 :: 		
the_end__AddSub_FP:
;__Lib_MathDouble.c,809 :: 		
L_end__AddSub_FP:
0x040A	0xFA8000  	ULNK
0x040C	0x060000  	RETURN
; end of __AddSub_FP
_Efi_init:
;efi.c,6 :: 		void Efi_init(void) {
;efi.c,7 :: 		DOWNCUT_Direction = OUTPUT;
0x10BE	0xA942D2  	BCLR	TRISD2_bit, BitPos(TRISD2_bit+0)
;efi.c,8 :: 		UPCUT_Direction = OUTPUT;
0x10C0	0xA962D2  	BCLR	TRISD3_bit, BitPos(TRISD3_bit+0)
;efi.c,9 :: 		RPM_LIMITER_Direction = OUTPUT;
0x10C2	0xA982D2  	BCLR	TRISD4_bit, BitPos(TRISD4_bit+0)
;efi.c,10 :: 		RPM_LIMITER_Pin = 0;
0x10C4	0xA982D4  	BCLR	RD4_bit, BitPos(RD4_bit+0)
;efi.c,11 :: 		Efi_unsetBlip();
0x10C6	0x07FC6F  	RCALL	_Efi_unsetBlip
;efi.c,12 :: 		Efi_unsetCut();
0x10C8	0x07FC70  	RCALL	_Efi_unsetCut
;efi.c,13 :: 		Efi_unsetRPMLimiter();
0x10CA	0x07FFF7  	RCALL	_Efi_unsetRPMLimiter
;efi.c,14 :: 		}
L_end_Efi_init:
0x10CC	0x060000  	RETURN
; end of _Efi_init
_Efi_unsetBlip:
;efi.c,28 :: 		void Efi_unsetBlip(void) {
;efi.c,29 :: 		DOWNCUT_Pin = UNSET_CUT;
0x09A6	0xA842D4  	BSET	RD2_bit, BitPos(RD2_bit+0)
;efi.c,30 :: 		}
L_end_Efi_unsetBlip:
0x09A8	0x060000  	RETURN
; end of _Efi_unsetBlip
_Efi_unsetCut:
;efi.c,20 :: 		void Efi_unsetCut(void) {
;efi.c,21 :: 		UPCUT_Pin = UNSET_CUT;
0x09AA	0xA862D4  	BSET	RD3_bit, BitPos(RD3_bit+0)
;efi.c,22 :: 		}
L_end_Efi_unsetCut:
0x09AC	0x060000  	RETURN
; end of _Efi_unsetCut
_Efi_unsetRPMLimiter:
;efi.c,36 :: 		void Efi_unsetRPMLimiter(void){
;efi.c,37 :: 		RPM_LIMITER_Pin = UNSET_RPM_LIMITER;
0x10BA	0xA882D4  	BSET	RD4_bit, BitPos(RD4_bit+0)
;efi.c,38 :: 		}
L_end_Efi_unsetRPMLimiter:
0x10BC	0x060000  	RETURN
; end of _Efi_unsetRPMLimiter
_GearShift_init:
;gearshift.c,14 :: 		void GearShift_init(void) {
;gearshift.c,15 :: 		gearShift_currentGear = 0;
0x1092	0xEF2000  	CLR	W0
0x1094	0x884440  	MOV	W0, _gearShift_currentGear
;gearshift.c,16 :: 		gearShift_isShiftingUp = FALSE;
0x1096	0x2088B1  	MOV	#lo_addr(_gearShift_isShiftingUp), W1
0x1098	0xEF2000  	CLR	W0
0x109A	0x784880  	MOV.B	W0, [W1]
;gearshift.c,17 :: 		gearShift_isShiftingDown = FALSE;
0x109C	0x208901  	MOV	#lo_addr(_gearShift_isShiftingDown), W1
0x109E	0xEF2000  	CLR	W0
0x10A0	0x784880  	MOV.B	W0, [W1]
;gearshift.c,18 :: 		gearShift_isSettingNeutral = FALSE;
0x10A2	0x208911  	MOV	#lo_addr(_gearShift_isSettingNeutral), W1
0x10A4	0xEF2000  	CLR	W0
0x10A6	0x784880  	MOV.B	W0, [W1]
;gearshift.c,19 :: 		gearShift_isUnsettingNeutral = FALSE;
0x10A8	0x2088A1  	MOV	#lo_addr(_gearShift_isUnsettingNeutral), W1
0x10AA	0xEF2000  	CLR	W0
0x10AC	0x784880  	MOV.B	W0, [W1]
;gearshift.c,20 :: 		gearShift_ticksCounter1 = 0;
0x10AE	0xEF2000  	CLR	W0
0x10B0	0x884460  	MOV	W0, _gearShift_ticksCounter1
;gearshift.c,21 :: 		gearShift_ticksCounter2 = 0;
0x10B2	0xEF2000  	CLR	W0
0x10B4	0x884470  	MOV	W0, _gearShift_ticksCounter2
;gearshift.c,22 :: 		GearShift_loadDefaultTimings();
0x10B6	0x07FC1C  	RCALL	_GearShift_loadDefaultTimings
;gearshift.c,23 :: 		}
L_end_GearShift_init:
0x10B8	0x060000  	RETURN
; end of _GearShift_init
_GearShift_loadDefaultTimings:
;gearshift.c,403 :: 		void GearShift_loadDefaultTimings(void) {
;gearshift.c,404 :: 		gearShift_timings[DELAY] = DEFAULT_DELAY;
0x08F0	0x200140  	MOV	#20, W0
0x08F2	0x884210  	MOV	W0, _gearShift_timings+32
;gearshift.c,405 :: 		gearShift_timings[UP_REBOUND] = DEFAULT_UP_REBOUND;
0x08F4	0x2000F0  	MOV	#15, W0
0x08F6	0x884220  	MOV	W0, _gearShift_timings+34
;gearshift.c,406 :: 		gearShift_timings[UP_BRAKE] = DEFAULT_UP_BRAKE;
0x08F8	0x200140  	MOV	#20, W0
0x08FA	0x884230  	MOV	W0, _gearShift_timings+36
;gearshift.c,407 :: 		gearShift_timings[UP_PUSH_1_2] = DEFAULT_UP_PUSH_1_2;
0x08FC	0x200730  	MOV	#115, W0
0x08FE	0x8841D0  	MOV	W0, _gearShift_timings+24
;gearshift.c,408 :: 		gearShift_timings[UP_PUSH_2_3] = DEFAULT_UP_PUSH_2_3;
0x0900	0x200640  	MOV	#100, W0
0x0902	0x8841E0  	MOV	W0, _gearShift_timings+26
;gearshift.c,409 :: 		gearShift_timings[UP_PUSH_3_4] = DEFAULT_UP_PUSH_3_4;
0x0904	0x200640  	MOV	#100, W0
0x0906	0x8841F0  	MOV	W0, _gearShift_timings+28
;gearshift.c,410 :: 		gearShift_timings[UP_PUSH_4_5] = DEFAULT_UP_PUSH_4_5;
0x0908	0x200640  	MOV	#100, W0
0x090A	0x884200  	MOV	W0, _gearShift_timings+30
;gearshift.c,412 :: 		gearShift_timings[CLUTCH] = DEFAULT_CLUTCH;
0x090C	0x200460  	MOV	#70, W0
0x090E	0x8841A0  	MOV	W0, _gearShift_timings+18
;gearshift.c,413 :: 		gearShift_timings[DN_PUSH] = DEFAULT_DN_PUSH;
0x0910	0x200640  	MOV	#100, W0
0x0912	0x884190  	MOV	W0, _gearShift_timings+16
;gearshift.c,414 :: 		gearShift_timings[DN_BRAKE] = DEFAULT_DN_BRAKE;
0x0914	0x2000F0  	MOV	#15, W0
0x0916	0x8841C0  	MOV	W0, _gearShift_timings+22
;gearshift.c,415 :: 		gearShift_timings[DN_REBOUND] = DEFAULT_DN_REBOUND;
0x0918	0x200140  	MOV	#20, W0
0x091A	0x8841B0  	MOV	W0, _gearShift_timings+20
;gearshift.c,417 :: 		gearShift_timings[NT_CLUTCH_DELAY] = DEFAULT_NT_CLUTCH_DELAY;
0x091C	0x200140  	MOV	#20, W0
0x091E	0x884240  	MOV	W0, _gearShift_timings+38
;gearshift.c,418 :: 		gearShift_timings[NT_REBOUND_1_N] = DEFAULT_NT_REBOUND_1_N;
0x0920	0x2000F0  	MOV	#15, W0
0x0922	0x884130  	MOV	W0, _gearShift_timings+4
;gearshift.c,419 :: 		gearShift_timings[NT_REBOUND_2_N] = DEFAULT_NT_REBOUND_2_N;
0x0924	0x2000F0  	MOV	#15, W0
0x0926	0x884170  	MOV	W0, _gearShift_timings+12
;gearshift.c,420 :: 		gearShift_timings[NT_BRAKE_1_N] = DEFAULT_NT_BRAKE_1_N;
0x0928	0x200230  	MOV	#35, W0
0x092A	0x884140  	MOV	W0, _gearShift_timings+6
;gearshift.c,421 :: 		gearShift_timings[NT_BRAKE_2_N] = DEFAULT_NT_BRAKE_2_N;
0x092C	0x200230  	MOV	#35, W0
0x092E	0x884180  	MOV	W0, _gearShift_timings+14
;gearshift.c,422 :: 		gearShift_timings[NT_PUSH_1_N] = DEFAULT_NT_PUSH_1_N;
0x0930	0x200160  	MOV	#22, W0
0x0932	0x884110  	MOV	W0, _gearShift_timings
;gearshift.c,423 :: 		gearShift_timings[NT_PUSH_2_N] = DEFAULT_NT_PUSH_2_N;
0x0934	0x200190  	MOV	#25, W0
0x0936	0x884150  	MOV	W0, _gearShift_timings+8
;gearshift.c,424 :: 		gearShift_timings[NT_CLUTCH_1_N] = DEFAULT_NT_CLUTCH_1_N;
0x0938	0x2012C0  	MOV	#300, W0
0x093A	0x884120  	MOV	W0, _gearShift_timings+2
;gearshift.c,425 :: 		gearShift_timings[NT_CLUTCH_2_N] = DEFAULT_NT_CLUTCH_2_N;
0x093C	0x2012C0  	MOV	#300, W0
0x093E	0x884160  	MOV	W0, _gearShift_timings+10
;gearshift.c,428 :: 		gearShift_timings[DOWN_TIME_CHECK] = DEFAULT_DOWN_TIME_CHECK;
0x0940	0x201F40  	MOV	#500, W0
0x0942	0x884250  	MOV	W0, _gearShift_timings+40
;gearshift.c,429 :: 		gearShift_timings[UP_TIME_CHECK] = DEFAULT_UP_TIME_CHECK;
0x0944	0x201F40  	MOV	#500, W0
0x0946	0x884260  	MOV	W0, _gearShift_timings+42
;gearshift.c,430 :: 		gearShift_timings[MAX_TRIES] = DEFAULT_MAX_TRIES;
0x0948	0x200020  	MOV	#2, W0
0x094A	0x884270  	MOV	W0, _gearShift_timings+44
;gearshift.c,431 :: 		}
L_end_GearShift_loadDefaultTimings:
0x094C	0x060000  	RETURN
; end of _GearShift_loadDefaultTimings
_StopLight_init:
;stoplight.c,11 :: 		void StopLight_init(void) {
;stoplight.c,12 :: 		StopLight_setupPWM();
0x10FC	0x07FCCF  	RCALL	_StopLight_setupPWM
;stoplight.c,13 :: 		}
L_end_StopLight_init:
0x10FE	0x060000  	RETURN
; end of _StopLight_init
_StopLight_setupPWM:
;stoplight.c,15 :: 		void StopLight_setupPWM(void) {
;stoplight.c,16 :: 		OC7CON = 0x6; //PWM on Timer 2
0x0A9C	0x781F8A  	PUSH	W10
0x0A9E	0x781F8B  	PUSH	W11
0x0AA0	0x781F8C  	PUSH	W12
0x0AA2	0x200060  	MOV	#6, W0
0x0AA4	0xB7A1A8  	MOV	WREG, OC7CON
;stoplight.c,17 :: 		STOPLIGHT_PWM_PERIOD_VALUE = getTimerPeriod(STOPLIGHT_PWM_PERIOD, TIMER2_PRESCALER);
0x0AA6	0x201100  	MOV	#lo_addr(T2CONbits), W0
0x0AA8	0x784010  	MOV.B	[W0], W0
0x0AAA	0x784080  	MOV.B	W0, W1
0x0AAC	0xB3C300  	MOV.B	#48, W0
0x0AAE	0x60C080  	AND.B	W1, W0, W1
0x0AB0	0xFB8001  	ZE	W1, W0
0x0AB2	0xDE00C4  	LSR	W0, #4, W1
0x0AB4	0x784601  	MOV.B	W1, W12
0x0AB6	0x2D70AA  	MOV	#55050, W10
0x0AB8	0x23CA3B  	MOV	#15523, W11
0x0ABA	0x07FED4  	RCALL	_getTimerPeriod
0x0ABC	0x884280  	MOV	W0, _STOPLIGHT_PWM_PERIOD_VALUE
;stoplight.c,19 :: 		(STOPLIGHT_PWM_PERCENTAGE / 100.0));
0x0ABE	0xEB0080  	CLR	W1
0x0AC0	0x07FCA6  	RCALL	__Long2Float
0x0AC2	0x233332  	MOV	#13107, W2
0x0AC4	0x23F733  	MOV	#16243, W3
0x0AC6	0x07FB1C  	RCALL	__Mul_FP
0x0AC8	0x07FBB0  	RCALL	__Float2Longint
0x0ACA	0x884100  	MOV	W0, _STOPLIGHT_PWM_VALUE
;stoplight.c,20 :: 		OC7R = STOPLIGHT_PWM_VALUE;
0x0ACC	0xB7A1A6  	MOV	WREG, OC7R
;stoplight.c,21 :: 		OC7RS = STOPLIGHT_PWM_VALUE;
0x0ACE	0xB7A1A4  	MOV	WREG, OC7RS
;stoplight.c,22 :: 		}
L_end_StopLight_setupPWM:
0x0AD0	0x78064F  	POP	W12
0x0AD2	0x7805CF  	POP	W11
0x0AD4	0x78054F  	POP	W10
0x0AD6	0x060000  	RETURN
; end of _StopLight_setupPWM
_Buzzer_init:
;buzzer.c,14 :: 		void Buzzer_init(void) {
;buzzer.c,15 :: 		BUZZER_Direction = OUTPUT;
0x10D8	0x781F8A  	PUSH	W10
0x10DA	0x781F8B  	PUSH	W11
0x10DC	0x781F8C  	PUSH	W12
0x10DE	0xA9A2E5  	BCLR	TRISG13_bit, BitPos(TRISG13_bit+0)
;buzzer.c,16 :: 		BUZZER_Pin = 0;
0x10E0	0xA9A2E7  	BCLR	RG13_bit, BitPos(RG13_bit+0)
;buzzer.c,17 :: 		setTimer(TIMER4_DEVICE, BUZZER_TIMER_PERIOD);
0x10E2	0x2126FB  	MOV	#4719, W11
0x10E4	0x23A03C  	MOV	#14851, W12
0x10E6	0xB3C03A  	MOV.B	#3, W10
0x10E8	0x07FD21  	RCALL	_setTimer
;buzzer.c,18 :: 		setInterruptPriority(TIMER4_DEVICE, LOW_PRIORITY);
0x10EA	0xB3C05B  	MOV.B	#5, W11
0x10EC	0xB3C03A  	MOV.B	#3, W10
0x10EE	0x07FACB  	RCALL	_setInterruptPriority
;buzzer.c,19 :: 		buzzer_bipTicks = (int)(BUZZER_BIP_TIME / BUZZER_TIMER_PERIOD);
0x10F0	0x207CF0  	MOV	#1999, W0
0x10F2	0x884350  	MOV	W0, _buzzer_bipTicks
;buzzer.c,20 :: 		}
L_end_Buzzer_init:
0x10F4	0x78064F  	POP	W12
0x10F6	0x7805CF  	POP	W11
0x10F8	0x78054F  	POP	W10
0x10FA	0x060000  	RETURN
; end of _Buzzer_init
_aac_init:
;aac.c,25 :: 		void aac_init(void){
;aac.c,26 :: 		aac_currentState = OFF;
0x10CE	0x2086C1  	MOV	#lo_addr(_aac_currentState), W1
0x10D0	0xEF2000  	CLR	W0
0x10D2	0x784880  	MOV.B	W0, [W1]
;aac.c,27 :: 		aac_loadDefaultParams();
0x10D4	0x07FD07  	RCALL	_aac_loadDefaultParams
;aac.c,28 :: 		}
L_end_aac_init:
0x10D6	0x060000  	RETURN
; end of _aac_init
_aac_loadDefaultParams:
;aac.c,119 :: 		void aac_loadDefaultParams(void){
;aac.c,122 :: 		aac_parameters[RAMP_START]      = DEF_RAMP_START;
0x0AE4	0x200460  	MOV	#70, W0
0x0AE6	0x884370  	MOV	W0, _aac_parameters
;aac.c,123 :: 		aac_parameters[RAMP_END]        = DEF_RAMP_END;
0x0AE8	0xEF2000  	CLR	W0
0x0AEA	0x884380  	MOV	W0, _aac_parameters+2
;aac.c,124 :: 		aac_parameters[RAMP_TIME]       = DEF_RAMP_TIME;
0x0AEC	0x200FA0  	MOV	#250, W0
0x0AEE	0x884390  	MOV	W0, _aac_parameters+4
;aac.c,125 :: 		aac_parameters[RPM_LIMIT_1_2]   = DEF_RPM_LIMIT_1_2;
0x0AF0	0x22D7F0  	MOV	#11647, W0
0x0AF2	0x8843A0  	MOV	W0, _aac_parameters+6
;aac.c,126 :: 		aac_parameters[RPM_LIMIT_2_3]   = DEF_RPM_LIMIT_2_3;
0x0AF4	0x22CF20  	MOV	#11506, W0
0x0AF6	0x8843B0  	MOV	W0, _aac_parameters+8
;aac.c,127 :: 		aac_parameters[RPM_LIMIT_3_4]   = DEF_RPM_LIMIT_3_4;
0x0AF8	0x22C770  	MOV	#11383, W0
0x0AFA	0x8843C0  	MOV	W0, _aac_parameters+10
;aac.c,128 :: 		aac_parameters[RPM_LIMIT_4_5]   = DEF_RPM_LIMIT_4_5;
0x0AFC	0x22C620  	MOV	#11362, W0
0x0AFE	0x8843D0  	MOV	W0, _aac_parameters+12
;aac.c,129 :: 		aac_parameters[SPEED_LIMIT_1_2] = DEF_SPEED_LIMIT_1_2;
0x0B00	0x2002E0  	MOV	#46, W0
0x0B02	0x8843E0  	MOV	W0, _aac_parameters+14
;aac.c,130 :: 		aac_parameters[SPEED_LIMIT_2_3] = DEF_SPEED_LIMIT_2_3;
0x0B04	0x2003D0  	MOV	#61, W0
0x0B06	0x8843F0  	MOV	W0, _aac_parameters+16
;aac.c,131 :: 		aac_parameters[SPEED_LIMIT_3_4] = DEF_SPEED_LIMIT_3_4;
0x0B08	0x2004D0  	MOV	#77, W0
0x0B0A	0x884400  	MOV	W0, _aac_parameters+18
;aac.c,132 :: 		aac_parameters[SPEED_LIMIT_4_5] = DEF_SPEED_LIMIT_4_5;
0x0B0C	0x200710  	MOV	#113, W0
0x0B0E	0x884410  	MOV	W0, _aac_parameters+20
;aac.c,134 :: 		}
L_end_aac_loadDefaultParams:
0x0B10	0x060000  	RETURN
; end of _aac_loadDefaultParams
_Buzzer_Bip:
;buzzer.c,31 :: 		void Buzzer_Bip(void) {
;buzzer.c,32 :: 		buzzer_ticks = buzzer_bipTicks;
0x09DA	0x804350  	MOV	_buzzer_bipTicks, W0
0x09DC	0x884050  	MOV	W0, _buzzer_ticks
;buzzer.c,33 :: 		}
L_end_Buzzer_Bip:
0x09DE	0x060000  	RETURN
; end of _Buzzer_Bip
0x18F8	0x208001  	MOV	#lo_addr(_can_err), W1
0x18FA	0x280120  	MOV	#32786, W0
0x18FC	0x090002  	REPEAT	#2
0x18FE	0x7818B0  	MOV	[W0++], [W1++]
0x1900	0x7858B0  	MOV.B	[W0++], [W1++]
0x1902	0x208081  	MOV	#lo_addr(_can_txPriority), W1
0x1904	0x280000  	MOV	#32768, W0
0x1906	0x090004  	REPEAT	#4
0x1908	0x7818B0  	MOV	[W0++], [W1++]
0x190A	0x208071  	MOV	#lo_addr(_Clutch_currentValue), W1
0x190C	0x280190  	MOV	#32793, W0
0x190E	0x7858B0  	MOV.B	[W0++], [W1++]
0x1910	0x208121  	MOV	#lo_addr(_timer1_counter2), W1
0x1912	0x2801A0  	MOV	#32794, W0
0x1914	0x090002  	REPEAT	#2
0x1916	0x7818B0  	MOV	[W0++], [W1++]
0x1918	0x060000  	RETURN
_CAN_Interrupt:
0x1694	0xFA0014  	LNK	#20
0x1696	0xF80034  	PUSH	PSVPAG
0x1698	0xF80036  	PUSH	RCOUNT
0x169A	0x781F80  	PUSH	W0
0x169C	0x200020  	MOV	#2, W0
0x169E	0x09000C  	REPEAT	#12
0x16A0	0x781FB0  	PUSH	[W0++]
;DY_GCU.c,143 :: 		onCanInterrupt{
;DY_GCU.c,148 :: 		Can_read(&id, dataBuffer, &dataLen, &flags);
0x16A2	0x781F8A  	PUSH	W10
0x16A4	0x781F8B  	PUSH	W11
0x16A6	0x781F8C  	PUSH	W12
0x16A8	0x781F8D  	PUSH	W13
0x16AA	0x4701F2  	ADD	W14, #18, W3
0x16AC	0x470170  	ADD	W14, #16, W2
0x16AE	0x4700E8  	ADD	W14, #8, W1
0x16B0	0x470064  	ADD	W14, #4, W0
0x16B2	0x780683  	MOV	W3, W13
0x16B4	0x780602  	MOV	W2, W12
0x16B6	0x780581  	MOV	W1, W11
0x16B8	0x780500  	MOV	W0, W10
0x16BA	0x07FFA8  	RCALL	_Can_read
;DY_GCU.c,149 :: 		Can_clearInterrupt();
0x16BC	0x07FFBE  	RCALL	_Can_clearInterrupt
;DY_GCU.c,151 :: 		if (dataLen >= 2) {
0x16BE	0x90080E  	MOV	[W14+16], W0
0x16C0	0xE10062  	CP	W0, #2
0x16C2	0x39000A  	BRA LTU	L_CAN_Interrupt8
L__CAN_Interrupt74:
;DY_GCU.c,152 :: 		firstInt = (unsigned int) ((dataBuffer[0] << 8) | (dataBuffer[1] & 0xFF));
0x16C4	0x4700E8  	ADD	W14, #8, W1
0x16C6	0x784011  	MOV.B	[W1], W0
0x16C8	0xFB8000  	ZE	W0, W0
0x16CA	0xDD0148  	SL	W0, #8, W2
0x16CC	0x408061  	ADD	W1, #1, W0
0x16CE	0xFB8090  	ZE	[W0], W1
0x16D0	0x200FF0  	MOV	#255, W0
0x16D2	0x608080  	AND	W1, W0, W1
0x16D4	0x470060  	ADD	W14, #0, W0
0x16D6	0x710801  	IOR	W2, W1, [W0]
;DY_GCU.c,153 :: 		}
L_CAN_Interrupt8:
;DY_GCU.c,154 :: 		if (dataLen >= 4) {
0x16D8	0x90080E  	MOV	[W14+16], W0
0x16DA	0xE10064  	CP	W0, #4
0x16DC	0x39000B  	BRA LTU	L_CAN_Interrupt9
L__CAN_Interrupt75:
;DY_GCU.c,155 :: 		secondInt = (unsigned int) ((dataBuffer[2] << 8) | (dataBuffer[3] & 0xFF));
0x16DE	0x4700E8  	ADD	W14, #8, W1
0x16E0	0x408062  	ADD	W1, #2, W0
0x16E2	0x784010  	MOV.B	[W0], W0
0x16E4	0xFB8000  	ZE	W0, W0
0x16E6	0xDD0148  	SL	W0, #8, W2
0x16E8	0x408063  	ADD	W1, #3, W0
0x16EA	0xFB8090  	ZE	[W0], W1
0x16EC	0x200FF0  	MOV	#255, W0
0x16EE	0x608080  	AND	W1, W0, W1
0x16F0	0x470062  	ADD	W14, #2, W0
0x16F2	0x710801  	IOR	W2, W1, [W0]
;DY_GCU.c,156 :: 		}
L_CAN_Interrupt9:
;DY_GCU.c,157 :: 		if (dataLen >= 6) {
0x16F4	0x90080E  	MOV	[W14+16], W0
0x16F6	0xE10066  	CP	W0, #6
0x16F8	0x390000  	BRA LTU	L_CAN_Interrupt10
L__CAN_Interrupt76:
;DY_GCU.c,159 :: 		}
L_CAN_Interrupt10:
;DY_GCU.c,160 :: 		if (dataLen >= 8) {
0x16FA	0x90080E  	MOV	[W14+16], W0
0x16FC	0xE10068  	CP	W0, #8
0x16FE	0x390000  	BRA LTU	L_CAN_Interrupt11
L__CAN_Interrupt77:
;DY_GCU.c,162 :: 		}
L_CAN_Interrupt11:
;DY_GCU.c,164 :: 		switch (id) {
0x1700	0x370062  	BRA	L_CAN_Interrupt12
;DY_GCU.c,165 :: 		case EFI_GEAR_RPM_TPS_APPS_ID:
L_CAN_Interrupt14:
;DY_GCU.c,166 :: 		GearShift_setCurrentGear(firstInt);
0x1702	0x90050E  	MOV	[W14+0], W10
0x1704	0x07FE88  	RCALL	_GearShift_setCurrentGear
;DY_GCU.c,168 :: 		aac_updateExternValue(RPM, secondInt);
0x1706	0x90059E  	MOV	[W14+2], W11
0x1708	0xEF2014  	CLR	W10
0x170A	0x07FE7D  	RCALL	_aac_updateExternValue
;DY_GCU.c,170 :: 		break;
0x170C	0x370087  	BRA	L_CAN_Interrupt13
;DY_GCU.c,172 :: 		case SW_FIRE_GCU_ID:
L_CAN_Interrupt15:
;DY_GCU.c,173 :: 		EngineControl_resetStartCheck();           //resetCheckCounter = 0
0x170E	0x07FF5E  	RCALL	_EngineControl_resetStartCheck
;DY_GCU.c,174 :: 		EngineControl_start();                     //debug on LED D2 board
0x1710	0x07FF61  	RCALL	_EngineControl_start
;DY_GCU.c,175 :: 		break;
0x1712	0x370084  	BRA	L_CAN_Interrupt13
;DY_GCU.c,177 :: 		case SW_GEARSHIFT_ID:
L_CAN_Interrupt16:
;DY_GCU.c,179 :: 		if (Clutch_get() != 100
0x1714	0x07FA60  	RCALL	_Clutch_get
;DY_GCU.c,182 :: 		|| firstInt == GEAR_COMMAND_DOWN)
0x1716	0xB3C641  	MOV.B	#100, W1
0x1718	0xE10401  	CP.B	W0, W1
0x171A	0x320011  	BRA Z	L__CAN_Interrupt54
L__CAN_Interrupt78:
;DY_GCU.c,181 :: 		|| firstInt == GEAR_COMMAND_NEUTRAL_UP
0x171C	0x200641  	MOV	#100, W1
0x171E	0x470060  	ADD	W14, #0, W0
0x1720	0xE10810  	CP	W1, [W0]
0x1722	0x320009  	BRA Z	L__CAN_Interrupt52
L__CAN_Interrupt79:
0x1724	0x200321  	MOV	#50, W1
0x1726	0x470060  	ADD	W14, #0, W0
0x1728	0xE10810  	CP	W1, [W0]
0x172A	0x320005  	BRA Z	L__CAN_Interrupt51
L__CAN_Interrupt80:
;DY_GCU.c,182 :: 		|| firstInt == GEAR_COMMAND_DOWN)
0x172C	0x200C81  	MOV	#200, W1
0x172E	0x470060  	ADD	W14, #0, W0
0x1730	0xE10810  	CP	W1, [W0]
0x1732	0x320001  	BRA Z	L__CAN_Interrupt50
L__CAN_Interrupt81:
0x1734	0x370004  	BRA	L_CAN_Interrupt21
;DY_GCU.c,181 :: 		|| firstInt == GEAR_COMMAND_NEUTRAL_UP
L__CAN_Interrupt52:
L__CAN_Interrupt51:
;DY_GCU.c,182 :: 		|| firstInt == GEAR_COMMAND_DOWN)
L__CAN_Interrupt50:
;DY_GCU.c,183 :: 		&& accelerationFb > 0)
0x1736	0x804080  	MOV	_accelerationFb, W0
0x1738	0xE10060  	CP	W0, #0
0x173A	0x360001  	BRA LEU	L__CAN_Interrupt53
L__CAN_Interrupt82:
L__CAN_Interrupt48:
;DY_GCU.c,184 :: 		aac_stop();
0x173C	0x07FC29  	RCALL	_aac_stop
L_CAN_Interrupt21:
;DY_GCU.c,182 :: 		|| firstInt == GEAR_COMMAND_DOWN)
L__CAN_Interrupt54:
;DY_GCU.c,183 :: 		&& accelerationFb > 0)
L__CAN_Interrupt53:
;DY_GCU.c,186 :: 		GearShift_injectCommand(firstInt);
0x173E	0x90050E  	MOV	[W14+0], W10
0x1740	0x07FE44  	RCALL	_GearShift_injectCommand
;DY_GCU.c,187 :: 		break;
0x1742	0x37006C  	BRA	L_CAN_Interrupt13
;DY_GCU.c,189 :: 		case EFI_TRACTION_CONTROL_ID:
L_CAN_Interrupt22:
;DY_GCU.c,191 :: 		aac_updateExternValue(WHEEL_SPEED, firstInt / 10);
0x1744	0x90000E  	MOV	[W14+0], W0
0x1746	0x2000A2  	MOV	#10, W2
0x1748	0x090011  	REPEAT	#17
0x174A	0xD88002  	DIV.U	W0, W2
0x174C	0x780580  	MOV	W0, W11
0x174E	0xB3C01A  	MOV.B	#1, W10
0x1750	0x07FE5A  	RCALL	_aac_updateExternValue
;DY_GCU.c,193 :: 		break;
0x1752	0x370064  	BRA	L_CAN_Interrupt13
;DY_GCU.c,205 :: 		case SW_CLUTCH_TARGET_GCU_ID:
L_CAN_Interrupt23:
;DY_GCU.c,207 :: 		if(dataBuffer[0] > AAC_CLUTCH_NOISE_LEVEL)
0x1754	0x470068  	ADD	W14, #8, W0
0x1756	0x784090  	MOV.B	[W0], W1
0x1758	0xB3C280  	MOV.B	#40, W0
0x175A	0xE10C00  	CP.B	W1, W0
0x175C	0x360012  	BRA LEU	L_CAN_Interrupt24
L__CAN_Interrupt83:
;DY_GCU.c,209 :: 		if (accelerationFb > 0)
0x175E	0x804080  	MOV	_accelerationFb, W0
0x1760	0xE10060  	CP	W0, #0
0x1762	0x360001  	BRA LEU	L_CAN_Interrupt25
L__CAN_Interrupt84:
;DY_GCU.c,211 :: 		aac_stop();
0x1764	0x07FC15  	RCALL	_aac_stop
;DY_GCU.c,212 :: 		}
L_CAN_Interrupt25:
;DY_GCU.c,214 :: 		if ((!gearShift_isShiftingDown && !gearShift_isSettingNeutral) || gearShift_isUnsettingNeutral)
0x1766	0x208900  	MOV	#lo_addr(_gearShift_isShiftingDown), W0
0x1768	0xE00410  	CP0.B	[W0]
0x176A	0x3A0004  	BRA NZ	L__CAN_Interrupt56
L__CAN_Interrupt85:
0x176C	0x208910  	MOV	#lo_addr(_gearShift_isSettingNeutral), W0
0x176E	0xE00410  	CP0.B	[W0]
0x1770	0x3A0001  	BRA NZ	L__CAN_Interrupt55
L__CAN_Interrupt86:
0x1772	0x370004  	BRA	L__CAN_Interrupt46
L__CAN_Interrupt56:
L__CAN_Interrupt55:
0x1774	0x2088A0  	MOV	#lo_addr(_gearShift_isUnsettingNeutral), W0
0x1776	0xE00410  	CP0.B	[W0]
0x1778	0x3A0001  	BRA NZ	L__CAN_Interrupt57
L__CAN_Interrupt87:
0x177A	0x370003  	BRA	L_CAN_Interrupt30
L__CAN_Interrupt46:
L__CAN_Interrupt57:
;DY_GCU.c,217 :: 		Clutch_setBiased(dataBuffer[0]);
0x177C	0x470068  	ADD	W14, #8, W0
0x177E	0x784510  	MOV.B	[W0], W10
0x1780	0x07FF35  	RCALL	_Clutch_setBiased
;DY_GCU.c,219 :: 		}
L_CAN_Interrupt30:
;DY_GCU.c,221 :: 		}
L_CAN_Interrupt24:
;DY_GCU.c,224 :: 		break;
0x1782	0x37004C  	BRA	L_CAN_Interrupt13
;DY_GCU.c,226 :: 		case EFI_HALL_ID:
L_CAN_Interrupt31:
;DY_GCU.c,228 :: 		break;
0x1784	0x37004B  	BRA	L_CAN_Interrupt13
;DY_GCU.c,231 :: 		case SW_ACCELERATION_GCU_ID:
L_CAN_Interrupt32:
;DY_GCU.c,234 :: 		if(aac_currentState == OFF && firstInt == 1)                                 //FOR TESTING
0x1786	0x2086C0  	MOV	#lo_addr(_aac_currentState), W0
0x1788	0x784010  	MOV.B	[W0], W0
0x178A	0xE10460  	CP.B	W0, #0
0x178C	0x3A0007  	BRA NZ	L__CAN_Interrupt59
L__CAN_Interrupt88:
0x178E	0x90000E  	MOV	[W14+0], W0
0x1790	0xE10061  	CP	W0, #1
0x1792	0x3A0004  	BRA NZ	L__CAN_Interrupt58
L__CAN_Interrupt89:
L__CAN_Interrupt45:
;DY_GCU.c,238 :: 		aac_currentState = START;   //comment to disable AAC
0x1794	0x2086C1  	MOV	#lo_addr(_aac_currentState), W1
0x1796	0xB3C010  	MOV.B	#1, W0
0x1798	0x784880  	MOV.B	W0, [W1]
;DY_GCU.c,240 :: 		}
0x179A	0x370013  	BRA	L_CAN_Interrupt36
;DY_GCU.c,234 :: 		if(aac_currentState == OFF && firstInt == 1)                                 //FOR TESTING
L__CAN_Interrupt59:
L__CAN_Interrupt58:
;DY_GCU.c,241 :: 		else if(aac_currentState == READY && firstInt == 2)
0x179C	0x2086C0  	MOV	#lo_addr(_aac_currentState), W0
0x179E	0x784010  	MOV.B	[W0], W0
0x17A0	0xE10462  	CP.B	W0, #2
0x17A2	0x3A0007  	BRA NZ	L__CAN_Interrupt61
L__CAN_Interrupt90:
0x17A4	0x90000E  	MOV	[W14+0], W0
0x17A6	0xE10062  	CP	W0, #2
0x17A8	0x3A0004  	BRA NZ	L__CAN_Interrupt60
L__CAN_Interrupt91:
L__CAN_Interrupt44:
;DY_GCU.c,243 :: 		aac_currentState = START_RELEASE; //comment to disable AAC
0x17AA	0x2086C1  	MOV	#lo_addr(_aac_currentState), W1
0x17AC	0xB3C030  	MOV.B	#3, W0
0x17AE	0x784880  	MOV.B	W0, [W1]
;DY_GCU.c,245 :: 		}
0x17B0	0x370008  	BRA	L_CAN_Interrupt40
;DY_GCU.c,241 :: 		else if(aac_currentState == READY && firstInt == 2)
L__CAN_Interrupt61:
L__CAN_Interrupt60:
;DY_GCU.c,247 :: 		else if (firstInt == 0)
0x17B2	0x90000E  	MOV	[W14+0], W0
0x17B4	0xE10060  	CP	W0, #0
0x17B6	0x3A0005  	BRA NZ	L_CAN_Interrupt41
L__CAN_Interrupt92:
;DY_GCU.c,249 :: 		if (accelerationFb > 0)
0x17B8	0x804080  	MOV	_accelerationFb, W0
0x17BA	0xE10060  	CP	W0, #0
0x17BC	0x360002  	BRA LEU	L_CAN_Interrupt42
L__CAN_Interrupt93:
;DY_GCU.c,251 :: 		aac_stop();
0x17BE	0x07FBE8  	RCALL	_aac_stop
;DY_GCU.c,252 :: 		Clutch_release();
0x17C0	0x07F9A8  	RCALL	_Clutch_release
;DY_GCU.c,253 :: 		}
L_CAN_Interrupt42:
;DY_GCU.c,255 :: 		}
L_CAN_Interrupt41:
L_CAN_Interrupt40:
L_CAN_Interrupt36:
;DY_GCU.c,257 :: 		break;
0x17C2	0x37002C  	BRA	L_CAN_Interrupt13
;DY_GCU.c,258 :: 		default:
L_CAN_Interrupt43:
;DY_GCU.c,259 :: 		break;
0x17C4	0x37002B  	BRA	L_CAN_Interrupt13
;DY_GCU.c,260 :: 		}
L_CAN_Interrupt12:
0x17C6	0x203051  	MOV	#773, W1
0x17C8	0x200002  	MOV	#0, W2
0x17CA	0x470064  	ADD	W14, #4, W0
0x17CC	0xE10830  	CP	W1, [W0++]
0x17CE	0xE19020  	CPB	W2, [W0--]
0x17D0	0x32FF98  	BRA Z	L_CAN_Interrupt14
L__CAN_Interrupt94:
0x17D2	0x202041  	MOV	#516, W1
0x17D4	0x200002  	MOV	#0, W2
0x17D6	0x470064  	ADD	W14, #4, W0
0x17D8	0xE10830  	CP	W1, [W0++]
0x17DA	0xE19020  	CPB	W2, [W0--]
0x17DC	0x32FF98  	BRA Z	L_CAN_Interrupt15
L__CAN_Interrupt95:
0x17DE	0x202001  	MOV	#512, W1
0x17E0	0x200002  	MOV	#0, W2
0x17E2	0x470064  	ADD	W14, #4, W0
0x17E4	0xE10830  	CP	W1, [W0++]
0x17E6	0xE19020  	CPB	W2, [W0--]
0x17E8	0x32FF95  	BRA Z	L_CAN_Interrupt16
L__CAN_Interrupt96:
0x17EA	0x203061  	MOV	#774, W1
0x17EC	0x200002  	MOV	#0, W2
0x17EE	0x470064  	ADD	W14, #4, W0
0x17F0	0xE10830  	CP	W1, [W0++]
0x17F2	0xE19020  	CPB	W2, [W0--]
0x17F4	0x32FFA7  	BRA Z	L_CAN_Interrupt22
L__CAN_Interrupt97:
0x17F6	0x202011  	MOV	#513, W1
0x17F8	0x200002  	MOV	#0, W2
0x17FA	0x470064  	ADD	W14, #4, W0
0x17FC	0xE10830  	CP	W1, [W0++]
0x17FE	0xE19020  	CPB	W2, [W0--]
0x1800	0x32FFA9  	BRA Z	L_CAN_Interrupt23
L__CAN_Interrupt98:
0x1802	0x203041  	MOV	#772, W1
0x1804	0x200002  	MOV	#0, W2
0x1806	0x470064  	ADD	W14, #4, W0
0x1808	0xE10830  	CP	W1, [W0++]
0x180A	0xE19020  	CPB	W2, [W0--]
0x180C	0x32FFBB  	BRA Z	L_CAN_Interrupt31
L__CAN_Interrupt99:
0x180E	0x202021  	MOV	#514, W1
0x1810	0x200002  	MOV	#0, W2
0x1812	0x470064  	ADD	W14, #4, W0
0x1814	0xE10830  	CP	W1, [W0++]
0x1816	0xE19020  	CPB	W2, [W0--]
0x1818	0x32FFB6  	BRA Z	L_CAN_Interrupt32
L__CAN_Interrupt100:
0x181A	0x37FFD4  	BRA	L_CAN_Interrupt43
L_CAN_Interrupt13:
;DY_GCU.c,261 :: 		}
L_end_CAN_Interrupt:
0x181C	0x7806CF  	POP	W13
0x181E	0x78064F  	POP	W12
0x1820	0x7805CF  	POP	W11
0x1822	0x78054F  	POP	W10
0x1824	0x2001A0  	MOV	#26, W0
0x1826	0x09000C  	REPEAT	#12
0x1828	0x78104F  	POP	[W0--]
0x182A	0x78004F  	POP	W0
0x182C	0xF90036  	POP	RCOUNT
0x182E	0xF90034  	POP	PSVPAG
0x1830	0xFA8000  	ULNK
0x1832	0x064000  	RETFIE
; end of _CAN_Interrupt
_Can_read:
;can.c,68 :: 		void Can_read(unsigned long int *id, char dataBuffer[], unsigned int *dataLength, unsigned int *inFlags) {
;can.c,69 :: 		if (Can_B0hasBeenReceived()) {
0x160C	0x07FED6  	RCALL	_Can_B0hasBeenReceived
0x160E	0xE24000  	CP0.B	W0
0x1610	0x320003  	BRA Z	L_Can_read2
L__Can_read19:
;can.c,70 :: 		Can_clearB0Flag();
0x1612	0x07FED1  	RCALL	_Can_clearB0Flag
;can.c,71 :: 		Can1Read(id, dataBuffer, dataLength, inFlags);
0x1614	0x07FE61  	RCALL	_CAN1Read
;can.c,72 :: 		}
0x1616	0x370005  	BRA	L_Can_read3
L_Can_read2:
;can.c,73 :: 		else if (Can_B1hasBeenReceived()) {
0x1618	0x07FEC4  	RCALL	_Can_B1hasBeenReceived
0x161A	0xE24000  	CP0.B	W0
0x161C	0x320002  	BRA Z	L_Can_read4
L__Can_read20:
;can.c,74 :: 		Can_clearB1Flag();
0x161E	0x07FEC9  	RCALL	_Can_clearB1Flag
;can.c,75 :: 		Can1Read(id, dataBuffer, dataLength, inFlags);
0x1620	0x07FE5B  	RCALL	_CAN1Read
;can.c,76 :: 		}
L_Can_read4:
L_Can_read3:
;can.c,77 :: 		}
L_end_Can_read:
0x1622	0x060000  	RETURN
; end of _Can_read
_Can_B0hasBeenReceived:
;can.c,129 :: 		unsigned char Can_B0hasBeenReceived(void) {
;can.c,130 :: 		return CAN_INTERRUPT_ONB0_OCCURRED == 1;
0x13BA	0xEF6000  	CLR.B	W0
0x13BC	0xAF0396  	BTSC	C1INTFbits, #0
0x13BE	0xEC6000  	INC.B	W0
0x13C0	0xE10461  	CP.B	W0, #1
0x13C2	0xEF6000  	CLR.B	W0
0x13C4	0x3A0001  	BRA NZ	L__Can_B0hasBeenReceived34
0x13C6	0xEC6000  	INC.B	W0
L__Can_B0hasBeenReceived34:
;can.c,131 :: 		}
L_end_Can_B0hasBeenReceived:
0x13C8	0x060000  	RETURN
; end of _Can_B0hasBeenReceived
_Can_clearB0Flag:
;can.c,137 :: 		void Can_clearB0Flag(void) {
;can.c,138 :: 		CAN_INTERRUPT_ONB0_OCCURRED = 0;
0x13B6	0xA90396  	BCLR	C1INTFbits, #0
;can.c,139 :: 		}
L_end_Can_clearB0Flag:
0x13B8	0x060000  	RETURN
; end of _Can_clearB0Flag
_CAN1Read:
0x12D8	0xFA0000  	LNK	#0
;__Lib_CAN_12.c,698 :: 		
;__Lib_CAN_12.c,704 :: 		
0x12DA	0xEF2000  	CLR	W0
0x12DC	0x780E80  	MOV	W0, [W13]
;__Lib_CAN_12.c,706 :: 		
0x12DE	0xAEE38E  	BTSS.B	C1RX0CONbits, #7
0x12E0	0x370011  	BRA	L_CAN1Read43
;__Lib_CAN_12.c,708 :: 		
; ptr start address is: 10 (W5)
0x12E2	0x203805  	MOV	#lo_addr(C1RX0SID), W5
;__Lib_CAN_12.c,709 :: 		
; lbIsItBuffer0 start address is: 8 (W4)
0x12E4	0x2FFFF4  	MOV	#65535, W4
;__Lib_CAN_12.c,711 :: 		
0x12E6	0xA90396  	BCLR	C1INTFbits, #0
;__Lib_CAN_12.c,713 :: 		
0x12E8	0xAEE397  	BTSS	C1INTFbits, #15
0x12EA	0x370003  	BRA	L_CAN1Read44
;__Lib_CAN_12.c,714 :: 		
0x12EC	0x78001D  	MOV	[W13], W0
0x12EE	0x700EE8  	IOR	W0, #8, [W13]
;__Lib_CAN_12.c,715 :: 		
0x12F0	0xA9E397  	BCLR	C1INTFbits, #15
;__Lib_CAN_12.c,716 :: 		
L_CAN1Read44:
;__Lib_CAN_12.c,717 :: 		
0x12F2	0xAE438E  	BTSS.B	C1RX0CONbits, #2
0x12F4	0x370006  	BRA	L_CAN1Read45
;__Lib_CAN_12.c,718 :: 		
0x12F6	0xBF838E  	MOV	C1RX0CON, WREG
0x12F8	0x600067  	AND	W0, #7, W0
0x12FA	0x700E9D  	IOR	W0, [W13], [W13]
;__Lib_CAN_12.c,719 :: 		
0x12FC	0x78001D  	MOV	[W13], W0
0x12FE	0x600061  	AND	W0, #1, W0
0x1300	0x780E80  	MOV	W0, [W13]
;__Lib_CAN_12.c,720 :: 		
L_CAN1Read45:
;__Lib_CAN_12.c,721 :: 		
; ptr end address is: 10 (W5)
; lbIsItBuffer0 end address is: 8 (W4)
0x1302	0x370017  	BRA	L_CAN1Read46
L_CAN1Read43:
;__Lib_CAN_12.c,723 :: 		
0x1304	0xAEE37E  	BTSS.B	C1RX1CONbits, #7
0x1306	0x370012  	BRA	L_CAN1Read47
;__Lib_CAN_12.c,725 :: 		
; ptr start address is: 4 (W2)
0x1308	0x203702  	MOV	#lo_addr(C1RX1SID), W2
;__Lib_CAN_12.c,726 :: 		
; lbIsItBuffer0 start address is: 8 (W4)
0x130A	0xEF2008  	CLR	W4
;__Lib_CAN_12.c,728 :: 		
0x130C	0xA92396  	BCLR	C1INTFbits, #1
;__Lib_CAN_12.c,730 :: 		
0x130E	0xAEC397  	BTSS	C1INTFbits, #14
0x1310	0x370003  	BRA	L_CAN1Read48
;__Lib_CAN_12.c,731 :: 		
0x1312	0x78001D  	MOV	[W13], W0
0x1314	0x700EE8  	IOR	W0, #8, [W13]
;__Lib_CAN_12.c,732 :: 		
0x1316	0xA9C397  	BCLR	C1INTFbits, #14
;__Lib_CAN_12.c,733 :: 		
L_CAN1Read48:
;__Lib_CAN_12.c,734 :: 		
0x1318	0xBF837E  	MOV	C1RX1CON, WREG
0x131A	0x600067  	AND	W0, #7, W0
0x131C	0x700E9D  	IOR	W0, [W13], [W13]
;__Lib_CAN_12.c,735 :: 		
0x131E	0x78001D  	MOV	[W13], W0
0x1320	0xE10062  	CP	W0, #2
0x1322	0x310003  	BRA GEU	L_CAN1Read49
L__CAN1Read149:
;__Lib_CAN_12.c,736 :: 		
0x1324	0x78009D  	MOV	[W13], W1
0x1326	0x200800  	MOV	#128, W0
0x1328	0x708E80  	IOR	W1, W0, [W13]
L_CAN1Read49:
;__Lib_CAN_12.c,737 :: 		
0x132A	0x370002  	BRA	L_CAN1Read50
; ptr end address is: 4 (W2)
; lbIsItBuffer0 end address is: 8 (W4)
L_CAN1Read47:
;__Lib_CAN_12.c,739 :: 		
0x132C	0xEF2000  	CLR	W0
0x132E	0x370037  	BRA	L_end_CAN1Read
;__Lib_CAN_12.c,740 :: 		
L_CAN1Read50:
; lbIsItBuffer0 start address is: 8 (W4)
; ptr start address is: 4 (W2)
0x1330	0x780282  	MOV	W2, W5
; lbIsItBuffer0 end address is: 8 (W4)
L_CAN1Read46:
; ptr end address is: 4 (W2)
;__Lib_CAN_12.c,743 :: 		
; lbIsItBuffer0 start address is: 8 (W4)
; ptr start address is: 10 (W5)
0x1332	0xA60015  	BTSS	[W5], #0
0x1334	0x37000A  	BRA	L_CAN1Read51
;__Lib_CAN_12.c,744 :: 		
0x1336	0x78009D  	MOV	[W13], W1
0x1338	0x200200  	MOV	#32, W0
0x133A	0x708E80  	IOR	W1, W0, [W13]
;__Lib_CAN_12.c,745 :: 		
0x133C	0xBE9F8A  	PUSH.D	W10
0x133E	0x200F7B  	MOV	#247, W11
0x1340	0x780505  	MOV	W5, W10
0x1342	0x07FB05  	RCALL	__Lib_CAN_12_RegsToCAN1ID
0x1344	0xBE054F  	POP.D	W10
0x1346	0xBE8D00  	MOV.D	W0, [W10]
;__Lib_CAN_12.c,746 :: 		
0x1348	0x370006  	BRA	L_CAN1Read52
L_CAN1Read51:
;__Lib_CAN_12.c,748 :: 		
0x134A	0xBE9F8A  	PUSH.D	W10
0x134C	0x200FFB  	MOV	#255, W11
0x134E	0x780505  	MOV	W5, W10
0x1350	0x07FAFE  	RCALL	__Lib_CAN_12_RegsToCAN1ID
0x1352	0xBE054F  	POP.D	W10
0x1354	0xBE8D00  	MOV.D	W0, [W10]
L_CAN1Read52:
;__Lib_CAN_12.c,750 :: 		
0x1356	0x428064  	ADD	W5, #4, W0
; ptr end address is: 10 (W5)
; ptr start address is: 6 (W3)
0x1358	0x780180  	MOV	W0, W3
;__Lib_CAN_12.c,752 :: 		
0x135A	0x780010  	MOV	[W0], W0
0x135C	0x60006F  	AND	W0, #15, W0
; ddatalen start address is: 4 (W2)
0x135E	0x780100  	MOV	W0, W2
;__Lib_CAN_12.c,753 :: 		
0x1360	0x780E00  	MOV	W0, [W12]
;__Lib_CAN_12.c,755 :: 		
0x1362	0xA69013  	BTSS	[W3], #9
0x1364	0x370003  	BRA	L_CAN1Read53
;__Lib_CAN_12.c,756 :: 		
0x1366	0x78009D  	MOV	[W13], W1
0x1368	0x200400  	MOV	#64, W0
0x136A	0x708E80  	IOR	W1, W0, [W13]
L_CAN1Read53:
;__Lib_CAN_12.c,758 :: 		
; chptr start address is: 0 (W0)
0x136C	0x418062  	ADD	W3, #2, W0
; ptr end address is: 6 (W3)
;__Lib_CAN_12.c,760 :: 		
; i start address is: 10 (W5)
0x136E	0xEF200A  	CLR	W5
;__Lib_CAN_12.c,761 :: 		
; ddatalen end address is: 4 (W2)
; chptr end address is: 0 (W0)
; lbIsItBuffer0 end address is: 8 (W4)
; i end address is: 10 (W5)
0x1370	0x780182  	MOV	W2, W3
0x1372	0x780100  	MOV	W0, W2
;__Lib_CAN_12.c,762 :: 		
L_CAN1Read54:
; chptr start address is: 4 (W2)
; chptr start address is: 4 (W2)
; chptr end address is: 4 (W2)
; i start address is: 10 (W5)
; ddatalen start address is: 6 (W3)
; lbIsItBuffer0 start address is: 8 (W4)
0x1374	0xFB8005  	ZE	W5, W0
0x1376	0xE10003  	CP	W0, W3
0x1378	0x310007  	BRA GEU	L_CAN1Read55
L__CAN1Read150:
; chptr end address is: 4 (W2)
;__Lib_CAN_12.c,763 :: 		
; chptr start address is: 4 (W2)
0x137A	0xFB8005  	ZE	W5, W0
0x137C	0x458080  	ADD	W11, W0, W1
0x137E	0xFB8005  	ZE	W5, W0
0x1380	0x410000  	ADD	W2, W0, W0
0x1382	0x784890  	MOV.B	[W0], [W1]
;__Lib_CAN_12.c,764 :: 		
0x1384	0xEC600A  	INC.B	W5
;__Lib_CAN_12.c,765 :: 		
; chptr end address is: 4 (W2)
; ddatalen end address is: 6 (W3)
; i end address is: 10 (W5)
0x1386	0x37FFF6  	BRA	L_CAN1Read54
L_CAN1Read55:
;__Lib_CAN_12.c,770 :: 		
0x1388	0xAEE396  	BTSS	C1INTFbits, #7
0x138A	0x370003  	BRA	L_CAN1Read56
;__Lib_CAN_12.c,771 :: 		
0x138C	0x78001D  	MOV	[W13], W0
0x138E	0x700EF0  	IOR	W0, #16, [W13]
;__Lib_CAN_12.c,772 :: 		
0x1390	0xA9E396  	BCLR	C1INTFbits, #7
;__Lib_CAN_12.c,773 :: 		
L_CAN1Read56:
;__Lib_CAN_12.c,775 :: 		
0x1392	0xE20008  	CP0	W4
0x1394	0x320002  	BRA Z	L_CAN1Read57
L__CAN1Read151:
; lbIsItBuffer0 end address is: 8 (W4)
;__Lib_CAN_12.c,776 :: 		
0x1396	0xA9E38E  	BCLR.B	C1RX0CONbits, #7
0x1398	0x370001  	BRA	L_CAN1Read58
L_CAN1Read57:
;__Lib_CAN_12.c,778 :: 		
0x139A	0xA9E37E  	BCLR.B	C1RX1CONbits, #7
L_CAN1Read58:
;__Lib_CAN_12.c,780 :: 		
0x139C	0x2FFFF0  	MOV	#65535, W0
;__Lib_CAN_12.c,781 :: 		
L_end_CAN1Read:
0x139E	0xFA8000  	ULNK
0x13A0	0x060000  	RETURN
; end of _CAN1Read
__Lib_CAN_12_RegsToCAN1ID:
0x094E	0xFA0004  	LNK	#4
;__Lib_CAN_12.c,554 :: 		
;__Lib_CAN_12.c,555 :: 		
0x0950	0x200000  	MOV	#0, W0
0x0952	0x980700  	MOV	W0, [W14+0]
0x0954	0x200000  	MOV	#0, W0
0x0956	0x980710  	MOV	W0, [W14+2]
;__Lib_CAN_12.c,557 :: 		
0x0958	0xAE6016  	BTSS	W11, #3
0x095A	0x370006  	BRA	L___Lib_CAN_12_RegsToCAN1ID30
;__Lib_CAN_12.c,558 :: 		
0x095C	0x78001A  	MOV	[W10], W0
0x095E	0xDE0042  	LSR	W0, #2, W0
0x0960	0xEB0080  	CLR	W1
0x0962	0x980700  	MOV	W0, [W14+0]
0x0964	0x980711  	MOV	W1, [W14+2]
;__Lib_CAN_12.c,559 :: 		
0x0966	0x370017  	BRA	L___Lib_CAN_12_RegsToCAN1ID31
L___Lib_CAN_12_RegsToCAN1ID30:
;__Lib_CAN_12.c,561 :: 		
0x0968	0x4701E0  	ADD	W14, #0, W3
0x096A	0x418162  	ADD	W3, #2, W2
0x096C	0x78009A  	MOV	[W10], W1
0x096E	0x21FFC0  	MOV	#8188, W0
0x0970	0x608900  	AND	W1, W0, [W2]
;__Lib_CAN_12.c,562 :: 		
0x0972	0x450062  	ADD	W10, #2, W0
0x0974	0x780500  	MOV	W0, W10
;__Lib_CAN_12.c,563 :: 		
0x0976	0x4180E2  	ADD	W3, #2, W1
0x0978	0x780010  	MOV	[W0], W0
0x097A	0xDE004A  	LSR	W0, #10, W0
0x097C	0x700891  	IOR	W0, [W1], [W1]
;__Lib_CAN_12.c,564 :: 		
0x097E	0x78009A  	MOV	[W10], W1
0x0980	0x203FF0  	MOV	#1023, W0
0x0982	0x608000  	AND	W1, W0, W0
0x0984	0xDD0046  	SL	W0, #6, W0
0x0986	0x780980  	MOV	W0, [W3]
;__Lib_CAN_12.c,565 :: 		
0x0988	0x450062  	ADD	W10, #2, W0
0x098A	0x780500  	MOV	W0, W10
;__Lib_CAN_12.c,566 :: 		
0x098C	0x780010  	MOV	[W0], W0
0x098E	0xDE00CA  	LSR	W0, #10, W1
0x0990	0x470060  	ADD	W14, #0, W0
0x0992	0x708010  	IOR	W1, [W0], W0
0x0994	0x780980  	MOV	W0, [W3]
;__Lib_CAN_12.c,567 :: 		
L___Lib_CAN_12_RegsToCAN1ID31:
;__Lib_CAN_12.c,568 :: 		
0x0996	0x90000E  	MOV	[W14+0], W0
0x0998	0x90009E  	MOV	[W14+2], W1
;__Lib_CAN_12.c,569 :: 		
L_end_RegsToCAN1ID:
0x099A	0xFA8000  	ULNK
0x099C	0x060000  	RETURN
; end of __Lib_CAN_12_RegsToCAN1ID
_Can_B1hasBeenReceived:
;can.c,133 :: 		unsigned char Can_B1hasBeenReceived(void) {
;can.c,134 :: 		return CAN_INTERRUPT_ONB1_OCCURRED == 1;
0x13A2	0xEF6000  	CLR.B	W0
0x13A4	0xAF2396  	BTSC	C1INTFbits, #1
0x13A6	0xEC6000  	INC.B	W0
0x13A8	0xE10461  	CP.B	W0, #1
0x13AA	0xEF6000  	CLR.B	W0
0x13AC	0x3A0001  	BRA NZ	L__Can_B1hasBeenReceived36
0x13AE	0xEC6000  	INC.B	W0
L__Can_B1hasBeenReceived36:
;can.c,135 :: 		}
L_end_Can_B1hasBeenReceived:
0x13B0	0x060000  	RETURN
; end of _Can_B1hasBeenReceived
_Can_clearB1Flag:
;can.c,141 :: 		void Can_clearB1Flag(void) {
;can.c,142 :: 		CAN_INTERRUPT_ONB1_OCCURRED = 0;
0x13B2	0xA92396  	BCLR	C1INTFbits, #1
;can.c,143 :: 		}
L_end_Can_clearB1Flag:
0x13B4	0x060000  	RETURN
; end of _Can_clearB1Flag
_Can_clearInterrupt:
;can.c,145 :: 		void Can_clearInterrupt(void) {
;can.c,146 :: 		CAN_INTERRUPT_OCCURRED = 0;
0x163A	0xA96087  	BCLR	IFS1bits, #11
;can.c,147 :: 		}
L_end_Can_clearInterrupt:
0x163C	0x060000  	RETURN
; end of _Can_clearInterrupt
_GearShift_setCurrentGear:
;gearshift.c,25 :: 		void GearShift_setCurrentGear(unsigned int gear) {
;gearshift.c,26 :: 		if (gear <= 5) {
0x1416	0xE15065  	CP	W10, #5
0x1418	0x3E0001  	BRA GTU	L_GearShift_setCurrentGear0
L__GearShift_setCurrentGear100:
;gearshift.c,27 :: 		gearShift_currentGear = gear;
0x141A	0x88444A  	MOV	W10, _gearShift_currentGear
;gearshift.c,28 :: 		}
L_GearShift_setCurrentGear0:
;gearshift.c,29 :: 		}
L_end_GearShift_setCurrentGear:
0x141C	0x060000  	RETURN
; end of _GearShift_setCurrentGear
_aac_updateExternValue:
;aac.c,147 :: 		void aac_updateExternValue(const aac_values id, const int value){
;aac.c,148 :: 		if(id < AAC_NUM_VALUES)
0x1406	0xE15463  	CP.B	W10, #3
0x1408	0x310005  	BRA GEU	L_aac_updateExternValue17
L__aac_updateExternValue44:
;aac.c,149 :: 		aac_externValues[id] = value;
0x140A	0xFB800A  	ZE	W10, W0
0x140C	0xDD00C1  	SL	W0, #1, W1
0x140E	0x208180  	MOV	#lo_addr(_aac_externValues), W0
0x1410	0x400001  	ADD	W0, W1, W0
0x1412	0x78080B  	MOV	W11, [W0]
L_aac_updateExternValue17:
;aac.c,150 :: 		}
L_end_aac_updateExternValue:
0x1414	0x060000  	RETURN
; end of _aac_updateExternValue
_EngineControl_start:
;enginecontrol.c,30 :: 		void EngineControl_start(void) {
;enginecontrol.c,31 :: 		ENGINE_STARTER = TRUE;
0x15D4	0xA8A2D6  	BSET	LATD5_bit, BitPos(LATD5_bit+0)
;enginecontrol.c,32 :: 		}
L_end_EngineControl_start:
0x15D6	0x060000  	RETURN
; end of _EngineControl_start
_Clutch_get:
;clutch.c,28 :: 		unsigned char Clutch_get(void) {
;clutch.c,29 :: 		return Clutch_currentValue;
0x0BD6	0x208070  	MOV	#lo_addr(_Clutch_currentValue), W0
0x0BD8	0x784010  	MOV.B	[W0], W0
;clutch.c,30 :: 		}
L_end_Clutch_get:
0x0BDA	0x060000  	RETURN
; end of _Clutch_get
_aac_stop:
;aac.c,142 :: 		void aac_stop(void){
;aac.c,143 :: 		if(aac_currentState != OFF)
0x0F90	0x2086C0  	MOV	#lo_addr(_aac_currentState), W0
0x0F92	0x784010  	MOV.B	[W0], W0
0x0F94	0xE10460  	CP.B	W0, #0
0x0F96	0x320003  	BRA Z	L_aac_stop16
L__aac_stop42:
;aac.c,144 :: 		aac_currentState = STOPPING;
0x0F98	0x2086C1  	MOV	#lo_addr(_aac_currentState), W1
0x0F9A	0xB3C060  	MOV.B	#6, W0
0x0F9C	0x784880  	MOV.B	W0, [W1]
L_aac_stop16:
;aac.c,145 :: 		}
L_end_aac_stop:
0x0F9E	0x060000  	RETURN
; end of _aac_stop
_GearShift_injectCommand:
;gearshift.c,31 :: 		void GearShift_injectCommand(unsigned int command) {
;gearshift.c,32 :: 		if (command == GEAR_COMMAND_NEUTRAL_DOWN || command == GEAR_COMMAND_NEUTRAL_UP) {
0x13CA	0x200640  	MOV	#100, W0
0x13CC	0xE15000  	CP	W10, W0
0x13CE	0x320004  	BRA Z	L__GearShift_injectCommand95
L__GearShift_injectCommand102:
0x13D0	0x200320  	MOV	#50, W0
0x13D2	0xE15000  	CP	W10, W0
0x13D4	0x320001  	BRA Z	L__GearShift_injectCommand94
L__GearShift_injectCommand103:
0x13D6	0x370002  	BRA	L_GearShift_injectCommand3
L__GearShift_injectCommand95:
L__GearShift_injectCommand94:
;gearshift.c,33 :: 		GearShift_setNeutral(command);
0x13D8	0x07FDCE  	RCALL	_GearShift_setNeutral
;gearshift.c,34 :: 		} else if (command == GEAR_COMMAND_DOWN || command == GEAR_COMMAND_UP) {
0x13DA	0x370012  	BRA	L_GearShift_injectCommand4
L_GearShift_injectCommand3:
0x13DC	0x200C80  	MOV	#200, W0
0x13DE	0xE15000  	CP	W10, W0
0x13E0	0x320004  	BRA Z	L__GearShift_injectCommand97
L__GearShift_injectCommand104:
0x13E2	0x201900  	MOV	#400, W0
0x13E4	0xE15000  	CP	W10, W0
0x13E6	0x320001  	BRA Z	L__GearShift_injectCommand96
L__GearShift_injectCommand105:
0x13E8	0x370002  	BRA	L_GearShift_injectCommand7
L__GearShift_injectCommand97:
L__GearShift_injectCommand96:
;gearshift.c,35 :: 		GearShift_shift(command);
0x13EA	0x07FE19  	RCALL	_GearShift_shift
;gearshift.c,36 :: 		} else if (command == RPM_LIMITER_ON) {
0x13EC	0x370009  	BRA	L_GearShift_injectCommand8
L_GearShift_injectCommand7:
0x13EE	0x200960  	MOV	#150, W0
0x13F0	0xE15000  	CP	W10, W0
0x13F2	0x3A0002  	BRA NZ	L_GearShift_injectCommand9
L__GearShift_injectCommand106:
;gearshift.c,37 :: 		Efi_setRPMLimiter();
0x13F4	0x07FE12  	RCALL	_Efi_setRPMLimiter
;gearshift.c,38 :: 		} else if (command == RPM_LIMITER_OFF) {
0x13F6	0x370004  	BRA	L_GearShift_injectCommand10
L_GearShift_injectCommand9:
0x13F8	0x200A00  	MOV	#160, W0
0x13FA	0xE15000  	CP	W10, W0
0x13FC	0x3A0001  	BRA NZ	L_GearShift_injectCommand11
L__GearShift_injectCommand107:
;gearshift.c,39 :: 		Efi_unsetRPMLimiter();
0x13FE	0x07FE5D  	RCALL	_Efi_unsetRPMLimiter
;gearshift.c,40 :: 		}
L_GearShift_injectCommand11:
L_GearShift_injectCommand10:
L_GearShift_injectCommand8:
L_GearShift_injectCommand4:
;gearshift.c,41 :: 		}
L_end_GearShift_injectCommand:
0x1400	0x060000  	RETURN
; end of _GearShift_injectCommand
_GearShift_setNeutral:
;gearshift.c,55 :: 		void GearShift_setNeutral(unsigned int command) {
;gearshift.c,56 :: 		gearShift_isSettingNeutral = TRUE;
0x0F76	0x208911  	MOV	#lo_addr(_gearShift_isSettingNeutral), W1
0x0F78	0xB3C010  	MOV.B	#1, W0
0x0F7A	0x784880  	MOV.B	W0, [W1]
;gearshift.c,58 :: 		if (command == GEAR_COMMAND_NEUTRAL_DOWN) {
0x0F7C	0x200640  	MOV	#100, W0
0x0F7E	0xE15000  	CP	W10, W0
0x0F80	0x3A0002  	BRA NZ	L_GearShift_setNeutral16
L__GearShift_setNeutral113:
;gearshift.c,59 :: 		GearShift_down();
0x0F82	0x07FEE2  	RCALL	_GearShift_down
;gearshift.c,60 :: 		} else if (command == GEAR_COMMAND_NEUTRAL_UP) {
0x0F84	0x370004  	BRA	L_GearShift_setNeutral17
L_GearShift_setNeutral16:
0x0F86	0x200320  	MOV	#50, W0
0x0F88	0xE15000  	CP	W10, W0
0x0F8A	0x3A0001  	BRA NZ	L_GearShift_setNeutral18
L__GearShift_setNeutral114:
;gearshift.c,61 :: 		GearShift_up();
0x0F8C	0x070058  	RCALL	_GearShift_up
;gearshift.c,62 :: 		}
L_GearShift_setNeutral18:
L_GearShift_setNeutral17:
;gearshift.c,63 :: 		}
L_end_GearShift_setNeutral:
0x0F8E	0x060000  	RETURN
; end of _GearShift_setNeutral
_GearShift_down:
;gearshift.c,74 :: 		void GearShift_down(void) {
;gearshift.c,76 :: 		if (!GearShift_isShifting()) {
0x0D48	0x781F8A  	PUSH	W10
0x0D4A	0x070059  	RCALL	_GearShift_isShifting
0x0D4C	0xE24000  	CP0.B	W0
0x0D4E	0x3A0006  	BRA NZ	L_GearShift_down20
L__GearShift_down118:
;gearshift.c,77 :: 		gearShift_isShiftingDown = TRUE;
0x0D50	0x208901  	MOV	#lo_addr(_gearShift_isShiftingDown), W1
0x0D52	0xB3C010  	MOV.B	#1, W0
0x0D54	0x784880  	MOV.B	W0, [W1]
;gearshift.c,78 :: 		GearShift_setNextStep_A(STEP_DOWN_START);
0x0D56	0xB3C04A  	MOV.B	#4, W10
0x0D58	0x07FFB7  	RCALL	_GearShift_setNextStep_A
;gearshift.c,79 :: 		GearShift_nextStep_A();
0x0D5A	0x07005D  	RCALL	_GearShift_nextStep_A
;gearshift.c,80 :: 		}
L_GearShift_down20:
;gearshift.c,81 :: 		}
L_end_GearShift_down:
0x0D5C	0x78054F  	POP	W10
0x0D5E	0x060000  	RETURN
; end of _GearShift_down
_GearShift_isShifting:
;gearshift.c,83 :: 		char GearShift_isShifting(void) {
;gearshift.c,84 :: 		return gearShift_isShiftingDown || gearShift_isShiftingUp;
0x0DFE	0x208900  	MOV	#lo_addr(_gearShift_isShiftingDown), W0
0x0E00	0xE00410  	CP0.B	[W0]
0x0E02	0x3A0005  	BRA NZ	L_GearShift_isShifting22
L__GearShift_isShifting120:
0x0E04	0x2088B0  	MOV	#lo_addr(_gearShift_isShiftingUp), W0
0x0E06	0xE00410  	CP0.B	[W0]
0x0E08	0x3A0002  	BRA NZ	L_GearShift_isShifting22
L__GearShift_isShifting121:
0x0E0A	0xEF2002  	CLR	W1
0x0E0C	0x370002  	BRA	L_GearShift_isShifting21
L_GearShift_isShifting22:
0x0E0E	0xB3C010  	MOV.B	#1, W0
0x0E10	0x784080  	MOV.B	W0, W1
L_GearShift_isShifting21:
0x0E12	0x784001  	MOV.B	W1, W0
;gearshift.c,85 :: 		}
L_end_GearShift_isShifting:
0x0E14	0x060000  	RETURN
; end of _GearShift_isShifting
_GearShift_setNextStep_A:
;gearshift.c,87 :: 		void GearShift_setNextStep_A(unsigned char step) {
;gearshift.c,88 :: 		gearShift_nextStepValue_A = step;
0x0CC8	0x2081E0  	MOV	#lo_addr(_gearShift_nextStepValue_A), W0
0x0CCA	0x78480A  	MOV.B	W10, [W0]
;gearshift.c,89 :: 		}
L_end_GearShift_setNextStep_A:
0x0CCC	0x060000  	RETURN
; end of _GearShift_setNextStep_A
_GearShift_nextStep_A:
;gearshift.c,192 :: 		void GearShift_nextStep_A(void) {
;gearshift.c,193 :: 		switch (gearShift_nextStepValue_A) {
0x0E16	0x781F8A  	PUSH	W10
0x0E18	0x370083  	BRA	L_GearShift_nextStep_A24
;gearshift.c,194 :: 		case STEP_UP_START:
L_GearShift_nextStep_A26:
;gearshift.c,195 :: 		if (gearShift_isSettingNeutral) {
0x0E1A	0x208910  	MOV	#lo_addr(_gearShift_isSettingNeutral), W0
0x0E1C	0xE00410  	CP0.B	[W0]
0x0E1E	0x320003  	BRA Z	L_GearShift_nextStep_A27
L__GearShift_nextStep_A127:
;gearshift.c,196 :: 		Clutch_set(80);
0x0E20	0xB3C50A  	MOV.B	#80, W10
0x0E22	0x07FDC5  	RCALL	_Clutch_set
;gearshift.c,197 :: 		} else {
0x0E24	0x370002  	BRA	L_GearShift_nextStep_A28
L_GearShift_nextStep_A27:
;gearshift.c,198 :: 		Efi_setCut();
0x0E26	0x07FE35  	RCALL	_Efi_setCut
;gearshift.c,199 :: 		Buzzer_Bip();
0x0E28	0x07FDD8  	RCALL	_Buzzer_Bip
;gearshift.c,200 :: 		}
L_GearShift_nextStep_A28:
;gearshift.c,201 :: 		GearShift_setNextStep_A(STEP_UP_PUSH);
0x0E2A	0xB3C01A  	MOV.B	#1, W10
0x0E2C	0x07FF4D  	RCALL	_GearShift_setNextStep_A
;gearshift.c,202 :: 		GearShift_setMsTicks_A(Gearshift_get_time(STEP_UP_START));
0x0E2E	0xEF2014  	CLR	W10
0x0E30	0x07FDD7  	RCALL	_Gearshift_get_time
0x0E32	0x780500  	MOV	W0, W10
0x0E34	0x07FE30  	RCALL	_GearShift_setMsTicks_A
;gearshift.c,203 :: 		break;
0x0E36	0x37009D  	BRA	L_GearShift_nextStep_A25
;gearshift.c,204 :: 		case STEP_UP_PUSH:
L_GearShift_nextStep_A29:
;gearshift.c,205 :: 		if (!gearShift_isSettingNeutral) {
0x0E38	0x208910  	MOV	#lo_addr(_gearShift_isSettingNeutral), W0
0x0E3A	0xE00410  	CP0.B	[W0]
0x0E3C	0x3A0001  	BRA NZ	L_GearShift_nextStep_A30
L__GearShift_nextStep_A128:
;gearshift.c,206 :: 		Efi_unsetCut();
0x0E3E	0x07FDB5  	RCALL	_Efi_unsetCut
;gearshift.c,207 :: 		}
L_GearShift_nextStep_A30:
;gearshift.c,208 :: 		GearShift_upPush();
0x0E40	0x07FDC8  	RCALL	_GearMotor_turnRight
;gearshift.c,209 :: 		GearShift_setNextStep_A(STEP_UP_REBOUND);
0x0E42	0xB3C02A  	MOV.B	#2, W10
0x0E44	0x07FF41  	RCALL	_GearShift_setNextStep_A
;gearshift.c,210 :: 		GearShift_setMsTicks_A(Gearshift_get_time(STEP_UP_PUSH));
0x0E46	0xB3C01A  	MOV.B	#1, W10
0x0E48	0x07FDCB  	RCALL	_Gearshift_get_time
0x0E4A	0x780500  	MOV	W0, W10
0x0E4C	0x07FE24  	RCALL	_GearShift_setMsTicks_A
;gearshift.c,211 :: 		break;
0x0E4E	0x370091  	BRA	L_GearShift_nextStep_A25
;gearshift.c,212 :: 		case STEP_UP_REBOUND:
L_GearShift_nextStep_A31:
;gearshift.c,213 :: 		if (gearShift_isSettingNeutral) {
0x0E50	0x208910  	MOV	#lo_addr(_gearShift_isSettingNeutral), W0
0x0E52	0xE00410  	CP0.B	[W0]
0x0E54	0x320001  	BRA Z	L_GearShift_nextStep_A32
L__GearShift_nextStep_A129:
;gearshift.c,214 :: 		Clutch_release();
0x0E56	0x07FE5D  	RCALL	_Clutch_release
;gearshift.c,215 :: 		}
L_GearShift_nextStep_A32:
;gearshift.c,216 :: 		GearShift_rebound();
0x0E58	0x07FE61  	RCALL	_GearMotor_release
;gearshift.c,217 :: 		GearShift_setNextStep_A(STEP_UP_BRAKE);
0x0E5A	0xB3C03A  	MOV.B	#3, W10
0x0E5C	0x07FF35  	RCALL	_GearShift_setNextStep_A
;gearshift.c,218 :: 		GearShift_setMsTicks_A(Gearshift_get_time(STEP_UP_REBOUND));
0x0E5E	0xB3C02A  	MOV.B	#2, W10
0x0E60	0x07FDBF  	RCALL	_Gearshift_get_time
0x0E62	0x780500  	MOV	W0, W10
0x0E64	0x07FE18  	RCALL	_GearShift_setMsTicks_A
;gearshift.c,219 :: 		break;
0x0E66	0x370085  	BRA	L_GearShift_nextStep_A25
;gearshift.c,220 :: 		case STEP_UP_BRAKE:
L_GearShift_nextStep_A33:
;gearshift.c,221 :: 		GearShift_brake();
0x0E68	0x07FE39  	RCALL	_GearMotor_brake
;gearshift.c,222 :: 		GearShift_setNextStep_A(STEP_UP_END);
0x0E6A	0xB3C08A  	MOV.B	#8, W10
0x0E6C	0x07FF2D  	RCALL	_GearShift_setNextStep_A
;gearshift.c,223 :: 		GearShift_setMsTicks_A(Gearshift_get_time(STEP_UP_BRAKE));
0x0E6E	0xB3C03A  	MOV.B	#3, W10
0x0E70	0x07FDB7  	RCALL	_Gearshift_get_time
0x0E72	0x780500  	MOV	W0, W10
0x0E74	0x07FE10  	RCALL	_GearShift_setMsTicks_A
;gearshift.c,224 :: 		break;
0x0E76	0x37007D  	BRA	L_GearShift_nextStep_A25
;gearshift.c,225 :: 		case STEP_UP_END:
L_GearShift_nextStep_A34:
;gearshift.c,226 :: 		GearShift_free();
0x0E78	0x07FE51  	RCALL	_GearMotor_release
;gearshift.c,227 :: 		gearShift_isShiftingUp = FALSE;
0x0E7A	0x2088B1  	MOV	#lo_addr(_gearShift_isShiftingUp), W1
0x0E7C	0xEF2000  	CLR	W0
0x0E7E	0x784880  	MOV.B	W0, [W1]
;gearshift.c,228 :: 		gearShift_isSettingNeutral = FALSE;
0x0E80	0x208911  	MOV	#lo_addr(_gearShift_isSettingNeutral), W1
0x0E82	0xEF2000  	CLR	W0
0x0E84	0x784880  	MOV.B	W0, [W1]
;gearshift.c,229 :: 		gearShift_isUnsettingNeutral = FALSE;
0x0E86	0x2088A1  	MOV	#lo_addr(_gearShift_isUnsettingNeutral), W1
0x0E88	0xEF2000  	CLR	W0
0x0E8A	0x784880  	MOV.B	W0, [W1]
;gearshift.c,231 :: 		break;
0x0E8C	0x370072  	BRA	L_GearShift_nextStep_A25
;gearshift.c,233 :: 		case STEP_DOWN_START:
L_GearShift_nextStep_A35:
;gearshift.c,234 :: 		if (gearShift_isSettingNeutral  && Clutch_get() <= 80)            //sto facendo 2--->N
0x0E8E	0x208910  	MOV	#lo_addr(_gearShift_isSettingNeutral), W0
0x0E90	0xE00410  	CP0.B	[W0]
0x0E92	0x320007  	BRA Z	L__GearShift_nextStep_A89
L__GearShift_nextStep_A130:
0x0E94	0x07FEA0  	RCALL	_Clutch_get
0x0E96	0xB3C501  	MOV.B	#80, W1
0x0E98	0xE10401  	CP.B	W0, W1
0x0E9A	0x3E0003  	BRA GTU	L__GearShift_nextStep_A88
L__GearShift_nextStep_A131:
L__GearShift_nextStep_A87:
;gearshift.c,236 :: 		Clutch_set(80);
0x0E9C	0xB3C50A  	MOV.B	#80, W10
0x0E9E	0x07FD87  	RCALL	_Clutch_set
;gearshift.c,237 :: 		}
0x0EA0	0x37000B  	BRA	L_GearShift_nextStep_A39
;gearshift.c,234 :: 		if (gearShift_isSettingNeutral  && Clutch_get() <= 80)            //sto facendo 2--->N
L__GearShift_nextStep_A89:
L__GearShift_nextStep_A88:
;gearshift.c,241 :: 		if (!gearShift_isUnsettingNeutral && Clutch_get() <= 60)      //non sto facendo N--->1 quindi sto facendo tutte le scalate normali
0x0EA2	0x2088A0  	MOV	#lo_addr(_gearShift_isUnsettingNeutral), W0
0x0EA4	0xE00410  	CP0.B	[W0]
0x0EA6	0x3A0006  	BRA NZ	L__GearShift_nextStep_A91
L__GearShift_nextStep_A132:
0x0EA8	0x07FE96  	RCALL	_Clutch_get
0x0EAA	0xB3C3C1  	MOV.B	#60, W1
0x0EAC	0xE10401  	CP.B	W0, W1
0x0EAE	0x3E0002  	BRA GTU	L__GearShift_nextStep_A90
L__GearShift_nextStep_A133:
L__GearShift_nextStep_A86:
;gearshift.c,243 :: 		Clutch_set(60);
0x0EB0	0xB3C3CA  	MOV.B	#60, W10
0x0EB2	0x07FD7D  	RCALL	_Clutch_set
;gearshift.c,241 :: 		if (!gearShift_isUnsettingNeutral && Clutch_get() <= 60)      //non sto facendo N--->1 quindi sto facendo tutte le scalate normali
L__GearShift_nextStep_A91:
L__GearShift_nextStep_A90:
;gearshift.c,245 :: 		Efi_setBlip();
0x0EB4	0x07FE11  	RCALL	_Efi_setBlip
;gearshift.c,246 :: 		Buzzer_Bip();
0x0EB6	0x07FD91  	RCALL	_Buzzer_Bip
;gearshift.c,247 :: 		}
L_GearShift_nextStep_A39:
;gearshift.c,248 :: 		GearShift_setNextStep_A(STEP_DOWN_PUSH);
0x0EB8	0xB3C05A  	MOV.B	#5, W10
0x0EBA	0x07FF06  	RCALL	_GearShift_setNextStep_A
;gearshift.c,249 :: 		GearShift_setMsTicks_A(Gearshift_get_time(STEP_DOWN_START));
0x0EBC	0xB3C04A  	MOV.B	#4, W10
0x0EBE	0x07FD90  	RCALL	_Gearshift_get_time
0x0EC0	0x780500  	MOV	W0, W10
0x0EC2	0x07FDE9  	RCALL	_GearShift_setMsTicks_A
;gearshift.c,250 :: 		break;
0x0EC4	0x370056  	BRA	L_GearShift_nextStep_A25
;gearshift.c,251 :: 		case STEP_DOWN_PUSH:
L_GearShift_nextStep_A43:
;gearshift.c,252 :: 		if (!gearShift_isSettingNeutral) {
0x0EC6	0x208910  	MOV	#lo_addr(_gearShift_isSettingNeutral), W0
0x0EC8	0xE00410  	CP0.B	[W0]
0x0ECA	0x3A0001  	BRA NZ	L_GearShift_nextStep_A44
L__GearShift_nextStep_A134:
;gearshift.c,253 :: 		Efi_unsetBlip();
0x0ECC	0x07FD6C  	RCALL	_Efi_unsetBlip
;gearshift.c,254 :: 		}
L_GearShift_nextStep_A44:
;gearshift.c,255 :: 		GearShift_downPush();
0x0ECE	0x07FD67  	RCALL	_GearMotor_turnLeft
;gearshift.c,256 :: 		GearShift_setNextStep_A(STEP_DOWN_REBOUND);
0x0ED0	0xB3C06A  	MOV.B	#6, W10
0x0ED2	0x07FEFA  	RCALL	_GearShift_setNextStep_A
;gearshift.c,257 :: 		GearShift_setMsTicks_A(Gearshift_get_time(STEP_DOWN_PUSH));
0x0ED4	0xB3C05A  	MOV.B	#5, W10
0x0ED6	0x07FD84  	RCALL	_Gearshift_get_time
0x0ED8	0x780500  	MOV	W0, W10
0x0EDA	0x07FDDD  	RCALL	_GearShift_setMsTicks_A
;gearshift.c,258 :: 		break;
0x0EDC	0x37004A  	BRA	L_GearShift_nextStep_A25
;gearshift.c,259 :: 		case STEP_DOWN_REBOUND:
L_GearShift_nextStep_A45:
;gearshift.c,260 :: 		GearShift_rebound();
0x0EDE	0x07FE1E  	RCALL	_GearMotor_release
;gearshift.c,261 :: 		GearShift_setNextStep_A(STEP_DOWN_BRAKE);
0x0EE0	0xB3C07A  	MOV.B	#7, W10
0x0EE2	0x07FEF2  	RCALL	_GearShift_setNextStep_A
;gearshift.c,262 :: 		GearShift_setMsTicks_A(Gearshift_get_time(STEP_DOWN_REBOUND));
0x0EE4	0xB3C06A  	MOV.B	#6, W10
0x0EE6	0x07FD7C  	RCALL	_Gearshift_get_time
0x0EE8	0x780500  	MOV	W0, W10
0x0EEA	0x07FDD5  	RCALL	_GearShift_setMsTicks_A
;gearshift.c,263 :: 		break;
0x0EEC	0x370042  	BRA	L_GearShift_nextStep_A25
;gearshift.c,264 :: 		case STEP_DOWN_BRAKE:
L_GearShift_nextStep_A46:
;gearshift.c,265 :: 		if (Clutch_get() <= 81)
0x0EEE	0x07FE73  	RCALL	_Clutch_get
0x0EF0	0xB3C511  	MOV.B	#81, W1
0x0EF2	0xE10401  	CP.B	W0, W1
0x0EF4	0x3E0001  	BRA GTU	L_GearShift_nextStep_A47
L__GearShift_nextStep_A135:
;gearshift.c,266 :: 		Clutch_release();
0x0EF6	0x07FE0D  	RCALL	_Clutch_release
L_GearShift_nextStep_A47:
;gearshift.c,267 :: 		GearShift_brake();
0x0EF8	0x07FDF1  	RCALL	_GearMotor_brake
;gearshift.c,268 :: 		GearShift_setNextStep_A(STEP_DOWN_END);
0x0EFA	0xB3C09A  	MOV.B	#9, W10
0x0EFC	0x07FEE5  	RCALL	_GearShift_setNextStep_A
;gearshift.c,269 :: 		GearShift_setMsTicks_A(Gearshift_get_time(STEP_DOWN_BRAKE));
0x0EFE	0xB3C07A  	MOV.B	#7, W10
0x0F00	0x07FD6F  	RCALL	_Gearshift_get_time
0x0F02	0x780500  	MOV	W0, W10
0x0F04	0x07FDC8  	RCALL	_GearShift_setMsTicks_A
;gearshift.c,270 :: 		break;
0x0F06	0x370035  	BRA	L_GearShift_nextStep_A25
;gearshift.c,271 :: 		case STEP_DOWN_END:
L_GearShift_nextStep_A48:
;gearshift.c,272 :: 		GearShift_free();
0x0F08	0x07FE09  	RCALL	_GearMotor_release
;gearshift.c,273 :: 		gearShift_isShiftingDown = FALSE;
0x0F0A	0x208901  	MOV	#lo_addr(_gearShift_isShiftingDown), W1
0x0F0C	0xEF2000  	CLR	W0
0x0F0E	0x784880  	MOV.B	W0, [W1]
;gearshift.c,274 :: 		gearShift_isSettingNeutral = FALSE;
0x0F10	0x208911  	MOV	#lo_addr(_gearShift_isSettingNeutral), W1
0x0F12	0xEF2000  	CLR	W0
0x0F14	0x784880  	MOV.B	W0, [W1]
;gearshift.c,275 :: 		gearShift_isUnsettingNeutral = FALSE;
0x0F16	0x2088A1  	MOV	#lo_addr(_gearShift_isUnsettingNeutral), W1
0x0F18	0xEF2000  	CLR	W0
0x0F1A	0x784880  	MOV.B	W0, [W1]
;gearshift.c,277 :: 		break;
0x0F1C	0x37002A  	BRA	L_GearShift_nextStep_A25
;gearshift.c,278 :: 		default:
L_GearShift_nextStep_A49:
;gearshift.c,279 :: 		break;
0x0F1E	0x370029  	BRA	L_GearShift_nextStep_A25
;gearshift.c,280 :: 		}
L_GearShift_nextStep_A24:
0x0F20	0x2081E0  	MOV	#lo_addr(_gearShift_nextStepValue_A), W0
0x0F22	0x784010  	MOV.B	[W0], W0
0x0F24	0xE10460  	CP.B	W0, #0
0x0F26	0x32FF79  	BRA Z	L_GearShift_nextStep_A26
L__GearShift_nextStep_A136:
0x0F28	0x2081E0  	MOV	#lo_addr(_gearShift_nextStepValue_A), W0
0x0F2A	0x784010  	MOV.B	[W0], W0
0x0F2C	0xE10461  	CP.B	W0, #1
0x0F2E	0x32FF84  	BRA Z	L_GearShift_nextStep_A29
L__GearShift_nextStep_A137:
0x0F30	0x2081E0  	MOV	#lo_addr(_gearShift_nextStepValue_A), W0
0x0F32	0x784010  	MOV.B	[W0], W0
0x0F34	0xE10462  	CP.B	W0, #2
0x0F36	0x32FF8C  	BRA Z	L_GearShift_nextStep_A31
L__GearShift_nextStep_A138:
0x0F38	0x2081E0  	MOV	#lo_addr(_gearShift_nextStepValue_A), W0
0x0F3A	0x784010  	MOV.B	[W0], W0
0x0F3C	0xE10463  	CP.B	W0, #3
0x0F3E	0x32FF94  	BRA Z	L_GearShift_nextStep_A33
L__GearShift_nextStep_A139:
0x0F40	0x2081E0  	MOV	#lo_addr(_gearShift_nextStepValue_A), W0
0x0F42	0x784010  	MOV.B	[W0], W0
0x0F44	0xE10468  	CP.B	W0, #8
0x0F46	0x32FF98  	BRA Z	L_GearShift_nextStep_A34
L__GearShift_nextStep_A140:
0x0F48	0x2081E0  	MOV	#lo_addr(_gearShift_nextStepValue_A), W0
0x0F4A	0x784010  	MOV.B	[W0], W0
0x0F4C	0xE10464  	CP.B	W0, #4
0x0F4E	0x32FF9F  	BRA Z	L_GearShift_nextStep_A35
L__GearShift_nextStep_A141:
0x0F50	0x2081E0  	MOV	#lo_addr(_gearShift_nextStepValue_A), W0
0x0F52	0x784010  	MOV.B	[W0], W0
0x0F54	0xE10465  	CP.B	W0, #5
0x0F56	0x32FFB7  	BRA Z	L_GearShift_nextStep_A43
L__GearShift_nextStep_A142:
0x0F58	0x2081E0  	MOV	#lo_addr(_gearShift_nextStepValue_A), W0
0x0F5A	0x784010  	MOV.B	[W0], W0
0x0F5C	0xE10466  	CP.B	W0, #6
0x0F5E	0x32FFBF  	BRA Z	L_GearShift_nextStep_A45
L__GearShift_nextStep_A143:
0x0F60	0x2081E0  	MOV	#lo_addr(_gearShift_nextStepValue_A), W0
0x0F62	0x784010  	MOV.B	[W0], W0
0x0F64	0xE10467  	CP.B	W0, #7
0x0F66	0x32FFC3  	BRA Z	L_GearShift_nextStep_A46
L__GearShift_nextStep_A144:
0x0F68	0x2081E0  	MOV	#lo_addr(_gearShift_nextStepValue_A), W0
0x0F6A	0x784010  	MOV.B	[W0], W0
0x0F6C	0xE10469  	CP.B	W0, #9
0x0F6E	0x32FFCC  	BRA Z	L_GearShift_nextStep_A48
L__GearShift_nextStep_A145:
0x0F70	0x37FFD6  	BRA	L_GearShift_nextStep_A49
L_GearShift_nextStep_A25:
;gearshift.c,281 :: 		}
L_end_GearShift_nextStep_A:
0x0F72	0x78054F  	POP	W10
0x0F74	0x060000  	RETURN
; end of _GearShift_nextStep_A
_Clutch_set:
;clutch.c,17 :: 		void Clutch_set(unsigned char percentage) {
;clutch.c,18 :: 		unsigned char actualPercentage = 0;
0x09AE	0x781F8A  	PUSH	W10
;clutch.c,19 :: 		if (percentage > 100) {
0x09B0	0xB3C640  	MOV.B	#100, W0
0x09B2	0xE15400  	CP.B	W10, W0
0x09B4	0x360002  	BRA LEU	L_Clutch_set0
L__Clutch_set7:
;clutch.c,20 :: 		actualPercentage = 100;
; actualPercentage start address is: 4 (W2)
0x09B6	0xB3C642  	MOV.B	#100, W2
;clutch.c,21 :: 		} else {
; actualPercentage end address is: 4 (W2)
0x09B8	0x370001  	BRA	L_Clutch_set1
L_Clutch_set0:
;clutch.c,22 :: 		actualPercentage = percentage;
; actualPercentage start address is: 4 (W2)
0x09BA	0x78410A  	MOV.B	W10, W2
; actualPercentage end address is: 4 (W2)
;clutch.c,23 :: 		}
L_Clutch_set1:
;clutch.c,24 :: 		ClutchMotor_setPosition(100 - actualPercentage);
; actualPercentage start address is: 4 (W2)
0x09BC	0x200641  	MOV	#100, W1
0x09BE	0xFB8002  	ZE	W2, W0
0x09C0	0x508000  	SUB	W1, W0, W0
0x09C2	0x781F82  	PUSH	W2
0x09C4	0x784500  	MOV.B	W0, W10
0x09C6	0x07FF2F  	RCALL	_ClutchMotor_setPosition
0x09C8	0x78014F  	POP	W2
;clutch.c,25 :: 		Clutch_currentValue = actualPercentage;
0x09CA	0x208070  	MOV	#lo_addr(_Clutch_currentValue), W0
0x09CC	0x784802  	MOV.B	W2, [W0]
; actualPercentage end address is: 4 (W2)
;clutch.c,26 :: 		}
L_end_Clutch_set:
0x09CE	0x78054F  	POP	W10
0x09D0	0x060000  	RETURN
; end of _Clutch_set
_Efi_setCut:
;efi.c,16 :: 		void Efi_setCut(void) {
;efi.c,17 :: 		UPCUT_Pin = SET_CUT;
0x0A92	0xA962D4  	BCLR	RD3_bit, BitPos(RD3_bit+0)
;efi.c,18 :: 		}
L_end_Efi_setCut:
0x0A94	0x060000  	RETURN
; end of _Efi_setCut
_GearShift_setMsTicks_A:
;gearshift.c,291 :: 		void GearShift_setMsTicks_A(unsigned int ticks) {
;gearshift.c,292 :: 		gearShift_ticksCounter1 = (int) ticks + 1;
0x0A96	0x2088C0  	MOV	#lo_addr(_gearShift_ticksCounter1), W0
0x0A98	0x450861  	ADD	W10, #1, [W0]
;gearshift.c,293 :: 		}
L_end_GearShift_setMsTicks_A:
0x0A9A	0x060000  	RETURN
; end of _GearShift_setMsTicks_A
_Gearshift_get_time:
;gearshift.c,347 :: 		int Gearshift_get_time(shiftStep step)
;gearshift.c,349 :: 		if(gearShift_isSettingNeutral == TRUE){
0x09E0	0x208910  	MOV	#lo_addr(_gearShift_isSettingNeutral), W0
0x09E2	0x784010  	MOV.B	[W0], W0
0x09E4	0xE10461  	CP.B	W0, #1
0x09E6	0x3A001D  	BRA NZ	L_Gearshift_get_time59
L__Gearshift_get_time155:
;gearshift.c,350 :: 		switch(step){
0x09E8	0x37000E  	BRA	L_Gearshift_get_time60
;gearshift.c,351 :: 		case STEP_UP_START:
L_Gearshift_get_time62:
;gearshift.c,352 :: 		return gearShift_timings[NT_CLUTCH_DELAY];
0x09EA	0x804240  	MOV	_gearShift_timings+38, W0
0x09EC	0x370051  	BRA	L_end_Gearshift_get_time
;gearshift.c,353 :: 		case STEP_UP_PUSH:
L_Gearshift_get_time63:
;gearshift.c,354 :: 		return gearShift_timings[NT_PUSH_1_N];
0x09EE	0x804110  	MOV	_gearShift_timings, W0
0x09F0	0x37004F  	BRA	L_end_Gearshift_get_time
;gearshift.c,355 :: 		case STEP_UP_REBOUND:
L_Gearshift_get_time64:
;gearshift.c,356 :: 		return gearShift_timings[NT_REBOUND_1_N];
0x09F2	0x804130  	MOV	_gearShift_timings+4, W0
0x09F4	0x37004D  	BRA	L_end_Gearshift_get_time
;gearshift.c,357 :: 		case STEP_UP_BRAKE:
L_Gearshift_get_time65:
;gearshift.c,358 :: 		return gearShift_timings[NT_BRAKE_1_N];
0x09F6	0x804140  	MOV	_gearShift_timings+6, W0
0x09F8	0x37004B  	BRA	L_end_Gearshift_get_time
;gearshift.c,361 :: 		case STEP_DOWN_PUSH:
L_Gearshift_get_time66:
;gearshift.c,362 :: 		return gearShift_timings[NT_PUSH_2_N];
0x09FA	0x804150  	MOV	_gearShift_timings+8, W0
0x09FC	0x370049  	BRA	L_end_Gearshift_get_time
;gearshift.c,363 :: 		case STEP_DOWN_REBOUND:
L_Gearshift_get_time67:
;gearshift.c,364 :: 		return gearShift_timings[NT_REBOUND_2_N];
0x09FE	0x804170  	MOV	_gearShift_timings+12, W0
0x0A00	0x370047  	BRA	L_end_Gearshift_get_time
;gearshift.c,365 :: 		case STEP_DOWN_BRAKE:
L_Gearshift_get_time68:
;gearshift.c,366 :: 		return gearShift_timings[NT_BRAKE_2_N];
0x0A02	0x804180  	MOV	_gearShift_timings+14, W0
0x0A04	0x370045  	BRA	L_end_Gearshift_get_time
;gearshift.c,367 :: 		}
L_Gearshift_get_time60:
0x0A06	0xE15460  	CP.B	W10, #0
0x0A08	0x32FFF0  	BRA Z	L_Gearshift_get_time62
L__Gearshift_get_time156:
0x0A0A	0xE15461  	CP.B	W10, #1
0x0A0C	0x32FFF0  	BRA Z	L_Gearshift_get_time63
L__Gearshift_get_time157:
0x0A0E	0xE15462  	CP.B	W10, #2
0x0A10	0x32FFF0  	BRA Z	L_Gearshift_get_time64
L__Gearshift_get_time158:
0x0A12	0xE15463  	CP.B	W10, #3
0x0A14	0x32FFF0  	BRA Z	L_Gearshift_get_time65
L__Gearshift_get_time159:
0x0A16	0xE15465  	CP.B	W10, #5
0x0A18	0x32FFF0  	BRA Z	L_Gearshift_get_time66
L__Gearshift_get_time160:
0x0A1A	0xE15466  	CP.B	W10, #6
0x0A1C	0x32FFF0  	BRA Z	L_Gearshift_get_time67
L__Gearshift_get_time161:
0x0A1E	0xE15467  	CP.B	W10, #7
0x0A20	0x32FFF0  	BRA Z	L_Gearshift_get_time68
L__Gearshift_get_time162:
;gearshift.c,368 :: 		}
L_Gearshift_get_time59:
;gearshift.c,369 :: 		switch(step){
0x0A22	0x370026  	BRA	L_Gearshift_get_time69
;gearshift.c,370 :: 		case STEP_UP_START:
L_Gearshift_get_time71:
;gearshift.c,371 :: 		return gearShift_timings[DELAY];
0x0A24	0x804210  	MOV	_gearShift_timings+32, W0
0x0A26	0x370034  	BRA	L_end_Gearshift_get_time
;gearshift.c,374 :: 		case STEP_UP_PUSH:
L_Gearshift_get_time72:
;gearshift.c,375 :: 		switch(gearShift_currentGear){
0x0A28	0x37000A  	BRA	L_Gearshift_get_time73
;gearshift.c,376 :: 		case 1:
L_Gearshift_get_time75:
;gearshift.c,377 :: 		return gearShift_timings[UP_PUSH_1_2];
0x0A2A	0x8041D0  	MOV	_gearShift_timings+24, W0
0x0A2C	0x370031  	BRA	L_end_Gearshift_get_time
;gearshift.c,378 :: 		case 2:
L_Gearshift_get_time76:
;gearshift.c,379 :: 		return gearShift_timings[UP_PUSH_2_3];
0x0A2E	0x8041E0  	MOV	_gearShift_timings+26, W0
0x0A30	0x37002F  	BRA	L_end_Gearshift_get_time
;gearshift.c,380 :: 		case 3:
L_Gearshift_get_time77:
;gearshift.c,381 :: 		return gearShift_timings[UP_PUSH_3_4];
0x0A32	0x8041F0  	MOV	_gearShift_timings+28, W0
0x0A34	0x37002D  	BRA	L_end_Gearshift_get_time
;gearshift.c,382 :: 		case 4:
L_Gearshift_get_time78:
;gearshift.c,383 :: 		return gearShift_timings[UP_PUSH_4_5];
0x0A36	0x804200  	MOV	_gearShift_timings+30, W0
0x0A38	0x37002B  	BRA	L_end_Gearshift_get_time
;gearshift.c,384 :: 		default:
L_Gearshift_get_time79:
;gearshift.c,385 :: 		return gearShift_timings[UP_PUSH_2_3];
0x0A3A	0x8041E0  	MOV	_gearShift_timings+26, W0
0x0A3C	0x370029  	BRA	L_end_Gearshift_get_time
;gearshift.c,386 :: 		}
L_Gearshift_get_time73:
0x0A3E	0x804440  	MOV	_gearShift_currentGear, W0
0x0A40	0xE10061  	CP	W0, #1
0x0A42	0x32FFF3  	BRA Z	L_Gearshift_get_time75
L__Gearshift_get_time163:
0x0A44	0x804440  	MOV	_gearShift_currentGear, W0
0x0A46	0xE10062  	CP	W0, #2
0x0A48	0x32FFF2  	BRA Z	L_Gearshift_get_time76
L__Gearshift_get_time164:
0x0A4A	0x804440  	MOV	_gearShift_currentGear, W0
0x0A4C	0xE10063  	CP	W0, #3
0x0A4E	0x32FFF1  	BRA Z	L_Gearshift_get_time77
L__Gearshift_get_time165:
0x0A50	0x804440  	MOV	_gearShift_currentGear, W0
0x0A52	0xE10064  	CP	W0, #4
0x0A54	0x32FFF0  	BRA Z	L_Gearshift_get_time78
L__Gearshift_get_time166:
0x0A56	0x37FFF1  	BRA	L_Gearshift_get_time79
;gearshift.c,387 :: 		case STEP_UP_REBOUND:
L_Gearshift_get_time80:
;gearshift.c,388 :: 		return gearShift_timings[UP_REBOUND];
0x0A58	0x804220  	MOV	_gearShift_timings+34, W0
0x0A5A	0x37001A  	BRA	L_end_Gearshift_get_time
;gearshift.c,389 :: 		case STEP_UP_BRAKE:
L_Gearshift_get_time81:
;gearshift.c,390 :: 		return gearShift_timings[UP_BRAKE];
0x0A5C	0x804230  	MOV	_gearShift_timings+36, W0
0x0A5E	0x370018  	BRA	L_end_Gearshift_get_time
;gearshift.c,391 :: 		case STEP_DOWN_START:
L_Gearshift_get_time82:
;gearshift.c,392 :: 		return gearShift_timings[CLUTCH];
0x0A60	0x8041A0  	MOV	_gearShift_timings+18, W0
0x0A62	0x370016  	BRA	L_end_Gearshift_get_time
;gearshift.c,394 :: 		case STEP_DOWN_PUSH:
L_Gearshift_get_time83:
;gearshift.c,395 :: 		return gearShift_timings[DN_PUSH];
0x0A64	0x804190  	MOV	_gearShift_timings+16, W0
0x0A66	0x370014  	BRA	L_end_Gearshift_get_time
;gearshift.c,396 :: 		case STEP_DOWN_REBOUND:
L_Gearshift_get_time84:
;gearshift.c,397 :: 		return gearShift_timings[DN_REBOUND];
0x0A68	0x8041B0  	MOV	_gearShift_timings+20, W0
0x0A6A	0x370012  	BRA	L_end_Gearshift_get_time
;gearshift.c,398 :: 		case STEP_DOWN_BRAKE:
L_Gearshift_get_time85:
;gearshift.c,399 :: 		return gearShift_timings[DN_BRAKE];
0x0A6C	0x8041C0  	MOV	_gearShift_timings+22, W0
0x0A6E	0x370010  	BRA	L_end_Gearshift_get_time
;gearshift.c,400 :: 		}
L_Gearshift_get_time69:
0x0A70	0xE15460  	CP.B	W10, #0
0x0A72	0x32FFD8  	BRA Z	L_Gearshift_get_time71
L__Gearshift_get_time167:
0x0A74	0xE15461  	CP.B	W10, #1
0x0A76	0x32FFD8  	BRA Z	L_Gearshift_get_time72
L__Gearshift_get_time168:
0x0A78	0xE15462  	CP.B	W10, #2
0x0A7A	0x32FFEE  	BRA Z	L_Gearshift_get_time80
L__Gearshift_get_time169:
0x0A7C	0xE15463  	CP.B	W10, #3
0x0A7E	0x32FFEE  	BRA Z	L_Gearshift_get_time81
L__Gearshift_get_time170:
0x0A80	0xE15464  	CP.B	W10, #4
0x0A82	0x32FFEE  	BRA Z	L_Gearshift_get_time82
L__Gearshift_get_time171:
0x0A84	0xE15465  	CP.B	W10, #5
0x0A86	0x32FFEE  	BRA Z	L_Gearshift_get_time83
L__Gearshift_get_time172:
0x0A88	0xE15466  	CP.B	W10, #6
0x0A8A	0x32FFEE  	BRA Z	L_Gearshift_get_time84
L__Gearshift_get_time173:
0x0A8C	0xE15467  	CP.B	W10, #7
0x0A8E	0x32FFEE  	BRA Z	L_Gearshift_get_time85
L__Gearshift_get_time174:
;gearshift.c,401 :: 		}
L_end_Gearshift_get_time:
0x0A90	0x060000  	RETURN
; end of _Gearshift_get_time
_GearMotor_turnRight:
;gearmotor.c,20 :: 		void GearMotor_turnRight(void) {
;gearmotor.c,21 :: 		GEARMOTOR_IN1_Pin = 1;
0x09D2	0xA802CA  	BSET	LATB0_bit, BitPos(LATB0_bit+0)
;gearmotor.c,22 :: 		GEARMOTOR_IN2_Pin = 0;
0x09D4	0xA922D0  	BCLR	LATC1_bit, BitPos(LATC1_bit+0)
;gearmotor.c,23 :: 		GEARMOTOR_INH_Pin = 1;
0x09D6	0xA822CA  	BSET	LATB1_bit, BitPos(LATB1_bit+0)
;gearmotor.c,24 :: 		}
L_end_GearMotor_turnRight:
0x09D8	0x060000  	RETURN
; end of _GearMotor_turnRight
_Clutch_release:
;clutch.c,13 :: 		void Clutch_release(void) {
;clutch.c,14 :: 		Clutch_set(0);
0x0B12	0x781F8A  	PUSH	W10
0x0B14	0xEF2014  	CLR	W10
0x0B16	0x07FF4B  	RCALL	_Clutch_set
;clutch.c,15 :: 		}
L_end_Clutch_release:
0x0B18	0x78054F  	POP	W10
0x0B1A	0x060000  	RETURN
; end of _Clutch_release
_GearMotor_brake:
;gearmotor.c,26 :: 		void GearMotor_brake(void) {
;gearmotor.c,27 :: 		GEARMOTOR_IN1_Pin = 0;
0x0ADC	0xA902CA  	BCLR	LATB0_bit, BitPos(LATB0_bit+0)
;gearmotor.c,28 :: 		GEARMOTOR_IN2_Pin = 0;
0x0ADE	0xA922D0  	BCLR	LATC1_bit, BitPos(LATC1_bit+0)
;gearmotor.c,29 :: 		GEARMOTOR_INH_Pin = 1;
0x0AE0	0xA822CA  	BSET	LATB1_bit, BitPos(LATB1_bit+0)
;gearmotor.c,30 :: 		}
L_end_GearMotor_brake:
0x0AE2	0x060000  	RETURN
; end of _GearMotor_brake
_Efi_setBlip:
;efi.c,24 :: 		void Efi_setBlip(void) {
;efi.c,25 :: 		DOWNCUT_Pin = SET_CUT;
0x0AD8	0xA942D4  	BCLR	RD2_bit, BitPos(RD2_bit+0)
;efi.c,26 :: 		}
L_end_Efi_setBlip:
0x0ADA	0x060000  	RETURN
; end of _Efi_setBlip
_GearMotor_turnLeft:
;gearmotor.c,14 :: 		void GearMotor_turnLeft(void) {
;gearmotor.c,15 :: 		GEARMOTOR_IN1_Pin = 0;
0x099E	0xA902CA  	BCLR	LATB0_bit, BitPos(LATB0_bit+0)
;gearmotor.c,16 :: 		GEARMOTOR_IN2_Pin = 1;
0x09A0	0xA822D0  	BSET	LATC1_bit, BitPos(LATC1_bit+0)
;gearmotor.c,17 :: 		GEARMOTOR_INH_Pin = 1;
0x09A2	0xA822CA  	BSET	LATB1_bit, BitPos(LATB1_bit+0)
;gearmotor.c,18 :: 		}
L_end_GearMotor_turnLeft:
0x09A4	0x060000  	RETURN
; end of _GearMotor_turnLeft
_GearShift_up:
;gearshift.c,65 :: 		void GearShift_up(void) {
;gearshift.c,67 :: 		if (!GearShift_isShifting()) {
0x103E	0x781F8A  	PUSH	W10
0x1040	0x07FEDE  	RCALL	_GearShift_isShifting
0x1042	0xE24000  	CP0.B	W0
0x1044	0x3A0006  	BRA NZ	L_GearShift_up19
L__GearShift_up116:
;gearshift.c,68 :: 		gearShift_isShiftingUp = TRUE;
0x1046	0x2088B1  	MOV	#lo_addr(_gearShift_isShiftingUp), W1
0x1048	0xB3C010  	MOV.B	#1, W0
0x104A	0x784880  	MOV.B	W0, [W1]
;gearshift.c,69 :: 		GearShift_setNextStep_A(STEP_UP_START);
0x104C	0xEF2014  	CLR	W10
0x104E	0x07FE3C  	RCALL	_GearShift_setNextStep_A
;gearshift.c,70 :: 		GearShift_nextStep_A();
0x1050	0x07FEE2  	RCALL	_GearShift_nextStep_A
;gearshift.c,71 :: 		}
L_GearShift_up19:
;gearshift.c,72 :: 		}
L_end_GearShift_up:
0x1052	0x78054F  	POP	W10
0x1054	0x060000  	RETURN
; end of _GearShift_up
_GearShift_shift:
;gearshift.c,43 :: 		void GearShift_shift(unsigned int command) {
;gearshift.c,45 :: 		if (gearShift_currentGear == GEARSHIFT_NEUTRAL) {
0x101E	0x804440  	MOV	_gearShift_currentGear, W0
0x1020	0xE10060  	CP	W0, #0
0x1022	0x3A0003  	BRA NZ	L_GearShift_shift12
L__GearShift_shift109:
;gearshift.c,46 :: 		gearShift_isUnsettingNeutral = TRUE;
0x1024	0x2088A1  	MOV	#lo_addr(_gearShift_isUnsettingNeutral), W1
0x1026	0xB3C010  	MOV.B	#1, W0
0x1028	0x784880  	MOV.B	W0, [W1]
;gearshift.c,47 :: 		}
L_GearShift_shift12:
;gearshift.c,48 :: 		if (command == GEAR_COMMAND_UP) {
0x102A	0x201900  	MOV	#400, W0
0x102C	0xE15000  	CP	W10, W0
0x102E	0x3A0002  	BRA NZ	L_GearShift_shift13
L__GearShift_shift110:
;gearshift.c,49 :: 		GearShift_up();
0x1030	0x070006  	RCALL	_GearShift_up
;gearshift.c,50 :: 		} else if (command == GEAR_COMMAND_DOWN) {
0x1032	0x370004  	BRA	L_GearShift_shift14
L_GearShift_shift13:
0x1034	0x200C80  	MOV	#200, W0
0x1036	0xE15000  	CP	W10, W0
0x1038	0x3A0001  	BRA NZ	L_GearShift_shift15
L__GearShift_shift111:
;gearshift.c,51 :: 		GearShift_down();
0x103A	0x07FE86  	RCALL	_GearShift_down
;gearshift.c,52 :: 		}
L_GearShift_shift15:
L_GearShift_shift14:
;gearshift.c,53 :: 		}
L_end_GearShift_shift:
0x103C	0x060000  	RETURN
; end of _GearShift_shift
_Efi_setRPMLimiter:
;efi.c,32 :: 		void Efi_setRPMLimiter(void){
;efi.c,33 :: 		RPM_LIMITER_Pin = SET_RPM_LIMITER;
0x101A	0xA982D4  	BCLR	RD4_bit, BitPos(RD4_bit+0)
;efi.c,34 :: 		}
L_end_Efi_setRPMLimiter:
0x101C	0x060000  	RETURN
; end of _Efi_setRPMLimiter
_Clutch_setBiased:
;clutch.c,32 :: 		void Clutch_setBiased(unsigned char value){
;clutch.c,34 :: 		if(value >= CLUTCH_MAX_BIAS)
0x15EC	0x781F8A  	PUSH	W10
0x15EE	0xB3C5F0  	MOV.B	#95, W0
0x15F0	0xE15400  	CP.B	W10, W0
0x15F2	0x390002  	BRA LTU	L_Clutch_setBiased2
L__Clutch_setBiased10:
;clutch.c,35 :: 		Clutch_set(value);
0x15F4	0x07F9DC  	RCALL	_Clutch_set
0x15F6	0x370008  	BRA	L_Clutch_setBiased3
L_Clutch_setBiased2:
;clutch.c,37 :: 		actual_value = (CLUTCH_MAX_MEANINGFUL * value) / 100;
0x15F8	0x200461  	MOV	#70, W1
0x15FA	0xFB800A  	ZE	W10, W0
0x15FC	0xB98A00  	MUL.SS	W1, W0, W4
0x15FE	0x200642  	MOV	#100, W2
0x1600	0x090011  	REPEAT	#17
0x1602	0xD80202  	DIV.S	W4, W2
;clutch.c,38 :: 		Clutch_set(actual_value);
0x1604	0x784500  	MOV.B	W0, W10
0x1606	0x07F9D3  	RCALL	_Clutch_set
;clutch.c,39 :: 		}
L_Clutch_setBiased3:
;clutch.c,40 :: 		}
L_end_Clutch_setBiased:
0x1608	0x78054F  	POP	W10
0x160A	0x060000  	RETURN
; end of _Clutch_setBiased
_timer4_interrupt:
0x18DA	0xF80034  	PUSH	PSVPAG
0x18DC	0xF80036  	PUSH	RCOUNT
0x18DE	0x781F80  	PUSH	W0
0x18E0	0x200020  	MOV	#2, W0
0x18E2	0x09000C  	REPEAT	#12
0x18E4	0x781FB0  	PUSH	[W0++]
;buzzer.c,9 :: 		onTimer4Interrupt{
;buzzer.c,10 :: 		clearTimer4();
0x18E6	0xA9A086  	BCLR	IFS1bits, #5
;buzzer.c,11 :: 		Buzzer_tick();
0x18E8	0x07FE77  	RCALL	_Buzzer_tick
;buzzer.c,12 :: 		}
L_end_timer4_interrupt:
0x18EA	0x2001A0  	MOV	#26, W0
0x18EC	0x09000C  	REPEAT	#12
0x18EE	0x78104F  	POP	[W0--]
0x18F0	0x78004F  	POP	W0
0x18F2	0xF90036  	POP	RCOUNT
0x18F4	0xF90034  	POP	PSVPAG
0x18F6	0x064000  	RETFIE
; end of _timer4_interrupt
_Buzzer_tick:
;buzzer.c,22 :: 		void Buzzer_tick(void) {
;buzzer.c,23 :: 		if (buzzer_ticks > 0) {
0x15D8	0x804050  	MOV	_buzzer_ticks, W0
0x15DA	0xE10060  	CP	W0, #0
0x15DC	0x360005  	BRA LEU	L_Buzzer_tick0
L__Buzzer_tick5:
;buzzer.c,24 :: 		buzzer_ticks -= 1;
0x15DE	0x200011  	MOV	#1, W1
0x15E0	0x2080A0  	MOV	#lo_addr(_buzzer_ticks), W0
0x15E2	0x108810  	SUBR	W1, [W0], [W0]
;buzzer.c,25 :: 		BUZZER_Pin = !BUZZER_Pin;
0x15E4	0xAAA2E7  	BTG	RG13_bit, BitPos(RG13_bit+0)
;buzzer.c,26 :: 		}
0x15E6	0x370001  	BRA	L_Buzzer_tick1
L_Buzzer_tick0:
;buzzer.c,28 :: 		BUZZER_Pin = 0;
0x15E8	0xA9A2E7  	BCLR	RG13_bit, BitPos(RG13_bit+0)
L_Buzzer_tick1:
;buzzer.c,29 :: 		}
L_end_Buzzer_tick:
0x15EA	0x060000  	RETURN
; end of _Buzzer_tick
_timer2_interrupt:
0x18BE	0xF80034  	PUSH	PSVPAG
0x18C0	0xF80036  	PUSH	RCOUNT
0x18C2	0x781F80  	PUSH	W0
0x18C4	0x200020  	MOV	#2, W0
0x18C6	0x09000C  	REPEAT	#12
0x18C8	0x781FB0  	PUSH	[W0++]
;clutchmotor.c,12 :: 		onTimer2Interrupt{
;clutchmotor.c,13 :: 		clearTimer2();
0x18CA	0xA9C084  	BCLR	IFS0bits, #6
;clutchmotor.c,14 :: 		}
L_end_timer2_interrupt:
0x18CC	0x2001A0  	MOV	#26, W0
0x18CE	0x09000C  	REPEAT	#12
0x18D0	0x78104F  	POP	[W0--]
0x18D2	0x78004F  	POP	W0
0x18D4	0xF90036  	POP	RCOUNT
0x18D6	0xF90034  	POP	PSVPAG
0x18D8	0x064000  	RETFIE
; end of _timer2_interrupt
_timer1_interrupt:
0x1834	0xF80034  	PUSH	PSVPAG
0x1836	0xF80036  	PUSH	RCOUNT
0x1838	0x781F80  	PUSH	W0
0x183A	0x200020  	MOV	#2, W0
0x183C	0x09000C  	REPEAT	#12
0x183E	0x781FB0  	PUSH	[W0++]
;DY_GCU.c,93 :: 		onTimer1Interrupt{
;DY_GCU.c,94 :: 		clearTimer1();
0x1840	0x781F8A  	PUSH	W10
0x1842	0xA96084  	BCLR	IFS0bits, #3
;DY_GCU.c,95 :: 		GearShift_msTick();
0x1844	0x07FEFC  	RCALL	_GearShift_msTick
;DY_GCU.c,96 :: 		timer1_counter0 += 1;
0x1846	0x200011  	MOV	#1, W1
0x1848	0x208040  	MOV	#lo_addr(_timer1_counter0), W0
0x184A	0x408810  	ADD	W1, [W0], [W0]
;DY_GCU.c,97 :: 		timer1_counter1 += 1;
0x184C	0x200011  	MOV	#1, W1
0x184E	0x208020  	MOV	#lo_addr(_timer1_counter1), W0
0x1850	0x408810  	ADD	W1, [W0], [W0]
;DY_GCU.c,98 :: 		timer1_counter2 += 1;
0x1852	0x200011  	MOV	#1, W1
0x1854	0x208120  	MOV	#lo_addr(_timer1_counter2), W0
0x1856	0x408810  	ADD	W1, [W0], [W0]
;DY_GCU.c,99 :: 		timer1_counter3 += 1;
0x1858	0x200011  	MOV	#1, W1
0x185A	0x2080E0  	MOV	#lo_addr(_timer1_counter3), W0
0x185C	0x408810  	ADD	W1, [W0], [W0]
;DY_GCU.c,100 :: 		timer1_counter4 += 1;
0x185E	0x200011  	MOV	#1, W1
0x1860	0x208160  	MOV	#lo_addr(_timer1_counter4), W0
0x1862	0x408810  	ADD	W1, [W0], [W0]
;DY_GCU.c,105 :: 		if (timer1_counter0 > 25) {
0x1864	0x804020  	MOV	_timer1_counter0, W0
0x1866	0xE10079  	CP	W0, #25
0x1868	0x340006  	BRA LE	L_timer1_interrupt2
L__timer1_interrupt67:
;DY_GCU.c,106 :: 		if (!EngineControl_isStarting()) {
0x186A	0x07FEDC  	RCALL	_EngineControl_isStarting
0x186C	0xE24000  	CP0.B	W0
0x186E	0x3A0001  	BRA NZ	L_timer1_interrupt3
L__timer1_interrupt68:
;DY_GCU.c,107 :: 		EngineControl_stop();
0x1870	0x07FDC8  	RCALL	_EngineControl_stop
;DY_GCU.c,109 :: 		}
L_timer1_interrupt3:
;DY_GCU.c,110 :: 		timer1_counter0 = 0;
0x1872	0xEF2000  	CLR	W0
0x1874	0x884020  	MOV	W0, _timer1_counter0
;DY_GCU.c,111 :: 		}
L_timer1_interrupt2:
;DY_GCU.c,112 :: 		if (timer1_counter1 >= 20) {
0x1876	0x804010  	MOV	_timer1_counter1, W0
0x1878	0xE10074  	CP	W0, #20
0x187A	0x350003  	BRA LT	L_timer1_interrupt4
L__timer1_interrupt69:
;DY_GCU.c,113 :: 		GCU_isAlive();
0x187C	0x07FDD0  	RCALL	_GCU_isAlive
;DY_GCU.c,114 :: 		timer1_counter1 = 0;
0x187E	0xEF2000  	CLR	W0
0x1880	0x884010  	MOV	W0, _timer1_counter1
;DY_GCU.c,115 :: 		}
L_timer1_interrupt4:
;DY_GCU.c,118 :: 		if (timer1_counter2 >= 1000) {
0x1882	0x804091  	MOV	_timer1_counter2, W1
0x1884	0x203E80  	MOV	#1000, W0
0x1886	0xE10800  	CP	W1, W0
0x1888	0x350004  	BRA LT	L_timer1_interrupt5
L__timer1_interrupt70:
;DY_GCU.c,119 :: 		dSignalLed_switch(DSIGNAL_LED_RG14);
0x188A	0xEF2014  	CLR	W10
0x188C	0x07FE99  	RCALL	_dSignalLed_switch
;DY_GCU.c,122 :: 		timer1_counter2 = 0;
0x188E	0xEF2000  	CLR	W0
0x1890	0x884090  	MOV	W0, _timer1_counter2
;DY_GCU.c,123 :: 		}
L_timer1_interrupt5:
;DY_GCU.c,124 :: 		if (timer1_counter3 >= 10) {
0x1892	0x804070  	MOV	_timer1_counter3, W0
0x1894	0xE1006A  	CP	W0, #10
0x1896	0x350002  	BRA LT	L_timer1_interrupt6
L__timer1_interrupt71:
;DY_GCU.c,129 :: 		timer1_counter3 = 0;
0x1898	0xEF2000  	CLR	W0
0x189A	0x884070  	MOV	W0, _timer1_counter3
;DY_GCU.c,130 :: 		}
L_timer1_interrupt6:
;DY_GCU.c,133 :: 		timer1_aac_counter += 1;
0x189C	0x200011  	MOV	#1, W1
0x189E	0x208140  	MOV	#lo_addr(_timer1_aac_counter), W0
0x18A0	0x408810  	ADD	W1, [W0], [W0]
;DY_GCU.c,134 :: 		if(timer1_aac_counter == AAC_WORK_RATE_ms)
0x18A2	0x8040A0  	MOV	_timer1_aac_counter, W0
0x18A4	0xE10079  	CP	W0, #25
0x18A6	0x3A0003  	BRA NZ	L_timer1_interrupt7
L__timer1_interrupt72:
;DY_GCU.c,136 :: 		aac_execute();
0x18A8	0x07FDCD  	RCALL	_aac_execute
;DY_GCU.c,137 :: 		timer1_aac_counter = 0;
0x18AA	0xEF2000  	CLR	W0
0x18AC	0x8840A0  	MOV	W0, _timer1_aac_counter
;DY_GCU.c,138 :: 		}
L_timer1_interrupt7:
;DY_GCU.c,141 :: 		}
L_end_timer1_interrupt:
0x18AE	0x78054F  	POP	W10
0x18B0	0x2001A0  	MOV	#26, W0
0x18B2	0x09000C  	REPEAT	#12
0x18B4	0x78104F  	POP	[W0--]
0x18B6	0x78004F  	POP	W0
0x18B8	0xF90036  	POP	RCOUNT
0x18BA	0xF90034  	POP	PSVPAG
0x18BC	0x064000  	RETFIE
; end of _timer1_interrupt
_GearShift_msTick:
;gearshift.c,299 :: 		void GearShift_msTick(void) {
;gearshift.c,300 :: 		gearShift_ticksCounter1 -= 1;
0x163E	0x200011  	MOV	#1, W1
0x1640	0x2088C0  	MOV	#lo_addr(_gearShift_ticksCounter1), W0
0x1642	0x108810  	SUBR	W1, [W0], [W0]
;gearshift.c,301 :: 		if (gearShift_ticksCounter1 == 0) {
0x1644	0x804460  	MOV	_gearShift_ticksCounter1, W0
0x1646	0xE10060  	CP	W0, #0
0x1648	0x3A0002  	BRA NZ	L_GearShift_msTick53
L__GearShift_msTick150:
;gearshift.c,302 :: 		GearShift_nextStep_A();
0x164A	0x07FBE5  	RCALL	_GearShift_nextStep_A
;gearshift.c,303 :: 		} else if (gearShift_ticksCounter1 < 0) {
0x164C	0x370005  	BRA	L_GearShift_msTick54
L_GearShift_msTick53:
0x164E	0x804460  	MOV	_gearShift_ticksCounter1, W0
0x1650	0xE10060  	CP	W0, #0
0x1652	0x3D0002  	BRA GE	L_GearShift_msTick55
L__GearShift_msTick151:
;gearshift.c,304 :: 		gearShift_ticksCounter1 = 0;
0x1654	0xEF2000  	CLR	W0
0x1656	0x884460  	MOV	W0, _gearShift_ticksCounter1
;gearshift.c,305 :: 		}
L_GearShift_msTick55:
L_GearShift_msTick54:
;gearshift.c,307 :: 		gearShift_ticksCounter2 -= 1;
0x1658	0x200011  	MOV	#1, W1
0x165A	0x2088E0  	MOV	#lo_addr(_gearShift_ticksCounter2), W0
0x165C	0x108810  	SUBR	W1, [W0], [W0]
;gearshift.c,308 :: 		if (gearShift_ticksCounter2 == 0) {
0x165E	0x804470  	MOV	_gearShift_ticksCounter2, W0
0x1660	0xE10060  	CP	W0, #0
0x1662	0x3A0002  	BRA NZ	L_GearShift_msTick56
L__GearShift_msTick152:
;gearshift.c,309 :: 		GearShift_nextStep_B();
0x1664	0x07FC9D  	RCALL	_GearShift_nextStep_B
;gearshift.c,310 :: 		} else if (gearShift_ticksCounter2 < 0) {
0x1666	0x370005  	BRA	L_GearShift_msTick57
L_GearShift_msTick56:
0x1668	0x804470  	MOV	_gearShift_ticksCounter2, W0
0x166A	0xE10060  	CP	W0, #0
0x166C	0x3D0002  	BRA GE	L_GearShift_msTick58
L__GearShift_msTick153:
;gearshift.c,311 :: 		gearShift_ticksCounter2 = 0;
0x166E	0xEF2000  	CLR	W0
0x1670	0x884470  	MOV	W0, _gearShift_ticksCounter2
;gearshift.c,312 :: 		}
L_GearShift_msTick58:
L_GearShift_msTick57:
;gearshift.c,313 :: 		}
L_end_GearShift_msTick:
0x1672	0x060000  	RETURN
; end of _GearShift_msTick
_GearShift_nextStep_B:
;gearshift.c,284 :: 		void GearShift_nextStep_B(void) {
;gearshift.c,285 :: 		switch (gearShift_nextStepValue_B) {
0x0FA0	0x370001  	BRA	L_GearShift_nextStep_B50
;gearshift.c,286 :: 		default:
L_GearShift_nextStep_B52:
;gearshift.c,287 :: 		break;
0x0FA2	0x370001  	BRA	L_GearShift_nextStep_B51
;gearshift.c,288 :: 		}
L_GearShift_nextStep_B50:
0x0FA4	0x37FFFE  	BRA	L_GearShift_nextStep_B52
L_GearShift_nextStep_B51:
;gearshift.c,289 :: 		}
L_end_GearShift_nextStep_B:
0x0FA6	0x060000  	RETURN
; end of _GearShift_nextStep_B
_EngineControl_isStarting:
;enginecontrol.c,42 :: 		char EngineControl_isStarting(void) {
;enginecontrol.c,43 :: 		if (engineControl_startCheckCounter < ENGINE_CONTROL_START_CHECK_THRESHOLD) {
0x1624	0x2086D0  	MOV	#lo_addr(_engineControl_startCheckCounter), W0
0x1626	0x784010  	MOV.B	[W0], W0
0x1628	0xE10464  	CP.B	W0, #4
0x162A	0x310005  	BRA GEU	L_EngineControl_isStarting0
L__EngineControl_isStarting9:
;enginecontrol.c,44 :: 		engineControl_startCheckCounter += 1;
0x162C	0xB3C011  	MOV.B	#1, W1
0x162E	0x2086D0  	MOV	#lo_addr(_engineControl_startCheckCounter), W0
0x1630	0x40C810  	ADD.B	W1, [W0], [W0]
;enginecontrol.c,45 :: 		return TRUE;
0x1632	0xB3C010  	MOV.B	#1, W0
0x1634	0x370001  	BRA	L_end_EngineControl_isStarting
;enginecontrol.c,46 :: 		} else {
L_EngineControl_isStarting0:
;enginecontrol.c,47 :: 		return FALSE;
0x1636	0xEF2000  	CLR	W0
;enginecontrol.c,49 :: 		}
L_end_EngineControl_isStarting:
0x1638	0x060000  	RETURN
; end of _EngineControl_isStarting
_GCU_isAlive:
;DY_GCU.c,48 :: 		void GCU_isAlive(void) {
;DY_GCU.c,49 :: 		Can_resetWritePacket();
0x141E	0x781F8A  	PUSH	W10
0x1420	0x781F8B  	PUSH	W11
0x1422	0x07FDEA  	RCALL	_Can_resetWritePacket
;DY_GCU.c,50 :: 		Can_addIntToWritePacket((unsigned int)CAN_COMMAND_GCU_IS_ALIVE);
0x1424	0x20063A  	MOV	#99, W10
0x1426	0x07FDDC  	RCALL	_Can_addIntToWritePacket
;DY_GCU.c,51 :: 		Can_addIntToWritePacket((unsigned int)(Clutch_get() | 0 ));
0x1428	0x07FBD6  	RCALL	_Clutch_get
0x142A	0xFB8000  	ZE	W0, W0
0x142C	0x780500  	MOV	W0, W10
0x142E	0x07FDD8  	RCALL	_Can_addIntToWritePacket
;DY_GCU.c,52 :: 		Can_addIntToWritePacket(0);
0x1430	0xEF2014  	CLR	W10
0x1432	0x07FDD6  	RCALL	_Can_addIntToWritePacket
;DY_GCU.c,53 :: 		Can_addIntToWritePacket(0);
0x1434	0xEF2014  	CLR	W10
0x1436	0x07FDD4  	RCALL	_Can_addIntToWritePacket
;DY_GCU.c,54 :: 		Can_write(GCU_CLUTCH_FB_SW_ID);
0x1438	0x20310A  	MOV	#784, W10
0x143A	0x20000B  	MOV	#0, W11
0x143C	0x07FDB5  	RCALL	_Can_write
;DY_GCU.c,55 :: 		}
L_end_GCU_isAlive:
0x143E	0x7805CF  	POP	W11
0x1440	0x78054F  	POP	W10
0x1442	0x060000  	RETURN
; end of _GCU_isAlive
_Can_resetWritePacket:
;can.c,118 :: 		void Can_resetWritePacket(void) {
;can.c,119 :: 		for (can_dataOutLength = 0; can_dataOutLength < CAN_PACKET_SIZE; can_dataOutLength += 1) {
0x0FF8	0xEF2000  	CLR	W0
0x0FFA	0x884060  	MOV	W0, _can_dataOutLength
L_Can_resetWritePacket11:
0x0FFC	0x804060  	MOV	_can_dataOutLength, W0
0x0FFE	0xE10068  	CP	W0, #8
0x1000	0x310009  	BRA GEU	L_Can_resetWritePacket12
L__Can_resetWritePacket31:
;can.c,120 :: 		can_dataOutBuffer[can_dataOutLength] = 0;
0x1002	0x2085C1  	MOV	#lo_addr(_can_dataOutBuffer), W1
0x1004	0x2080C0  	MOV	#lo_addr(_can_dataOutLength), W0
0x1006	0x408090  	ADD	W1, [W0], W1
0x1008	0xEF2000  	CLR	W0
0x100A	0x784880  	MOV.B	W0, [W1]
;can.c,119 :: 		for (can_dataOutLength = 0; can_dataOutLength < CAN_PACKET_SIZE; can_dataOutLength += 1) {
0x100C	0x200011  	MOV	#1, W1
0x100E	0x2080C0  	MOV	#lo_addr(_can_dataOutLength), W0
0x1010	0x408810  	ADD	W1, [W0], [W0]
;can.c,121 :: 		}
0x1012	0x37FFF4  	BRA	L_Can_resetWritePacket11
L_Can_resetWritePacket12:
;can.c,122 :: 		can_dataOutLength = 0;
0x1014	0xEF2000  	CLR	W0
0x1016	0x884060  	MOV	W0, _can_dataOutLength
;can.c,123 :: 		}
L_end_Can_resetWritePacket:
0x1018	0x060000  	RETURN
; end of _Can_resetWritePacket
_Can_addIntToWritePacket:
;can.c,91 :: 		void Can_addIntToWritePacket(int dataOut) {
;can.c,92 :: 		Can_addByteToWritePacket((unsigned char) (dataOut >> 8));
0x0FE0	0x781F8A  	PUSH	W10
0x0FE2	0xDED048  	ASR	W10, #8, W0
0x0FE4	0x781F8A  	PUSH	W10
0x0FE6	0x784500  	MOV.B	W0, W10
0x0FE8	0x07FEA3  	RCALL	_Can_addByteToWritePacket
0x0FEA	0x78054F  	POP	W10
;can.c,93 :: 		Can_addByteToWritePacket((unsigned char) (dataOut & 0xFF));
0x0FEC	0x200FF0  	MOV	#255, W0
0x0FEE	0x650000  	AND	W10, W0, W0
0x0FF0	0x784500  	MOV.B	W0, W10
0x0FF2	0x07FE9E  	RCALL	_Can_addByteToWritePacket
;can.c,94 :: 		}
L_end_Can_addIntToWritePacket:
0x0FF4	0x78054F  	POP	W10
0x0FF6	0x060000  	RETURN
; end of _Can_addIntToWritePacket
_Can_addByteToWritePacket:
;can.c,96 :: 		void Can_addByteToWritePacket(unsigned char dataOut) {
;can.c,97 :: 		can_dataOutBuffer[can_dataOutLength] = dataOut;
0x0D30	0x2085C1  	MOV	#lo_addr(_can_dataOutBuffer), W1
0x0D32	0x2080C0  	MOV	#lo_addr(_can_dataOutLength), W0
0x0D34	0x408010  	ADD	W1, [W0], W0
0x0D36	0x78480A  	MOV.B	W10, [W0]
;can.c,98 :: 		can_dataOutLength += 1;
0x0D38	0x200011  	MOV	#1, W1
0x0D3A	0x2080C0  	MOV	#lo_addr(_can_dataOutLength), W0
0x0D3C	0x408810  	ADD	W1, [W0], [W0]
;can.c,99 :: 		}
L_end_Can_addByteToWritePacket:
0x0D3E	0x060000  	RETURN
; end of _Can_addByteToWritePacket
_Can_write:
;can.c,101 :: 		unsigned int Can_write(unsigned long int id) {
;can.c,102 :: 		unsigned int sent, i = 0;
0x0FA8	0x781F8C  	PUSH	W12
0x0FAA	0x781F8D  	PUSH	W13
; i start address is: 14 (W7)
0x0FAC	0xEF200E  	CLR	W7
; i end address is: 14 (W7)
;can.c,103 :: 		do {
L_Can_write5:
;can.c,104 :: 		sent = CAN1Write(id, can_dataOutBuffer, CAN_PACKET_SIZE, Can_getWriteFlags());
; i start address is: 14 (W7)
0x0FAE	0x07FEC8  	RCALL	_Can_getWriteFlags
0x0FB0	0xBE9F8A  	PUSH.D	W10
0x0FB2	0x20008D  	MOV	#8, W13
0x0FB4	0x2085CC  	MOV	#lo_addr(_can_dataOutBuffer), W12
0x0FB6	0x781F80  	PUSH	W0
0x0FB8	0x07FED3  	RCALL	_CAN1Write
0x0FBA	0xB1002F  	SUB	#2, W15
0x0FBC	0xBE054F  	POP.D	W10
;can.c,105 :: 		i += 1;
0x0FBE	0xEC200E  	INC	W7
;can.c,106 :: 		} while ((sent == 0) && (i < CAN_RETRY_LIMIT));
0x0FC0	0xE10060  	CP	W0, #0
0x0FC2	0x3A0003  	BRA NZ	L__Can_write16
L__Can_write26:
0x0FC4	0xE13865  	CP	W7, #5
0x0FC6	0x310001  	BRA GEU	L__Can_write15
L__Can_write27:
0x0FC8	0x37FFF2  	BRA	L_Can_write5
L__Can_write16:
L__Can_write15:
;can.c,107 :: 		if (i == CAN_RETRY_LIMIT) {
0x0FCA	0xE13865  	CP	W7, #5
0x0FCC	0x3A0005  	BRA NZ	L_Can_write10
L__Can_write28:
; i end address is: 14 (W7)
;can.c,108 :: 		can_err++;
0x0FCE	0x200011  	MOV	#1, W1
0x0FD0	0x208000  	MOV	#lo_addr(_can_err), W0
0x0FD2	0x408810  	ADD	W1, [W0], [W0]
;can.c,109 :: 		return -1;
0x0FD4	0x2FFFF0  	MOV	#65535, W0
0x0FD6	0x370001  	BRA	L_end_Can_write
;can.c,110 :: 		}
L_Can_write10:
;can.c,111 :: 		return i;
; i start address is: 14 (W7)
0x0FD8	0x780007  	MOV	W7, W0
; i end address is: 14 (W7)
;can.c,112 :: 		}
;can.c,111 :: 		return i;
;can.c,112 :: 		}
L_end_Can_write:
0x0FDA	0x7806CF  	POP	W13
0x0FDC	0x78064F  	POP	W12
0x0FDE	0x060000  	RETURN
; end of _Can_write
_CAN1Write:
0x0D60	0xFA0000  	LNK	#0
;__Lib_CAN_12.c,596 :: 		
0x0D62	0x781F8A  	PUSH	W10
0x0D64	0x781F8B  	PUSH	W11
; CAN_TX_MSG_FLAGS start address is: 8 (W4)
0x0D66	0x97BA4E  	MOV	[W14-8], W4
;__Lib_CAN_12.c,602 :: 		
0x0D68	0xAF636E  	BTSC.B	C1TX0CONbits, #3
0x0D6A	0x370003  	BRA	L_CAN1Write32
;__Lib_CAN_12.c,603 :: 		
; ptr start address is: 12 (W6)
0x0D6C	0x203606  	MOV	#lo_addr(C1TX0SID), W6
;__Lib_CAN_12.c,604 :: 		
; TxCtrlReg start address is: 10 (W5)
0x0D6E	0x2036E5  	MOV	#lo_addr(C1TX0CON), W5
;__Lib_CAN_12.c,605 :: 		
; ptr end address is: 12 (W6)
; TxCtrlReg end address is: 10 (W5)
0x0D70	0x37000E  	BRA	L_CAN1Write33
L_CAN1Write32:
;__Lib_CAN_12.c,607 :: 		
0x0D72	0xAF635E  	BTSC.B	C1TX1CONbits, #3
0x0D74	0x370004  	BRA	L_CAN1Write34
;__Lib_CAN_12.c,608 :: 		
; ptr start address is: 12 (W6)
0x0D76	0x203506  	MOV	#lo_addr(C1TX1SID), W6
;__Lib_CAN_12.c,609 :: 		
; TxCtrlReg start address is: 0 (W0)
0x0D78	0x2035E0  	MOV	#lo_addr(C1TX1CON), W0
;__Lib_CAN_12.c,610 :: 		
; TxCtrlReg end address is: 0 (W0)
; ptr end address is: 12 (W6)
0x0D7A	0x780280  	MOV	W0, W5
0x0D7C	0x370008  	BRA	L_CAN1Write35
L_CAN1Write34:
;__Lib_CAN_12.c,612 :: 		
0x0D7E	0xAF634E  	BTSC.B	C1TX2CONbits, #3
0x0D80	0x370003  	BRA	L_CAN1Write36
;__Lib_CAN_12.c,613 :: 		
; ptr start address is: 12 (W6)
0x0D82	0x203406  	MOV	#lo_addr(C1TX2SID), W6
;__Lib_CAN_12.c,614 :: 		
; TxCtrlReg start address is: 0 (W0)
0x0D84	0x2034E0  	MOV	#lo_addr(C1TX2CON), W0
;__Lib_CAN_12.c,615 :: 		
0x0D86	0x370002  	BRA	L_CAN1Write37
; TxCtrlReg end address is: 0 (W0)
; ptr end address is: 12 (W6)
; CAN_TX_MSG_FLAGS end address is: 8 (W4)
L_CAN1Write36:
;__Lib_CAN_12.c,617 :: 		
0x0D88	0xEF2000  	CLR	W0
0x0D8A	0x370035  	BRA	L_end_CAN1Write
;__Lib_CAN_12.c,618 :: 		
L_CAN1Write37:
;__Lib_CAN_12.c,619 :: 		
; CAN_TX_MSG_FLAGS start address is: 8 (W4)
; ptr start address is: 12 (W6)
; TxCtrlReg start address is: 0 (W0)
; ptr end address is: 12 (W6)
0x0D8C	0x780280  	MOV	W0, W5
L_CAN1Write35:
; TxCtrlReg end address is: 0 (W0)
;__Lib_CAN_12.c,620 :: 		
; TxCtrlReg start address is: 10 (W5)
; ptr start address is: 12 (W6)
; ptr end address is: 12 (W6)
; TxCtrlReg end address is: 10 (W5)
L_CAN1Write33:
;__Lib_CAN_12.c,628 :: 		
; ptr start address is: 12 (W6)
; TxCtrlReg start address is: 10 (W5)
0x0D8E	0xAF6008  	BTSC	W4, #3
0x0D90	0x37000B  	BRA	L_CAN1Write38
;__Lib_CAN_12.c,629 :: 		
0x0D92	0xBE9F8C  	PUSH.D	W12
0x0D94	0x20002D  	MOV	#2, W13
0x0D96	0x78060B  	MOV	W11, W12
0x0D98	0x78058A  	MOV	W10, W11
0x0D9A	0x780506  	MOV	W6, W10
0x0D9C	0x200F70  	MOV	#247, W0
0x0D9E	0x781F80  	PUSH	W0
0x0DA0	0x07FB91  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x0DA2	0xB1002F  	SUB	#2, W15
0x0DA4	0xBE064F  	POP.D	W12
0x0DA6	0x37000A  	BRA	L_CAN1Write39
L_CAN1Write38:
;__Lib_CAN_12.c,631 :: 		
0x0DA8	0xBE9F8C  	PUSH.D	W12
0x0DAA	0x20002D  	MOV	#2, W13
0x0DAC	0x78060B  	MOV	W11, W12
0x0DAE	0x78058A  	MOV	W10, W11
0x0DB0	0x780506  	MOV	W6, W10
0x0DB2	0x200FF0  	MOV	#255, W0
0x0DB4	0x781F80  	PUSH	W0
0x0DB6	0x07FB86  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x0DB8	0xB1002F  	SUB	#2, W15
0x0DBA	0xBE064F  	POP.D	W12
L_CAN1Write39:
;__Lib_CAN_12.c,633 :: 		
0x0DBC	0x430164  	ADD	W6, #4, W2
; ptr end address is: 12 (W6)
; ptr start address is: 6 (W3)
0x0DBE	0x780182  	MOV	W2, W3
;__Lib_CAN_12.c,635 :: 		
0x0DC0	0x780092  	MOV	[W2], W1
0x0DC2	0x2FD800  	MOV	#64896, W0
0x0DC4	0x608900  	AND	W1, W0, [W2]
;__Lib_CAN_12.c,636 :: 		
0x0DC6	0x66806F  	AND	W13, #15, W0
0x0DC8	0xDD0043  	SL	W0, #3, W0
0x0DCA	0x700993  	IOR	W0, [W3], [W3]
;__Lib_CAN_12.c,638 :: 		
0x0DCC	0xAFC008  	BTSC	W4, #6
0x0DCE	0x370003  	BRA	L_CAN1Write40
;__Lib_CAN_12.c,639 :: 		
0x0DD0	0x780093  	MOV	[W3], W1
0x0DD2	0x202000  	MOV	#512, W0
0x0DD4	0x708980  	IOR	W1, W0, [W3]
L_CAN1Write40:
;__Lib_CAN_12.c,642 :: 		
; chptr start address is: 4 (W2)
0x0DD6	0x418162  	ADD	W3, #2, W2
; ptr end address is: 6 (W3)
;__Lib_CAN_12.c,643 :: 		
; i start address is: 0 (W0)
0x0DD8	0xEF2000  	CLR	W0
;__Lib_CAN_12.c,644 :: 		
; TxCtrlReg end address is: 10 (W5)
; i end address is: 0 (W0)
; CAN_TX_MSG_FLAGS end address is: 8 (W4)
0x0DDA	0x780185  	MOV	W5, W3
0x0DDC	0x780280  	MOV	W0, W5
;__Lib_CAN_12.c,645 :: 		
L_CAN1Write41:
; chptr start address is: 4 (W2)
; chptr end address is: 4 (W2)
; i start address is: 10 (W5)
; TxCtrlReg start address is: 6 (W3)
; CAN_TX_MSG_FLAGS start address is: 8 (W4)
0x0DDE	0xE1280D  	CP	W5, W13
0x0DE0	0x310005  	BRA GEU	L_CAN1Write42
L__CAN1Write147:
; chptr end address is: 4 (W2)
;__Lib_CAN_12.c,646 :: 		
; chptr start address is: 4 (W2)
0x0DE2	0x410085  	ADD	W2, W5, W1
0x0DE4	0x460005  	ADD	W12, W5, W0
0x0DE6	0x784890  	MOV.B	[W0], [W1]
;__Lib_CAN_12.c,647 :: 		
0x0DE8	0xEC200A  	INC	W5
;__Lib_CAN_12.c,648 :: 		
; chptr end address is: 4 (W2)
; i end address is: 10 (W5)
0x0DEA	0x37FFF9  	BRA	L_CAN1Write41
L_CAN1Write42:
;__Lib_CAN_12.c,650 :: 		
0x0DEC	0x6209E3  	AND	W4, #3, [W3]
; CAN_TX_MSG_FLAGS end address is: 8 (W4)
;__Lib_CAN_12.c,661 :: 		
0x0DEE	0x780013  	MOV	[W3], W0
0x0DF0	0x700068  	IOR	W0, #8, W0
0x0DF2	0x780980  	MOV	W0, [W3]
; TxCtrlReg end address is: 6 (W3)
;__Lib_CAN_12.c,668 :: 		
0x0DF4	0x2FFFF0  	MOV	#65535, W0
;__Lib_CAN_12.c,669 :: 		
;__Lib_CAN_12.c,668 :: 		
;__Lib_CAN_12.c,669 :: 		
L_end_CAN1Write:
0x0DF6	0x7805CF  	POP	W11
0x0DF8	0x78054F  	POP	W10
0x0DFA	0xFA8000  	ULNK
0x0DFC	0x060000  	RETURN
; end of _CAN1Write
_Can_getWriteFlags:
;can.c,125 :: 		unsigned int Can_getWriteFlags(void) {
;can.c,126 :: 		return CAN_DEFAULT_FLAGS & can_txPriority;
0x0D40	0x200FF1  	MOV	#255, W1
0x0D42	0x208080  	MOV	#lo_addr(_can_txPriority), W0
0x0D44	0x608010  	AND	W1, [W0], W0
;can.c,127 :: 		}
L_end_Can_getWriteFlags:
0x0D46	0x060000  	RETURN
; end of _Can_getWriteFlags
_dSignalLed_switch:
;d_signalled.c,12 :: 		void dSignalLed_switch(unsigned char led) {
;d_signalled.c,13 :: 		switch (led) {
0x15C0	0x370002  	BRA	L_dSignalLed_switch0
;d_signalled.c,14 :: 		case DSIGNAL_LED_0:
L_dSignalLed_switch2:
;d_signalled.c,15 :: 		DSIGNAL_0_Pin = !DSIGNAL_0_Pin;
0x15C2	0xAAC2E7  	BTG	RG14_bit, BitPos(RG14_bit+0)
;d_signalled.c,16 :: 		break;
0x15C4	0x370002  	BRA	L_dSignalLed_switch1
;d_signalled.c,17 :: 		}
L_dSignalLed_switch0:
0x15C6	0xE15460  	CP.B	W10, #0
0x15C8	0x32FFFC  	BRA Z	L_dSignalLed_switch2
L__dSignalLed_switch11:
L_dSignalLed_switch1:
;d_signalled.c,18 :: 		}
L_end_dSignalLed_switch:
0x15CA	0x060000  	RETURN
; end of _dSignalLed_switch
_aac_execute:
0x1444	0xFA0008  	LNK	#8
;aac.c,30 :: 		void aac_execute(void){
;aac.c,31 :: 		switch (aac_currentState) {
0x1446	0x781F8A  	PUSH	W10
0x1448	0x370087  	BRA	L_aac_execute0
;aac.c,32 :: 		case START:
L_aac_execute2:
;aac.c,33 :: 		Efi_setRPMLimiter();
0x144A	0x07FDE7  	RCALL	_Efi_setRPMLimiter
;aac.c,35 :: 		aac_clutchValue = 100;
0x144C	0x200000  	MOV	#0, W0
0x144E	0x242C81  	MOV	#17096, W1
0x1450	0x884290  	MOV	W0, _aac_clutchValue
0x1452	0x8842A1  	MOV	W1, _aac_clutchValue+2
;aac.c,36 :: 		Clutch_set((unsigned int)aac_clutchValue);
0x1454	0x200000  	MOV	#0, W0
0x1456	0x242C81  	MOV	#17096, W1
0x1458	0x07F6E8  	RCALL	__Float2Longint
0x145A	0x784500  	MOV.B	W0, W10
0x145C	0x07FAA8  	RCALL	_Clutch_set
;aac.c,37 :: 		aac_currentState = READY;
0x145E	0x2086C1  	MOV	#lo_addr(_aac_currentState), W1
0x1460	0xB3C020  	MOV.B	#2, W0
0x1462	0x784880  	MOV.B	W0, [W1]
;aac.c,38 :: 		accelerationFb = 1;
0x1464	0x200010  	MOV	#1, W0
0x1466	0x884080  	MOV	W0, _accelerationFb
;aac.c,39 :: 		sendUpdatesSW(1);
0x1468	0x20001A  	MOV	#1, W10
0x146A	0x07FDF5  	RCALL	_sendUpdatesSW
;aac.c,40 :: 		return;
0x146C	0x37008E  	BRA	L_end_aac_execute
;aac.c,41 :: 		case READY:
L_aac_execute3:
;aac.c,42 :: 		Clutch_set(100);
0x146E	0xB3C64A  	MOV.B	#100, W10
0x1470	0x07FA9E  	RCALL	_Clutch_set
;aac.c,43 :: 		return;
0x1472	0x37008B  	BRA	L_end_aac_execute
;aac.c,44 :: 		case START_RELEASE:
L_aac_execute4:
;aac.c,45 :: 		aac_clutchValue = aac_parameters[RAMP_START];
0x1474	0x804370  	MOV	_aac_parameters, W0
0x1476	0xDE80CF  	ASR	W0, #15, W1
0x1478	0xEB8100  	SETM	W2
0x147A	0x07F7C9  	RCALL	__Long2Float
0x147C	0x884290  	MOV	W0, _aac_clutchValue
0x147E	0x8842A1  	MOV	W1, _aac_clutchValue+2
;aac.c,46 :: 		Clutch_set(aac_clutchValue);
0x1480	0x07F6D4  	RCALL	__Float2Longint
0x1482	0x784500  	MOV.B	W0, W10
0x1484	0x07FA94  	RCALL	_Clutch_set
;aac.c,47 :: 		aac_dtRelease = aac_parameters[RAMP_TIME] / AAC_WORK_RATE_ms;
0x1486	0x804390  	MOV	_aac_parameters+4, W0
0x1488	0x200192  	MOV	#25, W2
0x148A	0x090011  	REPEAT	#17
0x148C	0xD80002  	DIV.S	W0, W2
0x148E	0x8842B0  	MOV	W0, _aac_dtRelease
;aac.c,48 :: 		aac_clutchStep = ((float)(aac_parameters[RAMP_START] - aac_parameters[RAMP_END]) * AAC_WORK_RATE_ms) / (float)aac_parameters[RAMP_TIME];
0x1490	0x804371  	MOV	_aac_parameters, W1
0x1492	0x208700  	MOV	#lo_addr(_aac_parameters+2), W0
0x1494	0x508010  	SUB	W1, [W0], W0
0x1496	0xDE80CF  	ASR	W0, #15, W1
0x1498	0xEB8100  	SETM	W2
0x149A	0x07F7B9  	RCALL	__Long2Float
0x149C	0x200002  	MOV	#0, W2
0x149E	0x241C83  	MOV	#16840, W3
0x14A0	0x07F62F  	RCALL	__Mul_FP
0x14A2	0x980720  	MOV	W0, [W14+4]
0x14A4	0x980731  	MOV	W1, [W14+6]
0x14A6	0x804390  	MOV	_aac_parameters+4, W0
0x14A8	0xDE80CF  	ASR	W0, #15, W1
0x14AA	0xEB8100  	SETM	W2
0x14AC	0x07F7B0  	RCALL	__Long2Float
0x14AE	0x980700  	MOV	W0, [W14+0]
0x14B0	0x980711  	MOV	W1, [W14+2]
0x14B2	0x90002E  	MOV	[W14+4], W0
0x14B4	0x9000BE  	MOV	[W14+6], W1
0x14B6	0xBE9F82  	PUSH.D	W2
0x14B8	0x90010E  	MOV	[W14+0], W2
0x14BA	0x90019E  	MOV	[W14+2], W3
0x14BC	0x07FE61  	RCALL	__Div_FP
0x14BE	0xBE014F  	POP.D	W2
0x14C0	0x8842C0  	MOV	W0, _aac_clutchStep
0x14C2	0x8842D1  	MOV	W1, _aac_clutchStep+2
;aac.c,49 :: 		aac_currentState = RELEASING;
0x14C4	0x2086C1  	MOV	#lo_addr(_aac_currentState), W1
0x14C6	0xB3C040  	MOV.B	#4, W0
0x14C8	0x784880  	MOV.B	W0, [W1]
;aac.c,50 :: 		accelerationFb = 2;
0x14CA	0x200020  	MOV	#2, W0
0x14CC	0x884080  	MOV	W0, _accelerationFb
;aac.c,51 :: 		sendUpdatesSW(ACC_CODE);
0x14CE	0x20001A  	MOV	#1, W10
0x14D0	0x07FDC2  	RCALL	_sendUpdatesSW
;aac.c,52 :: 		return;
0x14D2	0x37005B  	BRA	L_end_aac_execute
;aac.c,53 :: 		case RELEASING:
L_aac_execute5:
;aac.c,55 :: 		aac_clutchValue = aac_clutchValue - aac_clutchStep;
0x14D4	0x804290  	MOV	_aac_clutchValue, W0
0x14D6	0x8042A1  	MOV	_aac_clutchValue+2, W1
0x14D8	0x8042C2  	MOV	_aac_clutchStep, W2
0x14DA	0x8042D3  	MOV	_aac_clutchStep+2, W3
0x14DC	0x07FDD5  	RCALL	__Sub_FP
0x14DE	0x884290  	MOV	W0, _aac_clutchValue
0x14E0	0x8842A1  	MOV	W1, _aac_clutchValue+2
;aac.c,56 :: 		Clutch_set((unsigned char)aac_clutchValue);
0x14E2	0x07F6A3  	RCALL	__Float2Longint
0x14E4	0x784500  	MOV.B	W0, W10
0x14E6	0x07FA63  	RCALL	_Clutch_set
;aac.c,57 :: 		aac_dtRelease--;
0x14E8	0x200011  	MOV	#1, W1
0x14EA	0x208560  	MOV	#lo_addr(_aac_dtRelease), W0
0x14EC	0x108810  	SUBR	W1, [W0], [W0]
;aac.c,58 :: 		if(aac_dtRelease <= 0 || Clutch_get() <= aac_parameters[RAMP_END]){
0x14EE	0x8042B0  	MOV	_aac_dtRelease, W0
0x14F0	0xE10060  	CP	W0, #0
0x14F2	0x340006  	BRA LE	L__aac_execute23
L__aac_execute29:
0x14F4	0x07FB70  	RCALL	_Clutch_get
0x14F6	0xFB8080  	ZE	W0, W1
0x14F8	0x208700  	MOV	#lo_addr(_aac_parameters+2), W0
0x14FA	0xE10810  	CP	W1, [W0]
0x14FC	0x340001  	BRA LE	L__aac_execute22
L__aac_execute30:
0x14FE	0x370006  	BRA	L_aac_execute8
L__aac_execute23:
L__aac_execute22:
;aac.c,59 :: 		Clutch_set(0);
0x1500	0xEF2014  	CLR	W10
0x1502	0x07FA55  	RCALL	_Clutch_set
;aac.c,60 :: 		Efi_unsetRPMLimiter();
0x1504	0x07FDDA  	RCALL	_Efi_unsetRPMLimiter
;aac.c,61 :: 		aac_currentState = RUNNING;                 //For gearshift  Use alternatively to aac_stop
0x1506	0x2086C1  	MOV	#lo_addr(_aac_currentState), W1
0x1508	0xB3C050  	MOV.B	#5, W0
0x150A	0x784880  	MOV.B	W0, [W1]
;aac.c,64 :: 		}
L_aac_execute8:
;aac.c,65 :: 		Buzzer_bip();
0x150C	0x07FA66  	RCALL	_Buzzer_Bip
;aac.c,66 :: 		return;
0x150E	0x37003D  	BRA	L_end_aac_execute
;aac.c,67 :: 		case RUNNING:
L_aac_execute9:
;aac.c,69 :: 		if(gearShift_currentGear == 4){
0x1510	0x804440  	MOV	_gearShift_currentGear, W0
0x1512	0xE10064  	CP	W0, #4
0x1514	0x3A0002  	BRA NZ	L_aac_execute10
L__aac_execute31:
;aac.c,70 :: 		aac_stop();
0x1516	0x07FD3C  	RCALL	_aac_stop
;aac.c,71 :: 		return;
0x1518	0x370038  	BRA	L_end_aac_execute
;aac.c,72 :: 		}
L_aac_execute10:
;aac.c,74 :: 		if(aac_externValues[RPM] >= aac_parameters[RPM_LIMIT_1_2 + gearShift_currentGear - 1]
0x151A	0x804440  	MOV	_gearShift_currentGear, W0
0x151C	0x400063  	ADD	W0, #3, W0
0x151E	0xED2000  	DEC	W0
0x1520	0xDD00C1  	SL	W0, #1, W1
0x1522	0x2086E0  	MOV	#lo_addr(_aac_parameters), W0
0x1524	0x400001  	ADD	W0, W1, W0
0x1526	0x780090  	MOV	[W0], W1
;aac.c,75 :: 		&& aac_externValues[WHEEL_SPEED] >= aac_parameters[SPEED_LIMIT_1_2 + gearShift_currentGear - 1]){
0x1528	0x208180  	MOV	#lo_addr(_aac_externValues), W0
0x152A	0xE10810  	CP	W1, [W0]
0x152C	0x3C000B  	BRA GT	L__aac_execute25
L__aac_execute32:
0x152E	0x804440  	MOV	_gearShift_currentGear, W0
0x1530	0x400067  	ADD	W0, #7, W0
0x1532	0xED2000  	DEC	W0
0x1534	0xDD00C1  	SL	W0, #1, W1
0x1536	0x2086E0  	MOV	#lo_addr(_aac_parameters), W0
0x1538	0x400001  	ADD	W0, W1, W0
0x153A	0x780090  	MOV	[W0], W1
0x153C	0x2081A0  	MOV	#lo_addr(_aac_externValues+2), W0
0x153E	0xE10810  	CP	W1, [W0]
0x1540	0x3C0001  	BRA GT	L__aac_execute24
L__aac_execute33:
L__aac_execute20:
;aac.c,76 :: 		GearShift_up();
0x1542	0x07FD7D  	RCALL	_GearShift_up
;aac.c,75 :: 		&& aac_externValues[WHEEL_SPEED] >= aac_parameters[SPEED_LIMIT_1_2 + gearShift_currentGear - 1]){
L__aac_execute25:
L__aac_execute24:
;aac.c,78 :: 		return;
0x1544	0x370022  	BRA	L_end_aac_execute
;aac.c,79 :: 		case STOPPING:
L_aac_execute14:
;aac.c,80 :: 		aac_currentState = OFF;
0x1546	0x2086C1  	MOV	#lo_addr(_aac_currentState), W1
0x1548	0xEF2000  	CLR	W0
0x154A	0x784880  	MOV.B	W0, [W1]
;aac.c,81 :: 		accelerationFb = 0;
0x154C	0xEF2000  	CLR	W0
0x154E	0x884080  	MOV	W0, _accelerationFb
;aac.c,82 :: 		sendUpdatesSW(ACC_CODE);
0x1550	0x20001A  	MOV	#1, W10
0x1552	0x07FD81  	RCALL	_sendUpdatesSW
;aac.c,83 :: 		return;
0x1554	0x37001A  	BRA	L_end_aac_execute
;aac.c,85 :: 		default: return;
L_aac_execute15:
0x1556	0x370019  	BRA	L_end_aac_execute
;aac.c,86 :: 		}
L_aac_execute0:
0x1558	0x2086C0  	MOV	#lo_addr(_aac_currentState), W0
0x155A	0x784010  	MOV.B	[W0], W0
0x155C	0xE10461  	CP.B	W0, #1
0x155E	0x32FF75  	BRA Z	L_aac_execute2
L__aac_execute34:
0x1560	0x2086C0  	MOV	#lo_addr(_aac_currentState), W0
0x1562	0x784010  	MOV.B	[W0], W0
0x1564	0xE10462  	CP.B	W0, #2
0x1566	0x32FF83  	BRA Z	L_aac_execute3
L__aac_execute35:
0x1568	0x2086C0  	MOV	#lo_addr(_aac_currentState), W0
0x156A	0x784010  	MOV.B	[W0], W0
0x156C	0xE10463  	CP.B	W0, #3
0x156E	0x32FF82  	BRA Z	L_aac_execute4
L__aac_execute36:
0x1570	0x2086C0  	MOV	#lo_addr(_aac_currentState), W0
0x1572	0x784010  	MOV.B	[W0], W0
0x1574	0xE10464  	CP.B	W0, #4
0x1576	0x32FFAE  	BRA Z	L_aac_execute5
L__aac_execute37:
0x1578	0x2086C0  	MOV	#lo_addr(_aac_currentState), W0
0x157A	0x784010  	MOV.B	[W0], W0
0x157C	0xE10465  	CP.B	W0, #5
0x157E	0x32FFC8  	BRA Z	L_aac_execute9
L__aac_execute38:
0x1580	0x2086C0  	MOV	#lo_addr(_aac_currentState), W0
0x1582	0x784010  	MOV.B	[W0], W0
0x1584	0xE10466  	CP.B	W0, #6
0x1586	0x32FFDF  	BRA Z	L_aac_execute14
L__aac_execute39:
0x1588	0x37FFE6  	BRA	L_aac_execute15
;aac.c,87 :: 		}
L_end_aac_execute:
0x158A	0x78054F  	POP	W10
0x158C	0xFA8000  	ULNK
0x158E	0x060000  	RETURN
; end of _aac_execute
_sendUpdatesSW:
;sw.c,5 :: 		void sendUpdatesSW(int valCode)
;sw.c,7 :: 		Can_resetWritePacket();
0x1056	0x781F8A  	PUSH	W10
0x1058	0x781F8B  	PUSH	W11
0x105A	0x781F8A  	PUSH	W10
0x105C	0x07FFCD  	RCALL	_Can_resetWritePacket
0x105E	0x78054F  	POP	W10
;sw.c,8 :: 		switch (valCode)
0x1060	0x370006  	BRA	L_sendUpdatesSW0
;sw.c,11 :: 		case 1:
L_sendUpdatesSW2:
;sw.c,12 :: 		Can_addIntToWritePacket(1);
0x1062	0x20001A  	MOV	#1, W10
0x1064	0x07FFBD  	RCALL	_Can_addIntToWritePacket
;sw.c,13 :: 		Can_addIntToWritePacket(accelerationFb);
0x1066	0x80408A  	MOV	_accelerationFb, W10
0x1068	0x07FFBB  	RCALL	_Can_addIntToWritePacket
;sw.c,14 :: 		break;
0x106A	0x370004  	BRA	L_sendUpdatesSW1
;sw.c,34 :: 		default:
L_sendUpdatesSW3:
;sw.c,35 :: 		break;
0x106C	0x370003  	BRA	L_sendUpdatesSW1
;sw.c,36 :: 		}
L_sendUpdatesSW0:
0x106E	0xE15061  	CP	W10, #1
0x1070	0x32FFF8  	BRA Z	L_sendUpdatesSW2
L__sendUpdatesSW5:
0x1072	0x37FFFC  	BRA	L_sendUpdatesSW3
L_sendUpdatesSW1:
;sw.c,37 :: 		Can_addIntToWritePacket(0);
0x1074	0xEF2014  	CLR	W10
0x1076	0x07FFB4  	RCALL	_Can_addIntToWritePacket
;sw.c,38 :: 		Can_addIntToWritePacket(0);
0x1078	0xEF2014  	CLR	W10
0x107A	0x07FFB2  	RCALL	_Can_addIntToWritePacket
;sw.c,39 :: 		Can_write(GCU_FEEDBACK_ID);
0x107C	0x20319A  	MOV	#793, W10
0x107E	0x20000B  	MOV	#0, W11
0x1080	0x07FF93  	RCALL	_Can_write
;sw.c,40 :: 		}
L_end_sendUpdatesSW:
0x1082	0x7805CF  	POP	W11
0x1084	0x78054F  	POP	W10
0x1086	0x060000  	RETURN
; end of _sendUpdatesSW
__Sub_FP:
0x1088	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,830 :: 		
;__Lib_MathDouble.c,831 :: 		
0x108A	0xAAE007  	BTG	W3, #15
;__Lib_MathDouble.c,832 :: 		
0x108C	0x07F90A  	RCALL	__AddSub_FP
;__Lib_MathDouble.c,833 :: 		
L_end__Sub_FP:
0x108E	0xFA8000  	ULNK
0x1090	0x060000  	RETURN
; end of __Sub_FP
;can.c,0 :: ?ICS_can_txPriority [2]
0x8000	0x00FD ;?ICS_can_txPriority+0
; end of ?ICS_can_txPriority
;buzzer.c,0 :: ?ICS_buzzer_ticks [2]
0x8002	0x0000 ;?ICS_buzzer_ticks+0
; end of ?ICS_buzzer_ticks
;can.c,0 :: ?ICS_can_dataOutLength [2]
0x8004	0x0000 ;?ICS_can_dataOutLength+0
; end of ?ICS_can_dataOutLength
;DY_GCU.c,0 :: ?ICS_timer1_counter3 [2]
0x8006	0x0000 ;?ICS_timer1_counter3+0
; end of ?ICS_timer1_counter3
;aac.c,0 :: ?ICS_accelerationFb [2]
0x8008	0x0000 ;?ICS_accelerationFb+0
; end of ?ICS_accelerationFb
;dspic.c,8 :: _PRESCALER_VALUES [8]
0x800A	0x0001 ;_PRESCALER_VALUES+0
0x800C	0x0008 ;_PRESCALER_VALUES+2
0x800E	0x0040 ;_PRESCALER_VALUES+4
0x8010	0x0100 ;_PRESCALER_VALUES+6
; end of _PRESCALER_VALUES
;can.c,0 :: ?ICS_can_err [2]
0x8012	0x0000 ;?ICS_can_err+0
; end of ?ICS_can_err
;DY_GCU.c,0 :: ?ICS_timer1_counter1 [2]
0x8014	0x0000 ;?ICS_timer1_counter1+0
; end of ?ICS_timer1_counter1
;DY_GCU.c,0 :: ?ICS_timer1_counter0 [2]
0x8016	0x0000 ;?ICS_timer1_counter0+0
; end of ?ICS_timer1_counter0
;,0 :: _initBlock_9 [2]
; Containing: ?ICS_bello [1]
;             ?ICS_Clutch_currentValue [1]
0x8018	0x0000 ;_initBlock_9+0 : ?ICS_bello at 0x8018 : ?ICS_Clutch_currentValue at 0x8019
; end of _initBlock_9
;DY_GCU.c,0 :: ?ICS_timer1_counter2 [2]
0x801A	0x0000 ;?ICS_timer1_counter2+0
; end of ?ICS_timer1_counter2
;DY_GCU.c,0 :: ?ICS_timer1_aac_counter [2]
0x801C	0x0000 ;?ICS_timer1_aac_counter+0
; end of ?ICS_timer1_aac_counter
;DY_GCU.c,0 :: ?ICS_timer1_counter4 [2]
0x801E	0x0000 ;?ICS_timer1_counter4+0
; end of ?ICS_timer1_counter4
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0100     [282]    __Mul_FP
0x021A      [16]    _getExactTimerPrescaler
0x022A     [120]    __Float2Longint
0x02A2     [364]    __AddSub_FP
0x040E     [182]    __Long2Float
0x04C4     [300]    __Lib_CAN_12_CAN1IDToRegs
0x05F0      [40]    _CAN1SetMask
0x0618     [110]    _CAN1SetFilter
0x0686     [206]    _setInterruptPriority
0x0754      [56]    _getTimerPrescaler
0x078C     [154]    _CAN1SetBaudRate
0x0826      [62]    _ClutchMotor_setPosition
0x0864      [62]    _getTimerPeriod
0x08A2      [78]    _CAN1SetOperationMode
0x08F0      [94]    _GearShift_loadDefaultTimings
0x094E      [80]    __Lib_CAN_12_RegsToCAN1ID
0x099E       [8]    _GearMotor_turnLeft
0x09A6       [4]    _Efi_unsetBlip
0x09AA       [4]    _Efi_unsetCut
0x09AE      [36]    _Clutch_set
0x09D2       [8]    _GearMotor_turnRight
0x09DA       [6]    _Buzzer_Bip
0x09E0     [178]    _Gearshift_get_time
0x0A92       [4]    _Efi_setCut
0x0A96       [6]    _GearShift_setMsTicks_A
0x0A9C      [60]    _StopLight_setupPWM
0x0AD8       [4]    _Efi_setBlip
0x0ADC       [8]    _GearMotor_brake
0x0AE4      [46]    _aac_loadDefaultParams
0x0B12      [10]    _Clutch_release
0x0B1C       [4]    _GearMotor_release
0x0B20      [12]    _dSignalLed_unset
0x0B2C     [170]    _setTimer
0x0BD6       [6]    _Clutch_get
0x0BDC     [224]    _CAN1Initialize
0x0CBC       [8]    _Can_initInterrupt
0x0CC4       [4]    _Can_setWritePriority
0x0CC8       [6]    _GearShift_setNextStep_A
0x0CCE      [98]    _ClutchMotor_setupPWM
0x0D30      [16]    _Can_addByteToWritePacket
0x0D40       [8]    _Can_getWriteFlags
0x0D48      [24]    _GearShift_down
0x0D60     [158]    _CAN1Write
0x0DFE      [24]    _GearShift_isShifting
0x0E16     [352]    _GearShift_nextStep_A
0x0F76      [26]    _GearShift_setNeutral
0x0F90      [16]    _aac_stop
0x0FA0       [8]    _GearShift_nextStep_B
0x0FA8      [56]    _Can_write
0x0FE0      [24]    _Can_addIntToWritePacket
0x0FF8      [34]    _Can_resetWritePacket
0x101A       [4]    _Efi_setRPMLimiter
0x101E      [32]    _GearShift_shift
0x103E      [24]    _GearShift_up
0x1056      [50]    _sendUpdatesSW
0x1088      [10]    __Sub_FP
0x1092      [40]    _GearShift_init
0x10BA       [4]    _Efi_unsetRPMLimiter
0x10BE      [16]    _Efi_init
0x10CE      [10]    _aac_init
0x10D8      [36]    _Buzzer_init
0x10FC       [4]    _StopLight_init
0x1100      [98]    _Can_init
0x1162      [12]    _dSignalLed_init
0x116E      [18]    _EngineControl_init
0x1180     [310]    __Div_FP
0x12B6      [24]    _ClutchMotor_init
0x12CE      [10]    _GearMotor_init
0x12D8     [202]    _CAN1Read
0x13A2      [16]    _Can_B1hasBeenReceived
0x13B2       [4]    _Can_clearB1Flag
0x13B6       [4]    _Can_clearB0Flag
0x13BA      [16]    _Can_B0hasBeenReceived
0x13CA      [56]    _GearShift_injectCommand
0x1402       [4]    _EngineControl_stop
0x1406      [16]    _aac_updateExternValue
0x1416       [8]    _GearShift_setCurrentGear
0x141E      [38]    _GCU_isAlive
0x1444     [332]    _aac_execute
0x1590      [48]    _init
0x15C0      [12]    _dSignalLed_switch
0x15CC       [8]    _EngineControl_resetStartCheck
0x15D4       [4]    _EngineControl_start
0x15D8      [20]    _Buzzer_tick
0x15EC      [32]    _Clutch_setBiased
0x160C      [24]    _Can_read
0x1624      [22]    _EngineControl_isStarting
0x163A       [4]    _Can_clearInterrupt
0x163E      [54]    _GearShift_msTick
0x1674      [32]    _main
0x1694     [416]    _CAN_Interrupt
0x1834     [138]    _timer1_interrupt
0x18BE      [28]    _timer2_interrupt
0x18DA      [30]    _timer4_interrupt
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x038E       [1]    C1RX0CONbits
0x0818       [6]    _aac_externValues
0x0396       [2]    C1INTFbits
0x0320       [2]    C1RXF4SID
0x0328       [2]    C1RXF5SID
0x0390       [2]    C1CTRLbits
0x0086       [2]    IFS1bits
0x02D0       [0]    LATC1_bit
0x081E       [1]    _gearShift_nextStepValue_A
0x0380       [2]    C1RX0SID
0x02CA       [0]    LATB0_bit
0x0318       [2]    C1RXF3SID
0x0820       [2]    _STOPLIGHT_PWM_VALUE
0x01A6       [2]    OC7R
0x01A4       [2]    OC7RS
0x0822      [46]    _gearShift_timings
0x01A8       [2]    OC7CON
0x0850       [2]    _STOPLIGHT_PWM_PERIOD_VALUE
0x0330       [2]    C1RXM0SID
0x0300       [2]    C1RXF0SID
0x0308       [2]    C1RXF1SID
0x0310       [2]    C1RXF2SID
0x0338       [2]    C1RXM1SID
0x0392       [1]    C1CFG1bits
0x0394       [2]    C1CFG2bits
0x081F       [1]    _gearShift_nextStepValue_B
0x036E       [1]    C1TX0CONbits
0x0360       [2]    C1TX0SID
0x036E       [2]    C1TX0CON
0x034E       [1]    C1TX2CONbits
0x0340       [2]    C1TX2SID
0x034E       [2]    C1TX2CON
0x035E       [1]    C1TX1CONbits
0x0350       [2]    C1TX1SID
0x035E       [2]    C1TX1CON
0x037E       [2]    C1RX1CON
0x0084       [2]    IFS0bits
0x0852       [4]    _aac_clutchValue
0x038E       [2]    C1RX0CON
0x037E       [1]    C1RX1CONbits
0x0370       [2]    C1RX1SID
0x0856       [2]    _aac_dtRelease
0x0858       [4]    _aac_clutchStep
0x085C       [8]    _can_dataOutBuffer
0x0102       [2]    PR1
0x008C       [2]    IEC0bits
0x0104       [2]    T1CON
0x0864       [4]    _CLUTCHMOTOR_PERCENTAGE_STEP
0x01AC       [2]    OC8R
0x01AA       [2]    OC8RS
0x010C       [2]    PR2
0x009C       [2]    IPC4bits
0x009E       [2]    IPC5bits
0x00A6       [2]    IPC9bits
0x011A       [2]    PR4
0x011E       [2]    T4CONbits
0x0094       [2]    IPC0bits
0x0868       [2]    _CLUTCHMOTOR_PWM_MIN_VALUE
0x02E6       [0]    RG13_bit
0x086A       [2]    _buzzer_bipTicks
0x086C       [1]    _aac_currentState
0x086E      [22]    _aac_parameters
0x02E4       [0]    TRISG13_bit
0x0884       [2]    _CLUTCHMOTOR_PWM_PERIOD_VALUE
0x0110       [2]    T2CONbits
0x0886       [2]    _CLUTCHMOTOR_PWM_MAX_VALUE
0x008E       [2]    IEC1bits
0x0398       [1]    C1INTEbits
0x01AE       [2]    OC8CON
0x02C6       [0]    TRISB0_bit
0x02CC       [0]    TRISC1_bit
0x02C6       [0]    TRISB1_bit
0x086D       [1]    _engineControl_startCheckCounter
0x02D6       [0]    LATD5_bit
0x02CA       [0]    LATB1_bit
0x0888       [2]    _gearShift_currentGear
0x088A       [1]    _gearShift_isUnsettingNeutral
0x088C       [2]    _gearShift_ticksCounter1
0x088E       [2]    _gearShift_ticksCounter2
0x088B       [1]    _gearShift_isShiftingUp
0x0890       [1]    _gearShift_isShiftingDown
0x0891       [1]    _gearShift_isSettingNeutral
0x0892       [1]    _engineControl_isChecking
0x02E4       [0]    TRISG14_bit
0x02D4       [0]    RD2_bit
0x02D2       [0]    TRISD2_bit
0x0096       [2]    IPC1bits
0x02E6       [0]    RG14_bit
0x02D2       [0]    TRISD3_bit
0x02D2       [2]    TRISD
0x02E4       [2]    TRISG
0x02E6       [0]    RG15_bit
0x02D2       [0]    TRISD4_bit
0x02D4       [0]    RD4_bit
0x02D4       [0]    RD3_bit
0x0800       [2]    _can_err
0x0802       [2]    _timer1_counter1
0x0804       [2]    _timer1_counter0
0x0806       [1]    _bello
0x0808       [2]    _can_txPriority
0x080A       [2]    _buzzer_ticks
0x080C       [2]    _can_dataOutLength
0x080E       [2]    _timer1_counter3
0x0810       [2]    _accelerationFb
0x0807       [1]    _Clutch_currentValue
0x0812       [2]    _timer1_counter2
0x0814       [2]    _timer1_aac_counter
0x0816       [2]    _timer1_counter4
0x0102       [2]    PR1
0x0104       [2]    T1CON
0x010C       [2]    PR2
0x011A       [2]    PR4
0x01A4       [2]    OC7RS
0x01A6       [2]    OC7R
0x01A8       [2]    OC7CON
0x01AA       [2]    OC8RS
0x01AC       [2]    OC8R
0x01AE       [2]    OC8CON
0x0014       [4]    FARG_getExactTimerPrescaler_timePeriod
0x02D2       [2]    TRISD
0x02E4       [2]    TRISG
0x0300       [2]    C1RXF0SID
0x0308       [2]    C1RXF1SID
0x0310       [2]    C1RXF2SID
0x0318       [2]    C1RXF3SID
0x0320       [2]    C1RXF4SID
0x0328       [2]    C1RXF5SID
0x0330       [2]    C1RXM0SID
0x0338       [2]    C1RXM1SID
0x0340       [2]    C1TX2SID
0x034E       [2]    C1TX2CON
0x0350       [2]    C1TX1SID
0x035E       [2]    C1TX1CON
0x0360       [2]    C1TX0SID
0x036E       [2]    C1TX0CON
0x0370       [2]    C1RX1SID
0x037E       [2]    C1RX1CON
0x0380       [2]    C1RX0SID
0x038E       [2]    C1RX0CON
0x0014       [2]    FARG___Lib_CAN_12_CAN1IDToRegs_ptr
0x0016       [4]    FARG___Lib_CAN_12_CAN1IDToRegs_val
0x001A       [2]    FARG___Lib_CAN_12_CAN1IDToRegs_RegType
0x0014       [2]    FARG_CAN1SetMask_CAN_MASK
0x0016       [4]    FARG_CAN1SetMask_val
0x001A       [2]    FARG_CAN1SetMask_CAN_CONFIG_FLAGS
0x0014       [2]    FARG_CAN1SetFilter_CAN_FILTER
0x0016       [4]    FARG_CAN1SetFilter_val
0x001A       [2]    FARG_CAN1SetFilter_CAN_CONFIG_FLAGS
0x0014       [1]    FARG_setInterruptPriority_device
0x0016       [1]    FARG_setInterruptPriority_priority
0x0014       [4]    FARG_getTimerPrescaler_timePeriod
0x0014       [2]    FARG_CAN1SetBaudRate_SJW
0x0016       [2]    FARG_CAN1SetBaudRate_BRP
0x0018       [2]    FARG_CAN1SetBaudRate_PHSEG1
0x001A       [2]    FARG_CAN1SetBaudRate_PHSEG2
0x0014       [1]    FARG_ClutchMotor_setPosition_percentage
0x0014       [4]    FARG_getTimerPeriod_timePeriod
0x0018       [1]    FARG_getTimerPeriod_prescalerIndex
0x0014       [2]    FARG_CAN1SetOperationMode_mode
0x0016       [2]    FARG_CAN1SetOperationMode_WAIT
0x0014       [2]    FARG___Lib_CAN_12_RegsToCAN1ID_ptr
0x0016       [2]    FARG___Lib_CAN_12_RegsToCAN1ID_CAN_CONFIG_FLAGS
0x0014       [1]    FARG_Clutch_set_percentage
0x0014       [1]    FARG_Gearshift_get_time_step
0x0014       [2]    FARG_GearShift_setMsTicks_A_ticks
0x0014       [1]    FARG_dSignalLed_unset_led
0x0014       [1]    FARG_setTimer_device
0x0016       [4]    FARG_setTimer_timePeriod
0x0014       [2]    FARG_CAN1Initialize_SJW
0x0016       [2]    FARG_CAN1Initialize_BRP
0x0018       [2]    FARG_CAN1Initialize_PHSEG1
0x001A       [2]    FARG_CAN1Initialize_PHSEG2
0x0014       [2]    FARG_Can_setWritePriority_txPriority
0x0014       [1]    FARG_GearShift_setNextStep_A_step
0x0014       [1]    FARG_Can_addByteToWritePacket_dataOut
0x0014       [4]    FARG_CAN1Write_id
0x0018       [2]    FARG_CAN1Write_Data_
0x001A       [2]    FARG_CAN1Write_DataLen
0x0014       [2]    FARG_GearShift_setNeutral_command
0x0014       [4]    FARG_Can_write_id
0x0014       [2]    FARG_Can_addIntToWritePacket_dataOut
0x0014       [2]    FARG_GearShift_shift_command
0x0014       [2]    FARG_sendUpdatesSW_valCode
0x0014       [2]    FARG_CAN1Read_id
0x0016       [2]    FARG_CAN1Read_data_
0x0018       [2]    FARG_CAN1Read_dataLen
0x001A       [2]    FARG_CAN1Read_CAN_RX_MSG_FLAGS
0x0014       [2]    FARG_GearShift_injectCommand_command
0x0014       [1]    FARG_aac_updateExternValue_id
0x0016       [2]    FARG_aac_updateExternValue_value
0x0014       [2]    FARG_GearShift_setCurrentGear_gear
0x0014       [1]    FARG_dSignalLed_switch_led
0x0014       [1]    FARG_Clutch_setBiased_value
0x0014       [2]    FARG_Can_read_id
0x0016       [2]    FARG_Can_read_dataBuffer
0x0018       [2]    FARG_Can_read_dataLength
0x001A       [2]    FARG_Can_read_inFlags
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x8000       [2]    ?ICS_can_txPriority
0x8002       [2]    ?ICS_buzzer_ticks
0x8004       [2]    ?ICS_can_dataOutLength
0x8006       [2]    ?ICS_timer1_counter3
0x8008       [2]    ?ICS_accelerationFb
0x800A       [8]    _PRESCALER_VALUES
0x8012       [2]    ?ICS_can_err
0x8014       [2]    ?ICS_timer1_counter1
0x8016       [2]    ?ICS_timer1_counter0
0x8018       [1]    ?ICS_bello
0x8019       [1]    ?ICS_Clutch_currentValue
0x801A       [2]    ?ICS_timer1_counter2
0x801C       [2]    ?ICS_timer1_aac_counter
0x801E       [2]    ?ICS_timer1_counter4
//** Label List: ** 
//----------------------------------------------
  L_aac_execute0
  L_aac_execute1
  L_aac_execute2
  L_aac_execute3
  L_aac_execute4
  L_aac_execute5
  L_aac_execute6
  L_aac_execute7
  L_aac_execute8
  L_aac_execute9
  L_aac_execute10
  L_aac_execute11
  L_aac_execute12
  L_aac_execute13
  L_aac_execute14
  L_aac_execute15
  L_aac_stop16
  L_aac_updateExternValue17
  L_aac_getParam18
  L_aac_getExternValue19
  L__aac_execute20
  L__aac_execute21
  L__aac_execute22
  L__aac_execute23
  L__aac_execute24
  L__aac_execute25
  L_end_getAccelerationFb
  _getAccelerationFb
  L_end_aac_init
  _aac_init
  L_end_aac_execute
  _aac_execute
  L__aac_execute29
  L__aac_execute30
  L__aac_execute31
  L__aac_execute32
  L__aac_execute33
  L__aac_execute34
  L__aac_execute35
  L__aac_execute36
  L__aac_execute37
  L__aac_execute38
  L__aac_execute39
  L_end_aac_loadDefaultParams
  _aac_loadDefaultParams
  L_end_aac_stop
  _aac_stop
  L__aac_stop42
  L_end_aac_updateExternValue
  _aac_updateExternValue
  L__aac_updateExternValue44
  L_end_aac_getParam
  _aac_getParam
  L__aac_getParam46
  L_end_aac_getExternValue
  _aac_getExternValue
  L__aac_getExternValue48
  L_Buzzer_tick0
  L_Buzzer_tick1
  L_end_timer4_interrupt
  _timer4_interrupt
  L_end_Buzzer_init
  _Buzzer_init
  L_end_Buzzer_tick
  _Buzzer_tick
  L__Buzzer_tick5
  L_end_Buzzer_Bip
  _Buzzer_Bip
  L_Can_init0
  L_Can_read2
  L_Can_read3
  L_Can_read4
  L_Can_write5
  L_Can_write6
  L_Can_write7
  L_Can_write8
  L_Can_write9
  L_Can_write10
  L_Can_resetWritePacket11
  L_Can_resetWritePacket12
  L_Can_resetWritePacket13
  L__Can_write14
  L__Can_write15
  L__Can_write16
  L_end_Can_init
  _Can_init
  L_end_Can_read
  _Can_read
  L__Can_read19
  L__Can_read20
  L_end_Can_writeByte
  _Can_writeByte
  L_end_Can_writeInt
  _Can_writeInt
  L_end_Can_addIntToWritePacket
  _Can_addIntToWritePacket
  L_end_Can_addByteToWritePacket
  _Can_addByteToWritePacket
  L_end_Can_write
  _Can_write
  L__Can_write26
  L__Can_write27
  L__Can_write28
  L_end_Can_setWritePriority
  _Can_setWritePriority
  L_end_Can_resetWritePacket
  _Can_resetWritePacket
  L__Can_resetWritePacket31
  L_end_Can_getWriteFlags
  _Can_getWriteFlags
  L_end_Can_B0hasBeenReceived
  _Can_B0hasBeenReceived
  L__Can_B0hasBeenReceived34
  L_end_Can_B1hasBeenReceived
  _Can_B1hasBeenReceived
  L__Can_B1hasBeenReceived36
  L_end_Can_clearB0Flag
  _Can_clearB0Flag
  L_end_Can_clearB1Flag
  _Can_clearB1Flag
  L_end_Can_clearInterrupt
  _Can_clearInterrupt
  L_end_Can_initInterrupt
  _Can_initInterrupt
  L_ClutchMotor_setPosition0
  L_ClutchMotor_setPosition1
  L_ClutchMotor_setPosition2
  L__ClutchMotor_setPosition3
  L_end_timer2_interrupt
  _timer2_interrupt
  L_end_ClutchMotor_init
  _ClutchMotor_init
  L_end_ClutchMotor_setupPWM
  _ClutchMotor_setupPWM
  L_end_ClutchMotor_setPosition
  _ClutchMotor_setPosition
  L__ClutchMotor_setPosition8
  L__ClutchMotor_setPosition9
  L_setInterruptPriority0
  L_setInterruptPriority1
  L_setInterruptPriority2
  L_setInterruptPriority3
  L_setInterruptPriority4
  L_setInterruptPriority5
  L_setInterruptPriority6
  L_setInterruptPriority7
  L_setInterruptPriority8
  L_setInterruptPriority9
  L_setExternalInterrupt10
  L_setExternalInterrupt11
  L_setExternalInterrupt12
  L_setExternalInterrupt13
  L_setExternalInterrupt14
  L_setExternalInterrupt15
  L_setExternalInterrupt16
  L_switchExternalInterruptEdge17
  L_switchExternalInterruptEdge18
  L_switchExternalInterruptEdge19
  L_switchExternalInterruptEdge20
  L_switchExternalInterruptEdge21
  L_switchExternalInterruptEdge22
  L_switchExternalInterruptEdge23
  L_switchExternalInterruptEdge24
  L_switchExternalInterruptEdge25
  L_switchExternalInterruptEdge26
  L_switchExternalInterruptEdge27
  L_switchExternalInterruptEdge28
  L_switchExternalInterruptEdge29
  L_switchExternalInterruptEdge30
  L_switchExternalInterruptEdge31
  L_getExternalInterruptEdge32
  L_getExternalInterruptEdge33
  L_getExternalInterruptEdge34
  L_getExternalInterruptEdge35
  L_getExternalInterruptEdge36
  L_getExternalInterruptEdge37
  L_getExternalInterruptEdge38
  L_clearExternalInterrupt39
  L_clearExternalInterrupt40
  L_clearExternalInterrupt41
  L_clearExternalInterrupt42
  L_clearExternalInterrupt43
  L_clearExternalInterrupt44
  L_clearExternalInterrupt45
  L_setTimer46
  L_setTimer47
  L_setTimer48
  L_setTimer49
  L_setTimer50
  L_clearTimer51
  L_clearTimer52
  L_clearTimer53
  L_clearTimer54
  L_clearTimer55
  L_turnOnTimer56
  L_turnOnTimer57
  L_turnOnTimer58
  L_turnOnTimer59
  L_turnOnTimer60
  L_turnOffTimer61
  L_turnOffTimer62
  L_turnOffTimer63
  L_turnOffTimer64
  L_turnOffTimer65
  L_getTimerPrescaler66
  L_getTimerPrescaler67
  L_getTimerPrescaler68
  L_getTimerPrescaler69
  L_end_setAllPinAsDigital
  _setAllPinAsDigital
  L_end_setInterruptPriority
  _setInterruptPriority
  L__setInterruptPriority72
  L__setInterruptPriority73
  L__setInterruptPriority74
  L__setInterruptPriority75
  L__setInterruptPriority76
  L__setInterruptPriority77
  L__setInterruptPriority78
  L_end_setExternalInterrupt
  _setExternalInterrupt
  L__setExternalInterrupt80
  L__setExternalInterrupt81
  L__setExternalInterrupt82
  L__setExternalInterrupt83
  L_end_switchExternalInterruptEdge
  _switchExternalInterruptEdge
  L__switchExternalInterruptEdge85
  L__switchExternalInterruptEdge86
  L__switchExternalInterruptEdge87
  L__switchExternalInterruptEdge88
  L_end_getExternalInterruptEdge
  _getExternalInterruptEdge
  L__getExternalInterruptEdge90
  L__getExternalInterruptEdge91
  L__getExternalInterruptEdge92
  L__getExternalInterruptEdge93
  L_end_clearExternalInterrupt
  _clearExternalInterrupt
  L__clearExternalInterrupt95
  L__clearExternalInterrupt96
  L__clearExternalInterrupt97
  L__clearExternalInterrupt98
  L_end_setTimer
  _setTimer
  L__setTimer100
  L__setTimer101
  L__setTimer102
  L_end_clearTimer
  _clearTimer
  L__clearTimer104
  L__clearTimer105
  L__clearTimer106
  L_end_turnOnTimer
  _turnOnTimer
  L__turnOnTimer108
  L__turnOnTimer109
  L__turnOnTimer110
  L_end_turnOffTimer
  _turnOffTimer
  L__turnOffTimer112
  L__turnOffTimer113
  L__turnOffTimer114
  L_end_getTimerPeriod
  _getTimerPeriod
  L_end_getTimerPrescaler
  _getTimerPrescaler
  L__getTimerPrescaler117
  L__getTimerPrescaler118
  L_end_getExactTimerPrescaler
  _getExactTimerPrescaler
  L_end_setupAnalogSampling
  _setupAnalogSampling
  L_end_turnOnAnalogModule
  _turnOnAnalogModule
  L_end_turnOffAnalogModule
  _turnOffAnalogModule
  L_end_startSampling
  _startSampling
  L_end_getAnalogValue
  _getAnalogValue
  L_end_setAnalogPIN
  _setAnalogPIN
  L_end_unsetAnalogPIN
  _unsetAnalogPIN
  L_end_setAnalogInterrupt
  _setAnalogInterrupt
  L_end_unsetAnalogInterrupt
  _unsetAnalogInterrupt
  L_end_clearAnalogInterrupt
  _clearAnalogInterrupt
  L_end_setAutomaticSampling
  _setAutomaticSampling
  L_end_unsetAutomaticSampling
  _unsetAutomaticSampling
  L_end_setAnalogVoltageReference
  _setAnalogVoltageReference
  L_end_setAnalogDataOutputFormat
  _setAnalogDataOutputFormat
  L_end_getMinimumAnalogClockConversion
  _getMinimumAnalogClockConversion
  L_main0
  L_main1
  L_timer1_interrupt2
  L_timer1_interrupt3
  L_timer1_interrupt4
  L_timer1_interrupt5
  L_timer1_interrupt6
  L_timer1_interrupt7
  L_CAN_Interrupt8
  L_CAN_Interrupt9
  L_CAN_Interrupt10
  L_CAN_Interrupt11
  L_CAN_Interrupt12
  L_CAN_Interrupt13
  L_CAN_Interrupt14
  L_CAN_Interrupt15
  L_CAN_Interrupt16
  L_CAN_Interrupt17
  L_CAN_Interrupt18
  L_CAN_Interrupt19
  L_CAN_Interrupt20
  L_CAN_Interrupt21
  L_CAN_Interrupt22
  L_CAN_Interrupt23
  L_CAN_Interrupt24
  L_CAN_Interrupt25
  L_CAN_Interrupt26
  L_CAN_Interrupt27
  L_CAN_Interrupt28
  L_CAN_Interrupt29
  L_CAN_Interrupt30
  L_CAN_Interrupt31
  L_CAN_Interrupt32
  L_CAN_Interrupt33
  L_CAN_Interrupt34
  L_CAN_Interrupt35
  L_CAN_Interrupt36
  L_CAN_Interrupt37
  L_CAN_Interrupt38
  L_CAN_Interrupt39
  L_CAN_Interrupt40
  L_CAN_Interrupt41
  L_CAN_Interrupt42
  L_CAN_Interrupt43
  L__CAN_Interrupt44
  L__CAN_Interrupt45
  L__CAN_Interrupt46
  L__CAN_Interrupt47
  L__CAN_Interrupt48
  L__CAN_Interrupt49
  L__CAN_Interrupt50
  L__CAN_Interrupt51
  L__CAN_Interrupt52
  L__CAN_Interrupt53
  L__CAN_Interrupt54
  L__CAN_Interrupt55
  L__CAN_Interrupt56
  L__CAN_Interrupt57
  L__CAN_Interrupt58
  L__CAN_Interrupt59
  L__CAN_Interrupt60
  L__CAN_Interrupt61
  L_end_GCU_isAlive
  _GCU_isAlive
  L_end_init
  _init
  L_end_main
  _main
  L__main_end_loop
  L_end_timer1_interrupt
  _timer1_interrupt
  L__timer1_interrupt67
  L__timer1_interrupt68
  L__timer1_interrupt69
  L__timer1_interrupt70
  L__timer1_interrupt71
  L__timer1_interrupt72
  L_end_CAN_Interrupt
  _CAN_Interrupt
  L__CAN_Interrupt74
  L__CAN_Interrupt75
  L__CAN_Interrupt76
  L__CAN_Interrupt77
  L__CAN_Interrupt78
  L__CAN_Interrupt79
  L__CAN_Interrupt80
  L__CAN_Interrupt81
  L__CAN_Interrupt82
  L__CAN_Interrupt83
  L__CAN_Interrupt84
  L__CAN_Interrupt85
  L__CAN_Interrupt86
  L__CAN_Interrupt87
  L__CAN_Interrupt88
  L__CAN_Interrupt89
  L__CAN_Interrupt90
  L__CAN_Interrupt91
  L__CAN_Interrupt92
  L__CAN_Interrupt93
  L__CAN_Interrupt94
  L__CAN_Interrupt95
  L__CAN_Interrupt96
  L__CAN_Interrupt97
  L__CAN_Interrupt98
  L__CAN_Interrupt99
  L__CAN_Interrupt100
  L_dSignalLed_switch0
  L_dSignalLed_switch1
  L_dSignalLed_switch2
  L_dSignalLed_set3
  L_dSignalLed_set4
  L_dSignalLed_set5
  L_dSignalLed_unset6
  L_dSignalLed_unset7
  L_dSignalLed_unset8
  L_end_dSignalLed_init
  _dSignalLed_init
  L_end_dSignalLed_switch
  _dSignalLed_switch
  L__dSignalLed_switch11
  L_end_dSignalLed_set
  _dSignalLed_set
  L__dSignalLed_set13
  L_end_dSignalLed_unset
  _dSignalLed_unset
  L__dSignalLed_unset15
  L_end_Efi_init
  _Efi_init
  L_end_Efi_setCut
  _Efi_setCut
  L_end_Efi_unsetCut
  _Efi_unsetCut
  L_end_Efi_setBlip
  _Efi_setBlip
  L_end_Efi_unsetBlip
  _Efi_unsetBlip
  L_end_Efi_setRPMLimiter
  _Efi_setRPMLimiter
  L_end_Efi_unsetRPMLimiter
  _Efi_unsetRPMLimiter
  L_EngineControl_isStarting0
  L_EngineControl_isStarting1
  L_end_EngineControl_init
  _EngineControl_init
  L_end_EngineControl_keyOn
  _EngineControl_keyOn
  L_end_EngineControl_keyOff
  _EngineControl_keyOff
  L_end_EngineControl_start
  _EngineControl_start
  L_end_EngineControl_stop
  _EngineControl_stop
  L_end_EngineControl_resetStartCheck
  _EngineControl_resetStartCheck
  L_end_EngineControl_isStarting
  _EngineControl_isStarting
  L__EngineControl_isStarting9
  L_end_GearMotor_init
  _GearMotor_init
  L_end_GearMotor_turnLeft
  _GearMotor_turnLeft
  L_end_GearMotor_turnRight
  _GearMotor_turnRight
  L_end_GearMotor_brake
  _GearMotor_brake
  L_end_GearMotor_release
  _GearMotor_release
  L_GearShift_setCurrentGear0
  L_GearShift_injectCommand1
  L_GearShift_injectCommand2
  L_GearShift_injectCommand3
  L_GearShift_injectCommand4
  L_GearShift_injectCommand5
  L_GearShift_injectCommand6
  L_GearShift_injectCommand7
  L_GearShift_injectCommand8
  L_GearShift_injectCommand9
  L_GearShift_injectCommand10
  L_GearShift_injectCommand11
  L_GearShift_shift12
  L_GearShift_shift13
  L_GearShift_shift14
  L_GearShift_shift15
  L_GearShift_setNeutral16
  L_GearShift_setNeutral17
  L_GearShift_setNeutral18
  L_GearShift_up19
  L_GearShift_down20
  L_GearShift_isShifting21
  L_GearShift_isShifting22
  L_GearShift_checkUp23
  L_GearShift_nextStep_A24
  L_GearShift_nextStep_A25
  L_GearShift_nextStep_A26
  L_GearShift_nextStep_A27
  L_GearShift_nextStep_A28
  L_GearShift_nextStep_A29
  L_GearShift_nextStep_A30
  L_GearShift_nextStep_A31
  L_GearShift_nextStep_A32
  L_GearShift_nextStep_A33
  L_GearShift_nextStep_A34
  L_GearShift_nextStep_A35
  L_GearShift_nextStep_A36
  L_GearShift_nextStep_A37
  L_GearShift_nextStep_A38
  L_GearShift_nextStep_A39
  L_GearShift_nextStep_A40
  L_GearShift_nextStep_A41
  L_GearShift_nextStep_A42
  L_GearShift_nextStep_A43
  L_GearShift_nextStep_A44
  L_GearShift_nextStep_A45
  L_GearShift_nextStep_A46
  L_GearShift_nextStep_A47
  L_GearShift_nextStep_A48
  L_GearShift_nextStep_A49
  L_GearShift_nextStep_B50
  L_GearShift_nextStep_B51
  L_GearShift_nextStep_B52
  L_GearShift_msTick53
  L_GearShift_msTick54
  L_GearShift_msTick55
  L_GearShift_msTick56
  L_GearShift_msTick57
  L_GearShift_msTick58
  L_Gearshift_get_time59
  L_Gearshift_get_time60
  L_Gearshift_get_time61
  L_Gearshift_get_time62
  L_Gearshift_get_time63
  L_Gearshift_get_time64
  L_Gearshift_get_time65
  L_Gearshift_get_time66
  L_Gearshift_get_time67
  L_Gearshift_get_time68
  L_Gearshift_get_time69
  L_Gearshift_get_time70
  L_Gearshift_get_time71
  L_Gearshift_get_time72
  L_Gearshift_get_time73
  L_Gearshift_get_time74
  L_Gearshift_get_time75
  L_Gearshift_get_time76
  L_Gearshift_get_time77
  L_Gearshift_get_time78
  L_Gearshift_get_time79
  L_Gearshift_get_time80
  L_Gearshift_get_time81
  L_Gearshift_get_time82
  L_Gearshift_get_time83
  L_Gearshift_get_time84
  L_Gearshift_get_time85
  L__GearShift_nextStep_A86
  L__GearShift_nextStep_A87
  L__GearShift_nextStep_A88
  L__GearShift_nextStep_A89
  L__GearShift_nextStep_A90
  L__GearShift_nextStep_A91
  L__GearShift_injectCommand92
  L__GearShift_injectCommand93
  L__GearShift_injectCommand94
  L__GearShift_injectCommand95
  L__GearShift_injectCommand96
  L__GearShift_injectCommand97
  L_end_GearShift_init
  _GearShift_init
  L_end_GearShift_setCurrentGear
  _GearShift_setCurrentGear
  L__GearShift_setCurrentGear100
  L_end_GearShift_injectCommand
  _GearShift_injectCommand
  L__GearShift_injectCommand102
  L__GearShift_injectCommand103
  L__GearShift_injectCommand104
  L__GearShift_injectCommand105
  L__GearShift_injectCommand106
  L__GearShift_injectCommand107
  L_end_GearShift_shift
  _GearShift_shift
  L__GearShift_shift109
  L__GearShift_shift110
  L__GearShift_shift111
  L_end_GearShift_setNeutral
  _GearShift_setNeutral
  L__GearShift_setNeutral113
  L__GearShift_setNeutral114
  L_end_GearShift_up
  _GearShift_up
  L__GearShift_up116
  L_end_GearShift_down
  _GearShift_down
  L__GearShift_down118
  L_end_GearShift_isShifting
  _GearShift_isShifting
  L__GearShift_isShifting120
  L__GearShift_isShifting121
  L_end_GearShift_setNextStep_A
  _GearShift_setNextStep_A
  L_end_GearShift_setNextStep_B
  _GearShift_setNextStep_B
  L_end_GearShift_checkUp
  _GearShift_checkUp
  L__GearShift_checkUp125
  L_end_GearShift_nextStep_A
  _GearShift_nextStep_A
  L__GearShift_nextStep_A127
  L__GearShift_nextStep_A128
  L__GearShift_nextStep_A129
  L__GearShift_nextStep_A130
  L__GearShift_nextStep_A131
  L__GearShift_nextStep_A132
  L__GearShift_nextStep_A133
  L__GearShift_nextStep_A134
  L__GearShift_nextStep_A135
  L__GearShift_nextStep_A136
  L__GearShift_nextStep_A137
  L__GearShift_nextStep_A138
  L__GearShift_nextStep_A139
  L__GearShift_nextStep_A140
  L__GearShift_nextStep_A141
  L__GearShift_nextStep_A142
  L__GearShift_nextStep_A143
  L__GearShift_nextStep_A144
  L__GearShift_nextStep_A145
  L_end_GearShift_nextStep_B
  _GearShift_nextStep_B
  L_end_GearShift_setMsTicks_A
  _GearShift_setMsTicks_A
  L_end_GearShift_setMsTicks_B
  _GearShift_setMsTicks_B
  L_end_GearShift_msTick
  _GearShift_msTick
  L__GearShift_msTick150
  L__GearShift_msTick151
  L__GearShift_msTick152
  L__GearShift_msTick153
  L_end_Gearshift_get_time
  _Gearshift_get_time
  L__Gearshift_get_time155
  L__Gearshift_get_time156
  L__Gearshift_get_time157
  L__Gearshift_get_time158
  L__Gearshift_get_time159
  L__Gearshift_get_time160
  L__Gearshift_get_time161
  L__Gearshift_get_time162
  L__Gearshift_get_time163
  L__Gearshift_get_time164
  L__Gearshift_get_time165
  L__Gearshift_get_time166
  L__Gearshift_get_time167
  L__Gearshift_get_time168
  L__Gearshift_get_time169
  L__Gearshift_get_time170
  L__Gearshift_get_time171
  L__Gearshift_get_time172
  L__Gearshift_get_time173
  L__Gearshift_get_time174
  L_end_GearShift_loadDefaultTimings
  _GearShift_loadDefaultTimings
  L_StopLight_setBrightness0
  L_StopLight_setBrightness1
  L_StopLight_setBrightness2
  L__StopLight_setBrightness3
  L_end_StopLight_init
  _StopLight_init
  L_end_StopLight_setupPWM
  _StopLight_setupPWM
  L_end_StopLight_setBrightness
  _StopLight_setBrightness
  L__StopLight_setBrightness7
  L__StopLight_setBrightness8
  L___Lib_CAN_12_CAN1IDToRegs0
  L___Lib_CAN_12_CAN1IDToRegs1
  L___Lib_CAN_12_CAN1IDToRegs2
  L___Lib_CAN_12_CAN1IDToRegs3
  L___Lib_CAN_12_CAN1IDToRegs4
  L___Lib_CAN_12_CAN1IDToRegs5
  L___Lib_CAN_12_CAN1IDToRegs6
  L___Lib_CAN_12_CAN1IDToRegs7
  L___Lib_CAN_12_CAN1IDToRegs8
  L___Lib_CAN_12_CAN1IDToRegs9
  L___Lib_CAN_12_CAN1IDToRegs10
  L___Lib_CAN_12_CAN1IDToRegs11
  L___Lib_CAN_12_CAN1IDToRegs12
  L_CAN1SetOperationMode13
  L_CAN1SetOperationMode14
  L_CAN1SetOperationMode15
  L_CAN1SetOperationMode16
  L_CAN1SetBaudRate17
  L_CAN1SetBaudRate18
  L_CAN1SetBaudRate19
  L_CAN1SetMask20
  L_CAN1SetMask21
  L_CAN1SetFilter22
  L_CAN1SetFilter23
  L_CAN1SetFilter24
  L_CAN1SetFilter25
  L_CAN1SetFilter26
  L_CAN1SetFilter27
  L_CAN1SetFilter28
  L_CAN1SetFilter29
  L___Lib_CAN_12_RegsToCAN1ID30
  L___Lib_CAN_12_RegsToCAN1ID31
  L_CAN1Write32
  L_CAN1Write33
  L_CAN1Write34
  L_CAN1Write35
  L_CAN1Write36
  L_CAN1Write37
  L_CAN1Write38
  L_CAN1Write39
  L_CAN1Write40
  L_CAN1Write41
  L_CAN1Write42
  L_CAN1Read43
  L_CAN1Read44
  L_CAN1Read45
  L_CAN1Read46
  L_CAN1Read47
  L_CAN1Read48
  L_CAN1Read49
  L_CAN1Read50
  L_CAN1Read51
  L_CAN1Read52
  L_CAN1Read53
  L_CAN1Read54
  L_CAN1Read55
  L_CAN1Read56
  L_CAN1Read57
  L_CAN1Read58
  L_CAN1Initialize59
  L_CAN1Initialize60
  L_CAN1Initialize61
  L_CAN1Initialize62
  L_CAN1Initialize63
  L___Lib_CAN_12_CAN2IDToRegs64
  L___Lib_CAN_12_CAN2IDToRegs65
  L___Lib_CAN_12_CAN2IDToRegs66
  L___Lib_CAN_12_CAN2IDToRegs67
  L___Lib_CAN_12_CAN2IDToRegs68
  L___Lib_CAN_12_CAN2IDToRegs69
  L___Lib_CAN_12_CAN2IDToRegs70
  L___Lib_CAN_12_CAN2IDToRegs71
  L___Lib_CAN_12_CAN2IDToRegs72
  L___Lib_CAN_12_CAN2IDToRegs73
  L___Lib_CAN_12_CAN2IDToRegs74
  L___Lib_CAN_12_CAN2IDToRegs75
  L___Lib_CAN_12_CAN2IDToRegs76
  L_CAN2SetOperationMode77
  L_CAN2SetOperationMode78
  L_CAN2SetOperationMode79
  L_CAN2SetOperationMode80
  L_CAN2SetBaudRate81
  L_CAN2SetBaudRate82
  L_CAN2SetBaudRate83
  L_CAN2SetMask84
  L_CAN2SetMask85
  L_CAN2SetFilter86
  L_CAN2SetFilter87
  L_CAN2SetFilter88
  L_CAN2SetFilter89
  L_CAN2SetFilter90
  L_CAN2SetFilter91
  L_CAN2SetFilter92
  L_CAN2SetFilter93
  L___Lib_CAN_12_RegsToCAN2ID94
  L___Lib_CAN_12_RegsToCAN2ID95
  L_CAN2Write96
  L_CAN2Write97
  L_CAN2Write98
  L_CAN2Write99
  L_CAN2Write100
  L_CAN2Write101
  L_CAN2Write102
  L_CAN2Write103
  L_CAN2Write104
  L_CAN2Write105
  L_CAN2Write106
  L_CAN2Read107
  L_CAN2Read108
  L_CAN2Read109
  L_CAN2Read110
  L_CAN2Read111
  L_CAN2Read112
  L_CAN2Read113
  L_CAN2Read114
  L_CAN2Read115
  L_CAN2Read116
  L_CAN2Read117
  L_CAN2Read118
  L_CAN2Read119
  L_CAN2Read120
  L_CAN2Read121
  L_CAN2Read122
  L_CAN2Initialize123
  L_CAN2Initialize124
  L_CAN2Initialize125
  L_CAN2Initialize126
  L_CAN2Initialize127
  L_end_CAN1IDToRegs
  __Lib_CAN_12_CAN1IDToRegs
  L___Lib_CAN_12_CAN1IDToRegs129
  L___Lib_CAN_12_CAN1IDToRegs130
  L___Lib_CAN_12_CAN1IDToRegs131
  L_end_CAN1SetOperationMode
  _CAN1SetOperationMode
  L__CAN1SetOperationMode133
  L__CAN1SetOperationMode134
  L_end_CAN1GetOperationMode
  _CAN1GetOperationMode
  L_end_CAN1SetBaudRate
  _CAN1SetBaudRate
  L_end_CAN1SetMask
  _CAN1SetMask
  L__CAN1SetMask138
  L_end_CAN1SetFilter
  _CAN1SetFilter
  L__CAN1SetFilter140
  L__CAN1SetFilter141
  L__CAN1SetFilter142
  L__CAN1SetFilter143
  L__CAN1SetFilter144
  L_end_RegsToCAN1ID
  __Lib_CAN_12_RegsToCAN1ID
  L_end_CAN1Write
  _CAN1Write
  L__CAN1Write147
  L_end_CAN1Read
  _CAN1Read
  L__CAN1Read149
  L__CAN1Read150
  L__CAN1Read151
  L_end_CAN1Initialize
  _CAN1Initialize
  L__CAN1Initialize153
  L_end_CAN2IDToRegs
  __Lib_CAN_12_CAN2IDToRegs
  L___Lib_CAN_12_CAN2IDToRegs155
  L___Lib_CAN_12_CAN2IDToRegs156
  L___Lib_CAN_12_CAN2IDToRegs157
  L_end_CAN2SetOperationMode
  _CAN2SetOperationMode
  L__CAN2SetOperationMode159
  L__CAN2SetOperationMode160
  L_end_CAN2GetOperationMode
  _CAN2GetOperationMode
  L_end_CAN2SetBaudRate
  _CAN2SetBaudRate
  L_end_CAN2SetMask
  _CAN2SetMask
  L__CAN2SetMask164
  L_end_CAN2SetFilter
  _CAN2SetFilter
  L__CAN2SetFilter166
  L__CAN2SetFilter167
  L__CAN2SetFilter168
  L__CAN2SetFilter169
  L__CAN2SetFilter170
  L_end_RegsToCAN2ID
  __Lib_CAN_12_RegsToCAN2ID
  L_end_CAN2Write
  _CAN2Write
  L__CAN2Write173
  L_end_CAN2Read
  _CAN2Read
  L__CAN2Read175
  L__CAN2Read176
  L__CAN2Read177
  L_end_CAN2Initialize
  _CAN2Initialize
  L__CAN2Initialize179
  Float__fpack
  the_end_Float__fpack
  Float_notsubnormal
  Float_zerosig
  Float_subnormal
  Float_packupandgo
  Float_overflow
  LL_intro_Long2Float
  the_end__Long2Float
  Longint2Float__floatsisf
  Longword2Float__floatuisf
  Long2Float_notspecial
  Long2Float_return0
  Longint2Float_negative
  Long2Float_fixshift
  Long2Float_round
  Long2Float_shiftleft
  Long2Float_shiftright
  Long2Float__fpack
  Long2Float_notsubnormal
  Long2Float_zerosig
  Long2Float_subnormal
  Long2Float_packupandgo
  Long2Float_overflow
  Longlong2Float_floatdisf
  the_end__LongLong2Float
  Longlong2Float_negative
  Longlong2Float_notspecial
  Longlong2Float_return0
  Longlong2Float_fixshift
  Longlong2Float_round
  Longlong2Float_shiftleft
  Longlong2Float_shiftright
  Float2Longword_fixunssfsi
  the_end__Float2Longword
  Float2Longword_funpack
  Float2Longword_returnzero
  Float2Longword_exit
  Float2Longword_shiftright
  Float2Longword_shiftleft
  Float2Longword_shiftrightloop
  Float2Longword_zeroorsub
  Float2Longword_nanorinf
  Float2Longword_finitereturn
  Float2Longword_infinite
  Float2Longword_subnormal
  Float2Longword_normalize
  Float2Longint__fixsfsi
  the_end__Float2Longint
  Float2Longint__funpack
  Float2Longint_setsign
  Float2Longint_shiftright
  Float2Longint_shiftleft
  Float2Longint_exit
  Float2Longint_shiftrightloop
  Float2Longint_zeroorsub
  Float2Longint_nanorinf
  Float2Longint_finitereturn
  Float2Longint_infinite
  Float2Longint_subnormal
  Float2Longint_normalize
  AddSubFP__addsf3
  the_end__AddSub_FP
  AddSubFP__funpack2
  AddSubFP__fPropagateNaN
  AddSubFP_aisinfinite
  AddSubFP_checkspecialb
  AddSubFP_return2_3
  AddSubFP_getsign
  AddSubFP_gotsign
  AddSubFP_expcanonical
  AddSubFP_nonegate
  AddSubFP_aligniter
  AddSubFP_signoff
  AddSubFP_align
  AddSubFP_aligned
  AddSubFP_normalizesum
  AddSubFP_checknormal
  AddSubFP_round
  AddSubFP_discardguard
  AddSubFP_underflow
  AddSubFP_normalizeloop
  AddSubFP_normalizeexit
  AddSubFP_normalizetest
  AddSubFP__fpack
  AddSubFP__fbopExit
  AddSubFP_return8_3
  AddSubFP__fbopReturnNaN
  AddSubFP__funpack
  AddSubFP_return0_1
  AddSubFP_return8_1
  AddSubFP_notsubnormal_1
  AddSubFP_zerosig
  AddSubFP_subnormal_1
  AddSubFP_packupandgo
  AddSubFP_overflow
  AddSubFP_zeroorsub
  AddSubFP_nanorinf
  AddSubFP_finitereturn
  AddSubFP_infinite
  AddSubFP_subnormal_2
  AddSubFP_normalize
  MulFP___mulsf3
  the_end__Mul_FP
  MulFP__funpack2
  MulFP__fPropagateNaN
  MulFP_aisinfinite
  MulFP_bisinfinite
  MulFP_return8_1
  MulFP_return2_1
  MulFP_formsticky
  MulFP_formRandSig
  MulFP__fpack
  MulFP_return0_1
  MulFP__fbopExit
  MulFP__fbopReturnNaN
  MulFP__funpack
  MulFP_return0_2
  MulFP_return8_2
  MulFP_notsubnormal
  MulFP_zerosig
  MulFP_subnormal1
  MulFP_packupandgo
  MulFP_overflow
  MulFP_zeroorsub
  MulFP_nanorinf
  MulFP_finitereturn
  MulFP_infinite
  MulFP_subnormal2
  MulFP_normalize
  DivFP___divsf3
  the_end__Div_FP
  DivFP__funpack2
  DivFP__fPropagateNaN
  DivFP_aisinfinite
  DivFP_returnZero
  DivFP_aiszero
  DivFP_returnInf
  DivFP_finitenonzero
  DivFP_diventry
  DivFP_divnext
  DivFP_divdone
  DivFP_divloop
  DivFP_stickyok
  DivFP_guardused
  DivFP__fpack
  DivFP_return0_1
  DivFP__fbopExit
  DivFP__fbopReturnNaN
  DivFP_return8_1
  DivFP_return2_1
  DivFP__funpack
  DivFP_return0
  DivFP_return8
  DivFP_notsubnormal
  DivFP_zerosig
  DivFP_subnormal
  DivFP_packupandgo
  DivFP_overfloW
  DivFP_zeroorsub
  DivFP_nanorinf
  DivFP_finitereturn
  DivFP_infinite
  DivFP_subnormal2
  DivFP_normalize
  CompareFp__fcompare
  the_end__Compare_Fp
  CompareFp__funpack2
  CompareFp_exit
  CompareFp_comparemag
  CompareFp_returnEqual
  CompareFp_adjust
  CompareFp__funpack
  CompareFp_zeroorsub
  CompareFp_nanorinf
  CompareFp_finitereturn
  CompareFp_infinite
  CompareFp_subnormal
  CompareFp_normalize
  L_end_Float_fpack
  _Float_fpack
  L_end__Long2Float
  __Long2Float
  L_end__LongLong2Float
  __LongLong2Float
  L_end__Float2Longword
  __Float2Longword
  L_end__Float2Longint
  __Float2Longint
  L_end__AddSub_FP
  __AddSub_FP
  L_end__Sub_FP
  __Sub_FP
  L_end__Mul_FP
  __Mul_FP
  L_end__Div_FP
  __Div_FP
  L_end__Compare_Fp
  __Compare_Fp
  L_end__Compare_Le_Fp
  __Compare_Le_Fp
  L_end__Compare_Ge_Fp
  __Compare_Ge_Fp
  L_aac_execute0
  L_aac_execute1
  L_aac_execute2
  L_aac_execute3
  L_aac_execute4
  L_aac_execute5
  L_aac_execute6
  L_aac_execute7
  L_aac_execute8
  L_aac_execute9
  L_aac_execute10
  L_aac_execute11
  L_aac_execute12
  L_aac_execute13
  L_aac_execute14
  L_aac_execute15
  L_aac_stop16
  L_aac_updateExternValue17
  L_aac_getParam18
  L_aac_getExternValue19
  L__aac_execute20
  L__aac_execute21
  L__aac_execute22
  L__aac_execute23
  L__aac_execute24
  L__aac_execute25
  L_end_getAccelerationFb
  _getAccelerationFb
  L_end_aac_init
  _aac_init
  L_end_aac_execute
  _aac_execute
  L__aac_execute29
  L__aac_execute30
  L__aac_execute31
  L__aac_execute32
  L__aac_execute33
  L__aac_execute34
  L__aac_execute35
  L__aac_execute36
  L__aac_execute37
  L__aac_execute38
  L__aac_execute39
  L_end_aac_loadDefaultParams
  _aac_loadDefaultParams
  L_end_aac_stop
  _aac_stop
  L__aac_stop42
  L_end_aac_updateExternValue
  _aac_updateExternValue
  L__aac_updateExternValue44
  L_end_aac_getParam
  _aac_getParam
  L__aac_getParam46
  L_end_aac_getExternValue
  _aac_getExternValue
  L__aac_getExternValue48
  L_Can_init0
  L_Can_read2
  L_Can_read3
  L_Can_read4
  L_Can_write5
  L_Can_write6
  L_Can_write7
  L_Can_write8
  L_Can_write9
  L_Can_write10
  L_Can_resetWritePacket11
  L_Can_resetWritePacket12
  L_Can_resetWritePacket13
  L__Can_write14
  L__Can_write15
  L__Can_write16
  L_end_Can_init
  _Can_init
  L_end_Can_read
  _Can_read
  L__Can_read19
  L__Can_read20
  L_end_Can_writeByte
  _Can_writeByte
  L_end_Can_writeInt
  _Can_writeInt
  L_end_Can_addIntToWritePacket
  _Can_addIntToWritePacket
  L_end_Can_addByteToWritePacket
  _Can_addByteToWritePacket
  L_end_Can_write
  _Can_write
  L__Can_write26
  L__Can_write27
  L__Can_write28
  L_end_Can_setWritePriority
  _Can_setWritePriority
  L_end_Can_resetWritePacket
  _Can_resetWritePacket
  L__Can_resetWritePacket31
  L_end_Can_getWriteFlags
  _Can_getWriteFlags
  L_end_Can_B0hasBeenReceived
  _Can_B0hasBeenReceived
  L__Can_B0hasBeenReceived34
  L_end_Can_B1hasBeenReceived
  _Can_B1hasBeenReceived
  L__Can_B1hasBeenReceived36
  L_end_Can_clearB0Flag
  _Can_clearB0Flag
  L_end_Can_clearB1Flag
  _Can_clearB1Flag
  L_end_Can_clearInterrupt
  _Can_clearInterrupt
  L_end_Can_initInterrupt
  _Can_initInterrupt
  L_Clutch_set0
  L_Clutch_set1
  L_Clutch_setBiased2
  L_Clutch_setBiased3
  L_end_Clutch_insert
  _Clutch_insert
  L_end_Clutch_release
  _Clutch_release
  L_end_Clutch_set
  _Clutch_set
  L__Clutch_set7
  L_end_Clutch_get
  _Clutch_get
  L_end_Clutch_setBiased
  _Clutch_setBiased
  L__Clutch_setBiased10
  L_main0
  L_main1
  L_timer1_interrupt2
  L_timer1_interrupt3
  L_timer1_interrupt4
  L_timer1_interrupt5
  L_timer1_interrupt6
  L_timer1_interrupt7
  L_CAN_Interrupt8
  L_CAN_Interrupt9
  L_CAN_Interrupt10
  L_CAN_Interrupt11
  L_CAN_Interrupt12
  L_CAN_Interrupt13
  L_CAN_Interrupt14
  L_CAN_Interrupt15
  L_CAN_Interrupt16
  L_CAN_Interrupt17
  L_CAN_Interrupt18
  L_CAN_Interrupt19
  L_CAN_Interrupt20
  L_CAN_Interrupt21
  L_CAN_Interrupt22
  L_CAN_Interrupt23
  L_CAN_Interrupt24
  L_CAN_Interrupt25
  L_CAN_Interrupt26
  L_CAN_Interrupt27
  L_CAN_Interrupt28
  L_CAN_Interrupt29
  L_CAN_Interrupt30
  L_CAN_Interrupt31
  L_CAN_Interrupt32
  L_CAN_Interrupt33
  L_CAN_Interrupt34
  L_CAN_Interrupt35
  L_CAN_Interrupt36
  L_CAN_Interrupt37
  L_CAN_Interrupt38
  L_CAN_Interrupt39
  L_CAN_Interrupt40
  L_CAN_Interrupt41
  L_CAN_Interrupt42
  L_CAN_Interrupt43
  L__CAN_Interrupt44
  L__CAN_Interrupt45
  L__CAN_Interrupt46
  L__CAN_Interrupt47
  L__CAN_Interrupt48
  L__CAN_Interrupt49
  L__CAN_Interrupt50
  L__CAN_Interrupt51
  L__CAN_Interrupt52
  L__CAN_Interrupt53
  L__CAN_Interrupt54
  L__CAN_Interrupt55
  L__CAN_Interrupt56
  L__CAN_Interrupt57
  L__CAN_Interrupt58
  L__CAN_Interrupt59
  L__CAN_Interrupt60
  L__CAN_Interrupt61
  L_end_GCU_isAlive
  _GCU_isAlive
  L_end_init
  _init
  L_end_main
  _main
  L__main_end_loop
  L_end_timer1_interrupt
  _timer1_interrupt
  L__timer1_interrupt67
  L__timer1_interrupt68
  L__timer1_interrupt69
  L__timer1_interrupt70
  L__timer1_interrupt71
  L__timer1_interrupt72
  L_end_CAN_Interrupt
  _CAN_Interrupt
  L__CAN_Interrupt74
  L__CAN_Interrupt75
  L__CAN_Interrupt76
  L__CAN_Interrupt77
  L__CAN_Interrupt78
  L__CAN_Interrupt79
  L__CAN_Interrupt80
  L__CAN_Interrupt81
  L__CAN_Interrupt82
  L__CAN_Interrupt83
  L__CAN_Interrupt84
  L__CAN_Interrupt85
  L__CAN_Interrupt86
  L__CAN_Interrupt87
  L__CAN_Interrupt88
  L__CAN_Interrupt89
  L__CAN_Interrupt90
  L__CAN_Interrupt91
  L__CAN_Interrupt92
  L__CAN_Interrupt93
  L__CAN_Interrupt94
  L__CAN_Interrupt95
  L__CAN_Interrupt96
  L__CAN_Interrupt97
  L__CAN_Interrupt98
  L__CAN_Interrupt99
  L__CAN_Interrupt100
  L_end_Efi_init
  _Efi_init
  L_end_Efi_setCut
  _Efi_setCut
  L_end_Efi_unsetCut
  _Efi_unsetCut
  L_end_Efi_setBlip
  _Efi_setBlip
  L_end_Efi_unsetBlip
  _Efi_unsetBlip
  L_end_Efi_setRPMLimiter
  _Efi_setRPMLimiter
  L_end_Efi_unsetRPMLimiter
  _Efi_unsetRPMLimiter
  L_EngineControl_isStarting0
  L_EngineControl_isStarting1
  L_end_EngineControl_init
  _EngineControl_init
  L_end_EngineControl_keyOn
  _EngineControl_keyOn
  L_end_EngineControl_keyOff
  _EngineControl_keyOff
  L_end_EngineControl_start
  _EngineControl_start
  L_end_EngineControl_stop
  _EngineControl_stop
  L_end_EngineControl_resetStartCheck
  _EngineControl_resetStartCheck
  L_end_EngineControl_isStarting
  _EngineControl_isStarting
  L__EngineControl_isStarting9
  L_end_GearMotor_init
  _GearMotor_init
  L_end_GearMotor_turnLeft
  _GearMotor_turnLeft
  L_end_GearMotor_turnRight
  _GearMotor_turnRight
  L_end_GearMotor_brake
  _GearMotor_brake
  L_end_GearMotor_release
  _GearMotor_release
  L_GearShift_setCurrentGear0
  L_GearShift_injectCommand1
  L_GearShift_injectCommand2
  L_GearShift_injectCommand3
  L_GearShift_injectCommand4
  L_GearShift_injectCommand5
  L_GearShift_injectCommand6
  L_GearShift_injectCommand7
  L_GearShift_injectCommand8
  L_GearShift_injectCommand9
  L_GearShift_injectCommand10
  L_GearShift_injectCommand11
  L_GearShift_shift12
  L_GearShift_shift13
  L_GearShift_shift14
  L_GearShift_shift15
  L_GearShift_setNeutral16
  L_GearShift_setNeutral17
  L_GearShift_setNeutral18
  L_GearShift_up19
  L_GearShift_down20
  L_GearShift_isShifting21
  L_GearShift_isShifting22
  L_GearShift_checkUp23
  L_GearShift_nextStep_A24
  L_GearShift_nextStep_A25
  L_GearShift_nextStep_A26
  L_GearShift_nextStep_A27
  L_GearShift_nextStep_A28
  L_GearShift_nextStep_A29
  L_GearShift_nextStep_A30
  L_GearShift_nextStep_A31
  L_GearShift_nextStep_A32
  L_GearShift_nextStep_A33
  L_GearShift_nextStep_A34
  L_GearShift_nextStep_A35
  L_GearShift_nextStep_A36
  L_GearShift_nextStep_A37
  L_GearShift_nextStep_A38
  L_GearShift_nextStep_A39
  L_GearShift_nextStep_A40
  L_GearShift_nextStep_A41
  L_GearShift_nextStep_A42
  L_GearShift_nextStep_A43
  L_GearShift_nextStep_A44
  L_GearShift_nextStep_A45
  L_GearShift_nextStep_A46
  L_GearShift_nextStep_A47
  L_GearShift_nextStep_A48
  L_GearShift_nextStep_A49
  L_GearShift_nextStep_B50
  L_GearShift_nextStep_B51
  L_GearShift_nextStep_B52
  L_GearShift_msTick53
  L_GearShift_msTick54
  L_GearShift_msTick55
  L_GearShift_msTick56
  L_GearShift_msTick57
  L_GearShift_msTick58
  L_Gearshift_get_time59
  L_Gearshift_get_time60
  L_Gearshift_get_time61
  L_Gearshift_get_time62
  L_Gearshift_get_time63
  L_Gearshift_get_time64
  L_Gearshift_get_time65
  L_Gearshift_get_time66
  L_Gearshift_get_time67
  L_Gearshift_get_time68
  L_Gearshift_get_time69
  L_Gearshift_get_time70
  L_Gearshift_get_time71
  L_Gearshift_get_time72
  L_Gearshift_get_time73
  L_Gearshift_get_time74
  L_Gearshift_get_time75
  L_Gearshift_get_time76
  L_Gearshift_get_time77
  L_Gearshift_get_time78
  L_Gearshift_get_time79
  L_Gearshift_get_time80
  L_Gearshift_get_time81
  L_Gearshift_get_time82
  L_Gearshift_get_time83
  L_Gearshift_get_time84
  L_Gearshift_get_time85
  L__GearShift_nextStep_A86
  L__GearShift_nextStep_A87
  L__GearShift_nextStep_A88
  L__GearShift_nextStep_A89
  L__GearShift_nextStep_A90
  L__GearShift_nextStep_A91
  L__GearShift_injectCommand92
  L__GearShift_injectCommand93
  L__GearShift_injectCommand94
  L__GearShift_injectCommand95
  L__GearShift_injectCommand96
  L__GearShift_injectCommand97
  L_end_GearShift_init
  _GearShift_init
  L_end_GearShift_setCurrentGear
  _GearShift_setCurrentGear
  L__GearShift_setCurrentGear100
  L_end_GearShift_injectCommand
  _GearShift_injectCommand
  L__GearShift_injectCommand102
  L__GearShift_injectCommand103
  L__GearShift_injectCommand104
  L__GearShift_injectCommand105
  L__GearShift_injectCommand106
  L__GearShift_injectCommand107
  L_end_GearShift_shift
  _GearShift_shift
  L__GearShift_shift109
  L__GearShift_shift110
  L__GearShift_shift111
  L_end_GearShift_setNeutral
  _GearShift_setNeutral
  L__GearShift_setNeutral113
  L__GearShift_setNeutral114
  L_end_GearShift_up
  _GearShift_up
  L__GearShift_up116
  L_end_GearShift_down
  _GearShift_down
  L__GearShift_down118
  L_end_GearShift_isShifting
  _GearShift_isShifting
  L__GearShift_isShifting120
  L__GearShift_isShifting121
  L_end_GearShift_setNextStep_A
  _GearShift_setNextStep_A
  L_end_GearShift_setNextStep_B
  _GearShift_setNextStep_B
  L_end_GearShift_checkUp
  _GearShift_checkUp
  L__GearShift_checkUp125
  L_end_GearShift_nextStep_A
  _GearShift_nextStep_A
  L__GearShift_nextStep_A127
  L__GearShift_nextStep_A128
  L__GearShift_nextStep_A129
  L__GearShift_nextStep_A130
  L__GearShift_nextStep_A131
  L__GearShift_nextStep_A132
  L__GearShift_nextStep_A133
  L__GearShift_nextStep_A134
  L__GearShift_nextStep_A135
  L__GearShift_nextStep_A136
  L__GearShift_nextStep_A137
  L__GearShift_nextStep_A138
  L__GearShift_nextStep_A139
  L__GearShift_nextStep_A140
  L__GearShift_nextStep_A141
  L__GearShift_nextStep_A142
  L__GearShift_nextStep_A143
  L__GearShift_nextStep_A144
  L__GearShift_nextStep_A145
  L_end_GearShift_nextStep_B
  _GearShift_nextStep_B
  L_end_GearShift_setMsTicks_A
  _GearShift_setMsTicks_A
  L_end_GearShift_setMsTicks_B
  _GearShift_setMsTicks_B
  L_end_GearShift_msTick
  _GearShift_msTick
  L__GearShift_msTick150
  L__GearShift_msTick151
  L__GearShift_msTick152
  L__GearShift_msTick153
  L_end_Gearshift_get_time
  _Gearshift_get_time
  L__Gearshift_get_time155
  L__Gearshift_get_time156
  L__Gearshift_get_time157
  L__Gearshift_get_time158
  L__Gearshift_get_time159
  L__Gearshift_get_time160
  L__Gearshift_get_time161
  L__Gearshift_get_time162
  L__Gearshift_get_time163
  L__Gearshift_get_time164
  L__Gearshift_get_time165
  L__Gearshift_get_time166
  L__Gearshift_get_time167
  L__Gearshift_get_time168
  L__Gearshift_get_time169
  L__Gearshift_get_time170
  L__Gearshift_get_time171
  L__Gearshift_get_time172
  L__Gearshift_get_time173
  L__Gearshift_get_time174
  L_end_GearShift_loadDefaultTimings
  _GearShift_loadDefaultTimings
  L___Lib_CAN_12_CAN1IDToRegs0
  L___Lib_CAN_12_CAN1IDToRegs1
  L___Lib_CAN_12_CAN1IDToRegs2
  L___Lib_CAN_12_CAN1IDToRegs3
  L___Lib_CAN_12_CAN1IDToRegs4
  L___Lib_CAN_12_CAN1IDToRegs5
  L___Lib_CAN_12_CAN1IDToRegs6
  L___Lib_CAN_12_CAN1IDToRegs7
  L___Lib_CAN_12_CAN1IDToRegs8
  L___Lib_CAN_12_CAN1IDToRegs9
  L___Lib_CAN_12_CAN1IDToRegs10
  L___Lib_CAN_12_CAN1IDToRegs11
  L___Lib_CAN_12_CAN1IDToRegs12
  L_CAN1SetOperationMode13
  L_CAN1SetOperationMode14
  L_CAN1SetOperationMode15
  L_CAN1SetOperationMode16
  L_CAN1SetBaudRate17
  L_CAN1SetBaudRate18
  L_CAN1SetBaudRate19
  L_CAN1SetMask20
  L_CAN1SetMask21
  L_CAN1SetFilter22
  L_CAN1SetFilter23
  L_CAN1SetFilter24
  L_CAN1SetFilter25
  L_CAN1SetFilter26
  L_CAN1SetFilter27
  L_CAN1SetFilter28
  L_CAN1SetFilter29
  L___Lib_CAN_12_RegsToCAN1ID30
  L___Lib_CAN_12_RegsToCAN1ID31
  L_CAN1Write32
  L_CAN1Write33
  L_CAN1Write34
  L_CAN1Write35
  L_CAN1Write36
  L_CAN1Write37
  L_CAN1Write38
  L_CAN1Write39
  L_CAN1Write40
  L_CAN1Write41
  L_CAN1Write42
  L_CAN1Read43
  L_CAN1Read44
  L_CAN1Read45
  L_CAN1Read46
  L_CAN1Read47
  L_CAN1Read48
  L_CAN1Read49
  L_CAN1Read50
  L_CAN1Read51
  L_CAN1Read52
  L_CAN1Read53
  L_CAN1Read54
  L_CAN1Read55
  L_CAN1Read56
  L_CAN1Read57
  L_CAN1Read58
  L_CAN1Initialize59
  L_CAN1Initialize60
  L_CAN1Initialize61
  L_CAN1Initialize62
  L_CAN1Initialize63
  L___Lib_CAN_12_CAN2IDToRegs64
  L___Lib_CAN_12_CAN2IDToRegs65
  L___Lib_CAN_12_CAN2IDToRegs66
  L___Lib_CAN_12_CAN2IDToRegs67
  L___Lib_CAN_12_CAN2IDToRegs68
  L___Lib_CAN_12_CAN2IDToRegs69
  L___Lib_CAN_12_CAN2IDToRegs70
  L___Lib_CAN_12_CAN2IDToRegs71
  L___Lib_CAN_12_CAN2IDToRegs72
  L___Lib_CAN_12_CAN2IDToRegs73
  L___Lib_CAN_12_CAN2IDToRegs74
  L___Lib_CAN_12_CAN2IDToRegs75
  L___Lib_CAN_12_CAN2IDToRegs76
  L_CAN2SetOperationMode77
  L_CAN2SetOperationMode78
  L_CAN2SetOperationMode79
  L_CAN2SetOperationMode80
  L_CAN2SetBaudRate81
  L_CAN2SetBaudRate82
  L_CAN2SetBaudRate83
  L_CAN2SetMask84
  L_CAN2SetMask85
  L_CAN2SetFilter86
  L_CAN2SetFilter87
  L_CAN2SetFilter88
  L_CAN2SetFilter89
  L_CAN2SetFilter90
  L_CAN2SetFilter91
  L_CAN2SetFilter92
  L_CAN2SetFilter93
  L___Lib_CAN_12_RegsToCAN2ID94
  L___Lib_CAN_12_RegsToCAN2ID95
  L_CAN2Write96
  L_CAN2Write97
  L_CAN2Write98
  L_CAN2Write99
  L_CAN2Write100
  L_CAN2Write101
  L_CAN2Write102
  L_CAN2Write103
  L_CAN2Write104
  L_CAN2Write105
  L_CAN2Write106
  L_CAN2Read107
  L_CAN2Read108
  L_CAN2Read109
  L_CAN2Read110
  L_CAN2Read111
  L_CAN2Read112
  L_CAN2Read113
  L_CAN2Read114
  L_CAN2Read115
  L_CAN2Read116
  L_CAN2Read117
  L_CAN2Read118
  L_CAN2Read119
  L_CAN2Read120
  L_CAN2Read121
  L_CAN2Read122
  L_CAN2Initialize123
  L_CAN2Initialize124
  L_CAN2Initialize125
  L_CAN2Initialize126
  L_CAN2Initialize127
  L_end_CAN1IDToRegs
  __Lib_CAN_12_CAN1IDToRegs
  L___Lib_CAN_12_CAN1IDToRegs129
  L___Lib_CAN_12_CAN1IDToRegs130
  L___Lib_CAN_12_CAN1IDToRegs131
  L_end_CAN1SetOperationMode
  _CAN1SetOperationMode
  L__CAN1SetOperationMode133
  L__CAN1SetOperationMode134
  L_end_CAN1GetOperationMode
  _CAN1GetOperationMode
  L_end_CAN1SetBaudRate
  _CAN1SetBaudRate
  L_end_CAN1SetMask
  _CAN1SetMask
  L__CAN1SetMask138
  L_end_CAN1SetFilter
  _CAN1SetFilter
  L__CAN1SetFilter140
  L__CAN1SetFilter141
  L__CAN1SetFilter142
  L__CAN1SetFilter143
  L__CAN1SetFilter144
  L_end_RegsToCAN1ID
  __Lib_CAN_12_RegsToCAN1ID
  L_end_CAN1Write
  _CAN1Write
  L__CAN1Write147
  L_end_CAN1Read
  _CAN1Read
  L__CAN1Read149
  L__CAN1Read150
  L__CAN1Read151
  L_end_CAN1Initialize
  _CAN1Initialize
  L__CAN1Initialize153
  L_end_CAN2IDToRegs
  __Lib_CAN_12_CAN2IDToRegs
  L___Lib_CAN_12_CAN2IDToRegs155
  L___Lib_CAN_12_CAN2IDToRegs156
  L___Lib_CAN_12_CAN2IDToRegs157
  L_end_CAN2SetOperationMode
  _CAN2SetOperationMode
  L__CAN2SetOperationMode159
  L__CAN2SetOperationMode160
  L_end_CAN2GetOperationMode
  _CAN2GetOperationMode
  L_end_CAN2SetBaudRate
  _CAN2SetBaudRate
  L_end_CAN2SetMask
  _CAN2SetMask
  L__CAN2SetMask164
  L_end_CAN2SetFilter
  _CAN2SetFilter
  L__CAN2SetFilter166
  L__CAN2SetFilter167
  L__CAN2SetFilter168
  L__CAN2SetFilter169
  L__CAN2SetFilter170
  L_end_RegsToCAN2ID
  __Lib_CAN_12_RegsToCAN2ID
  L_end_CAN2Write
  _CAN2Write
  L__CAN2Write173
  L_end_CAN2Read
  _CAN2Read
  L__CAN2Read175
  L__CAN2Read176
  L__CAN2Read177
  L_end_CAN2Initialize
  _CAN2Initialize
  L__CAN2Initialize179
  L_Buzzer_tick0
  L_Buzzer_tick1
  L_end_timer4_interrupt
  _timer4_interrupt
  L_end_Buzzer_init
  _Buzzer_init
  L_end_Buzzer_tick
  _Buzzer_tick
  L__Buzzer_tick5
  L_end_Buzzer_Bip
  _Buzzer_Bip
  L_ClutchMotor_setPosition0
  L_ClutchMotor_setPosition1
  L_ClutchMotor_setPosition2
  L__ClutchMotor_setPosition3
  L_end_timer2_interrupt
  _timer2_interrupt
  L_end_ClutchMotor_init
  _ClutchMotor_init
  L_end_ClutchMotor_setupPWM
  _ClutchMotor_setupPWM
  L_end_ClutchMotor_setPosition
  _ClutchMotor_setPosition
  L__ClutchMotor_setPosition8
  L__ClutchMotor_setPosition9
  L_aac_execute0
  L_aac_execute1
  L_aac_execute2
  L_aac_execute3
  L_aac_execute4
  L_aac_execute5
  L_aac_execute6
  L_aac_execute7
  L_aac_execute8
  L_aac_execute9
  L_aac_execute10
  L_aac_execute11
  L_aac_execute12
  L_aac_execute13
  L_aac_execute14
  L_aac_execute15
  L_aac_stop16
  L_aac_updateExternValue17
  L_aac_getParam18
  L_aac_getExternValue19
  L__aac_execute20
  L__aac_execute21
  L__aac_execute22
  L__aac_execute23
  L__aac_execute24
  L__aac_execute25
  L_end_getAccelerationFb
  _getAccelerationFb
  L_end_aac_init
  _aac_init
  L_end_aac_execute
  _aac_execute
  L__aac_execute29
  L__aac_execute30
  L__aac_execute31
  L__aac_execute32
  L__aac_execute33
  L__aac_execute34
  L__aac_execute35
  L__aac_execute36
  L__aac_execute37
  L__aac_execute38
  L__aac_execute39
  L_end_aac_loadDefaultParams
  _aac_loadDefaultParams
  L_end_aac_stop
  _aac_stop
  L__aac_stop42
  L_end_aac_updateExternValue
  _aac_updateExternValue
  L__aac_updateExternValue44
  L_end_aac_getParam
  _aac_getParam
  L__aac_getParam46
  L_end_aac_getExternValue
  _aac_getExternValue
  L__aac_getExternValue48
  L_Can_init0
  L_Can_read2
  L_Can_read3
  L_Can_read4
  L_Can_write5
  L_Can_write6
  L_Can_write7
  L_Can_write8
  L_Can_write9
  L_Can_write10
  L_Can_resetWritePacket11
  L_Can_resetWritePacket12
  L_Can_resetWritePacket13
  L__Can_write14
  L__Can_write15
  L__Can_write16
  L_end_Can_init
  _Can_init
  L_end_Can_read
  _Can_read
  L__Can_read19
  L__Can_read20
  L_end_Can_writeByte
  _Can_writeByte
  L_end_Can_writeInt
  _Can_writeInt
  L_end_Can_addIntToWritePacket
  _Can_addIntToWritePacket
  L_end_Can_addByteToWritePacket
  _Can_addByteToWritePacket
  L_end_Can_write
  _Can_write
  L__Can_write26
  L__Can_write27
  L__Can_write28
  L_end_Can_setWritePriority
  _Can_setWritePriority
  L_end_Can_resetWritePacket
  _Can_resetWritePacket
  L__Can_resetWritePacket31
  L_end_Can_getWriteFlags
  _Can_getWriteFlags
  L_end_Can_B0hasBeenReceived
  _Can_B0hasBeenReceived
  L__Can_B0hasBeenReceived34
  L_end_Can_B1hasBeenReceived
  _Can_B1hasBeenReceived
  L__Can_B1hasBeenReceived36
  L_end_Can_clearB0Flag
  _Can_clearB0Flag
  L_end_Can_clearB1Flag
  _Can_clearB1Flag
  L_end_Can_clearInterrupt
  _Can_clearInterrupt
  L_end_Can_initInterrupt
  _Can_initInterrupt
  L_main0
  L_main1
  L_timer1_interrupt2
  L_timer1_interrupt3
  L_timer1_interrupt4
  L_timer1_interrupt5
  L_timer1_interrupt6
  L_timer1_interrupt7
  L_CAN_Interrupt8
  L_CAN_Interrupt9
  L_CAN_Interrupt10
  L_CAN_Interrupt11
  L_CAN_Interrupt12
  L_CAN_Interrupt13
  L_CAN_Interrupt14
  L_CAN_Interrupt15
  L_CAN_Interrupt16
  L_CAN_Interrupt17
  L_CAN_Interrupt18
  L_CAN_Interrupt19
  L_CAN_Interrupt20
  L_CAN_Interrupt21
  L_CAN_Interrupt22
  L_CAN_Interrupt23
  L_CAN_Interrupt24
  L_CAN_Interrupt25
  L_CAN_Interrupt26
  L_CAN_Interrupt27
  L_CAN_Interrupt28
  L_CAN_Interrupt29
  L_CAN_Interrupt30
  L_CAN_Interrupt31
  L_CAN_Interrupt32
  L_CAN_Interrupt33
  L_CAN_Interrupt34
  L_CAN_Interrupt35
  L_CAN_Interrupt36
  L_CAN_Interrupt37
  L_CAN_Interrupt38
  L_CAN_Interrupt39
  L_CAN_Interrupt40
  L_CAN_Interrupt41
  L_CAN_Interrupt42
  L_CAN_Interrupt43
  L__CAN_Interrupt44
  L__CAN_Interrupt45
  L__CAN_Interrupt46
  L__CAN_Interrupt47
  L__CAN_Interrupt48
  L__CAN_Interrupt49
  L__CAN_Interrupt50
  L__CAN_Interrupt51
  L__CAN_Interrupt52
  L__CAN_Interrupt53
  L__CAN_Interrupt54
  L__CAN_Interrupt55
  L__CAN_Interrupt56
  L__CAN_Interrupt57
  L__CAN_Interrupt58
  L__CAN_Interrupt59
  L__CAN_Interrupt60
  L__CAN_Interrupt61
  L_end_GCU_isAlive
  _GCU_isAlive
  L_end_init
  _init
  L_end_main
  _main
  L__main_end_loop
  L_end_timer1_interrupt
  _timer1_interrupt
  L__timer1_interrupt67
  L__timer1_interrupt68
  L__timer1_interrupt69
  L__timer1_interrupt70
  L__timer1_interrupt71
  L__timer1_interrupt72
  L_end_CAN_Interrupt
  _CAN_Interrupt
  L__CAN_Interrupt74
  L__CAN_Interrupt75
  L__CAN_Interrupt76
  L__CAN_Interrupt77
  L__CAN_Interrupt78
  L__CAN_Interrupt79
  L__CAN_Interrupt80
  L__CAN_Interrupt81
  L__CAN_Interrupt82
  L__CAN_Interrupt83
  L__CAN_Interrupt84
  L__CAN_Interrupt85
  L__CAN_Interrupt86
  L__CAN_Interrupt87
  L__CAN_Interrupt88
  L__CAN_Interrupt89
  L__CAN_Interrupt90
  L__CAN_Interrupt91
  L__CAN_Interrupt92
  L__CAN_Interrupt93
  L__CAN_Interrupt94
  L__CAN_Interrupt95
  L__CAN_Interrupt96
  L__CAN_Interrupt97
  L__CAN_Interrupt98
  L__CAN_Interrupt99
  L__CAN_Interrupt100
  L_dSignalLed_switch0
  L_dSignalLed_switch1
  L_dSignalLed_switch2
  L_dSignalLed_set3
  L_dSignalLed_set4
  L_dSignalLed_set5
  L_dSignalLed_unset6
  L_dSignalLed_unset7
  L_dSignalLed_unset8
  L_end_dSignalLed_init
  _dSignalLed_init
  L_end_dSignalLed_switch
  _dSignalLed_switch
  L__dSignalLed_switch11
  L_end_dSignalLed_set
  _dSignalLed_set
  L__dSignalLed_set13
  L_end_dSignalLed_unset
  _dSignalLed_unset
  L__dSignalLed_unset15
  L_EngineControl_isStarting0
  L_EngineControl_isStarting1
  L_end_EngineControl_init
  _EngineControl_init
  L_end_EngineControl_keyOn
  _EngineControl_keyOn
  L_end_EngineControl_keyOff
  _EngineControl_keyOff
  L_end_EngineControl_start
  _EngineControl_start
  L_end_EngineControl_stop
  _EngineControl_stop
  L_end_EngineControl_resetStartCheck
  _EngineControl_resetStartCheck
  L_end_EngineControl_isStarting
  _EngineControl_isStarting
  L__EngineControl_isStarting9
  L_GearShift_setCurrentGear0
  L_GearShift_injectCommand1
  L_GearShift_injectCommand2
  L_GearShift_injectCommand3
  L_GearShift_injectCommand4
  L_GearShift_injectCommand5
  L_GearShift_injectCommand6
  L_GearShift_injectCommand7
  L_GearShift_injectCommand8
  L_GearShift_injectCommand9
  L_GearShift_injectCommand10
  L_GearShift_injectCommand11
  L_GearShift_shift12
  L_GearShift_shift13
  L_GearShift_shift14
  L_GearShift_shift15
  L_GearShift_setNeutral16
  L_GearShift_setNeutral17
  L_GearShift_setNeutral18
  L_GearShift_up19
  L_GearShift_down20
  L_GearShift_isShifting21
  L_GearShift_isShifting22
  L_GearShift_checkUp23
  L_GearShift_nextStep_A24
  L_GearShift_nextStep_A25
  L_GearShift_nextStep_A26
  L_GearShift_nextStep_A27
  L_GearShift_nextStep_A28
  L_GearShift_nextStep_A29
  L_GearShift_nextStep_A30
  L_GearShift_nextStep_A31
  L_GearShift_nextStep_A32
  L_GearShift_nextStep_A33
  L_GearShift_nextStep_A34
  L_GearShift_nextStep_A35
  L_GearShift_nextStep_A36
  L_GearShift_nextStep_A37
  L_GearShift_nextStep_A38
  L_GearShift_nextStep_A39
  L_GearShift_nextStep_A40
  L_GearShift_nextStep_A41
  L_GearShift_nextStep_A42
  L_GearShift_nextStep_A43
  L_GearShift_nextStep_A44
  L_GearShift_nextStep_A45
  L_GearShift_nextStep_A46
  L_GearShift_nextStep_A47
  L_GearShift_nextStep_A48
  L_GearShift_nextStep_A49
  L_GearShift_nextStep_B50
  L_GearShift_nextStep_B51
  L_GearShift_nextStep_B52
  L_GearShift_msTick53
  L_GearShift_msTick54
  L_GearShift_msTick55
  L_GearShift_msTick56
  L_GearShift_msTick57
  L_GearShift_msTick58
  L_Gearshift_get_time59
  L_Gearshift_get_time60
  L_Gearshift_get_time61
  L_Gearshift_get_time62
  L_Gearshift_get_time63
  L_Gearshift_get_time64
  L_Gearshift_get_time65
  L_Gearshift_get_time66
  L_Gearshift_get_time67
  L_Gearshift_get_time68
  L_Gearshift_get_time69
  L_Gearshift_get_time70
  L_Gearshift_get_time71
  L_Gearshift_get_time72
  L_Gearshift_get_time73
  L_Gearshift_get_time74
  L_Gearshift_get_time75
  L_Gearshift_get_time76
  L_Gearshift_get_time77
  L_Gearshift_get_time78
  L_Gearshift_get_time79
  L_Gearshift_get_time80
  L_Gearshift_get_time81
  L_Gearshift_get_time82
  L_Gearshift_get_time83
  L_Gearshift_get_time84
  L_Gearshift_get_time85
  L__GearShift_nextStep_A86
  L__GearShift_nextStep_A87
  L__GearShift_nextStep_A88
  L__GearShift_nextStep_A89
  L__GearShift_nextStep_A90
  L__GearShift_nextStep_A91
  L__GearShift_injectCommand92
  L__GearShift_injectCommand93
  L__GearShift_injectCommand94
  L__GearShift_injectCommand95
  L__GearShift_injectCommand96
  L__GearShift_injectCommand97
  L_end_GearShift_init
  _GearShift_init
  L_end_GearShift_setCurrentGear
  _GearShift_setCurrentGear
  L__GearShift_setCurrentGear100
  L_end_GearShift_injectCommand
  _GearShift_injectCommand
  L__GearShift_injectCommand102
  L__GearShift_injectCommand103
  L__GearShift_injectCommand104
  L__GearShift_injectCommand105
  L__GearShift_injectCommand106
  L__GearShift_injectCommand107
  L_end_GearShift_shift
  _GearShift_shift
  L__GearShift_shift109
  L__GearShift_shift110
  L__GearShift_shift111
  L_end_GearShift_setNeutral
  _GearShift_setNeutral
  L__GearShift_setNeutral113
  L__GearShift_setNeutral114
  L_end_GearShift_up
  _GearShift_up
  L__GearShift_up116
  L_end_GearShift_down
  _GearShift_down
  L__GearShift_down118
  L_end_GearShift_isShifting
  _GearShift_isShifting
  L__GearShift_isShifting120
  L__GearShift_isShifting121
  L_end_GearShift_setNextStep_A
  _GearShift_setNextStep_A
  L_end_GearShift_setNextStep_B
  _GearShift_setNextStep_B
  L_end_GearShift_checkUp
  _GearShift_checkUp
  L__GearShift_checkUp125
  L_end_GearShift_nextStep_A
  _GearShift_nextStep_A
  L__GearShift_nextStep_A127
  L__GearShift_nextStep_A128
  L__GearShift_nextStep_A129
  L__GearShift_nextStep_A130
  L__GearShift_nextStep_A131
  L__GearShift_nextStep_A132
  L__GearShift_nextStep_A133
  L__GearShift_nextStep_A134
  L__GearShift_nextStep_A135
  L__GearShift_nextStep_A136
  L__GearShift_nextStep_A137
  L__GearShift_nextStep_A138
  L__GearShift_nextStep_A139
  L__GearShift_nextStep_A140
  L__GearShift_nextStep_A141
  L__GearShift_nextStep_A142
  L__GearShift_nextStep_A143
  L__GearShift_nextStep_A144
  L__GearShift_nextStep_A145
  L_end_GearShift_nextStep_B
  _GearShift_nextStep_B
  L_end_GearShift_setMsTicks_A
  _GearShift_setMsTicks_A
  L_end_GearShift_setMsTicks_B
  _GearShift_setMsTicks_B
  L_end_GearShift_msTick
  _GearShift_msTick
  L__GearShift_msTick150
  L__GearShift_msTick151
  L__GearShift_msTick152
  L__GearShift_msTick153
  L_end_Gearshift_get_time
  _Gearshift_get_time
  L__Gearshift_get_time155
  L__Gearshift_get_time156
  L__Gearshift_get_time157
  L__Gearshift_get_time158
  L__Gearshift_get_time159
  L__Gearshift_get_time160
  L__Gearshift_get_time161
  L__Gearshift_get_time162
  L__Gearshift_get_time163
  L__Gearshift_get_time164
  L__Gearshift_get_time165
  L__Gearshift_get_time166
  L__Gearshift_get_time167
  L__Gearshift_get_time168
  L__Gearshift_get_time169
  L__Gearshift_get_time170
  L__Gearshift_get_time171
  L__Gearshift_get_time172
  L__Gearshift_get_time173
  L__Gearshift_get_time174
  L_end_GearShift_loadDefaultTimings
  _GearShift_loadDefaultTimings
  L_sendUpdatesSW0
  L_sendUpdatesSW1
  L_sendUpdatesSW2
  L_sendUpdatesSW3
  L_end_sendUpdatesSW
  _sendUpdatesSW
  L__sendUpdatesSW5
  L___Lib_CAN_12_CAN1IDToRegs0
  L___Lib_CAN_12_CAN1IDToRegs1
  L___Lib_CAN_12_CAN1IDToRegs2
  L___Lib_CAN_12_CAN1IDToRegs3
  L___Lib_CAN_12_CAN1IDToRegs4
  L___Lib_CAN_12_CAN1IDToRegs5
  L___Lib_CAN_12_CAN1IDToRegs6
  L___Lib_CAN_12_CAN1IDToRegs7
  L___Lib_CAN_12_CAN1IDToRegs8
  L___Lib_CAN_12_CAN1IDToRegs9
  L___Lib_CAN_12_CAN1IDToRegs10
  L___Lib_CAN_12_CAN1IDToRegs11
  L___Lib_CAN_12_CAN1IDToRegs12
  L_CAN1SetOperationMode13
  L_CAN1SetOperationMode14
  L_CAN1SetOperationMode15
  L_CAN1SetOperationMode16
  L_CAN1SetBaudRate17
  L_CAN1SetBaudRate18
  L_CAN1SetBaudRate19
  L_CAN1SetMask20
  L_CAN1SetMask21
  L_CAN1SetFilter22
  L_CAN1SetFilter23
  L_CAN1SetFilter24
  L_CAN1SetFilter25
  L_CAN1SetFilter26
  L_CAN1SetFilter27
  L_CAN1SetFilter28
  L_CAN1SetFilter29
  L___Lib_CAN_12_RegsToCAN1ID30
  L___Lib_CAN_12_RegsToCAN1ID31
  L_CAN1Write32
  L_CAN1Write33
  L_CAN1Write34
  L_CAN1Write35
  L_CAN1Write36
  L_CAN1Write37
  L_CAN1Write38
  L_CAN1Write39
  L_CAN1Write40
  L_CAN1Write41
  L_CAN1Write42
  L_CAN1Read43
  L_CAN1Read44
  L_CAN1Read45
  L_CAN1Read46
  L_CAN1Read47
  L_CAN1Read48
  L_CAN1Read49
  L_CAN1Read50
  L_CAN1Read51
  L_CAN1Read52
  L_CAN1Read53
  L_CAN1Read54
  L_CAN1Read55
  L_CAN1Read56
  L_CAN1Read57
  L_CAN1Read58
  L_CAN1Initialize59
  L_CAN1Initialize60
  L_CAN1Initialize61
  L_CAN1Initialize62
  L_CAN1Initialize63
  L___Lib_CAN_12_CAN2IDToRegs64
  L___Lib_CAN_12_CAN2IDToRegs65
  L___Lib_CAN_12_CAN2IDToRegs66
  L___Lib_CAN_12_CAN2IDToRegs67
  L___Lib_CAN_12_CAN2IDToRegs68
  L___Lib_CAN_12_CAN2IDToRegs69
  L___Lib_CAN_12_CAN2IDToRegs70
  L___Lib_CAN_12_CAN2IDToRegs71
  L___Lib_CAN_12_CAN2IDToRegs72
  L___Lib_CAN_12_CAN2IDToRegs73
  L___Lib_CAN_12_CAN2IDToRegs74
  L___Lib_CAN_12_CAN2IDToRegs75
  L___Lib_CAN_12_CAN2IDToRegs76
  L_CAN2SetOperationMode77
  L_CAN2SetOperationMode78
  L_CAN2SetOperationMode79
  L_CAN2SetOperationMode80
  L_CAN2SetBaudRate81
  L_CAN2SetBaudRate82
  L_CAN2SetBaudRate83
  L_CAN2SetMask84
  L_CAN2SetMask85
  L_CAN2SetFilter86
  L_CAN2SetFilter87
  L_CAN2SetFilter88
  L_CAN2SetFilter89
  L_CAN2SetFilter90
  L_CAN2SetFilter91
  L_CAN2SetFilter92
  L_CAN2SetFilter93
  L___Lib_CAN_12_RegsToCAN2ID94
  L___Lib_CAN_12_RegsToCAN2ID95
  L_CAN2Write96
  L_CAN2Write97
  L_CAN2Write98
  L_CAN2Write99
  L_CAN2Write100
  L_CAN2Write101
  L_CAN2Write102
  L_CAN2Write103
  L_CAN2Write104
  L_CAN2Write105
  L_CAN2Write106
  L_CAN2Read107
  L_CAN2Read108
  L_CAN2Read109
  L_CAN2Read110
  L_CAN2Read111
  L_CAN2Read112
  L_CAN2Read113
  L_CAN2Read114
  L_CAN2Read115
  L_CAN2Read116
  L_CAN2Read117
  L_CAN2Read118
  L_CAN2Read119
  L_CAN2Read120
  L_CAN2Read121
  L_CAN2Read122
  L_CAN2Initialize123
  L_CAN2Initialize124
  L_CAN2Initialize125
  L_CAN2Initialize126
  L_CAN2Initialize127
  L_end_CAN1IDToRegs
  __Lib_CAN_12_CAN1IDToRegs
  L___Lib_CAN_12_CAN1IDToRegs129
  L___Lib_CAN_12_CAN1IDToRegs130
  L___Lib_CAN_12_CAN1IDToRegs131
  L_end_CAN1SetOperationMode
  _CAN1SetOperationMode
  L__CAN1SetOperationMode133
  L__CAN1SetOperationMode134
  L_end_CAN1GetOperationMode
  _CAN1GetOperationMode
  L_end_CAN1SetBaudRate
  _CAN1SetBaudRate
  L_end_CAN1SetMask
  _CAN1SetMask
  L__CAN1SetMask138
  L_end_CAN1SetFilter
  _CAN1SetFilter
  L__CAN1SetFilter140
  L__CAN1SetFilter141
  L__CAN1SetFilter142
  L__CAN1SetFilter143
  L__CAN1SetFilter144
  L_end_RegsToCAN1ID
  __Lib_CAN_12_RegsToCAN1ID
  L_end_CAN1Write
  _CAN1Write
  L__CAN1Write147
  L_end_CAN1Read
  _CAN1Read
  L__CAN1Read149
  L__CAN1Read150
  L__CAN1Read151
  L_end_CAN1Initialize
  _CAN1Initialize
  L__CAN1Initialize153
  L_end_CAN2IDToRegs
  __Lib_CAN_12_CAN2IDToRegs
  L___Lib_CAN_12_CAN2IDToRegs155
  L___Lib_CAN_12_CAN2IDToRegs156
  L___Lib_CAN_12_CAN2IDToRegs157
  L_end_CAN2SetOperationMode
  _CAN2SetOperationMode
  L__CAN2SetOperationMode159
  L__CAN2SetOperationMode160
  L_end_CAN2GetOperationMode
  _CAN2GetOperationMode
  L_end_CAN2SetBaudRate
  _CAN2SetBaudRate
  L_end_CAN2SetMask
  _CAN2SetMask
  L__CAN2SetMask164
  L_end_CAN2SetFilter
  _CAN2SetFilter
  L__CAN2SetFilter166
  L__CAN2SetFilter167
  L__CAN2SetFilter168
  L__CAN2SetFilter169
  L__CAN2SetFilter170
  L_end_RegsToCAN2ID
  __Lib_CAN_12_RegsToCAN2ID
  L_end_CAN2Write
  _CAN2Write
  L__CAN2Write173
  L_end_CAN2Read
  _CAN2Read
  L__CAN2Read175
  L__CAN2Read176
  L__CAN2Read177
  L_end_CAN2Initialize
  _CAN2Initialize
  L__CAN2Initialize179
  Float__fpack
  the_end_Float__fpack
  Float_notsubnormal
  Float_zerosig
  Float_subnormal
  Float_packupandgo
  Float_overflow
  LL_intro_Long2Float
  the_end__Long2Float
  Longint2Float__floatsisf
  Longword2Float__floatuisf
  Long2Float_notspecial
  Long2Float_return0
  Longint2Float_negative
  Long2Float_fixshift
  Long2Float_round
  Long2Float_shiftleft
  Long2Float_shiftright
  Long2Float__fpack
  Long2Float_notsubnormal
  Long2Float_zerosig
  Long2Float_subnormal
  Long2Float_packupandgo
  Long2Float_overflow
  Longlong2Float_floatdisf
  the_end__LongLong2Float
  Longlong2Float_negative
  Longlong2Float_notspecial
  Longlong2Float_return0
  Longlong2Float_fixshift
  Longlong2Float_round
  Longlong2Float_shiftleft
  Longlong2Float_shiftright
  Float2Longword_fixunssfsi
  the_end__Float2Longword
  Float2Longword_funpack
  Float2Longword_returnzero
  Float2Longword_exit
  Float2Longword_shiftright
  Float2Longword_shiftleft
  Float2Longword_shiftrightloop
  Float2Longword_zeroorsub
  Float2Longword_nanorinf
  Float2Longword_finitereturn
  Float2Longword_infinite
  Float2Longword_subnormal
  Float2Longword_normalize
  Float2Longint__fixsfsi
  the_end__Float2Longint
  Float2Longint__funpack
  Float2Longint_setsign
  Float2Longint_shiftright
  Float2Longint_shiftleft
  Float2Longint_exit
  Float2Longint_shiftrightloop
  Float2Longint_zeroorsub
  Float2Longint_nanorinf
  Float2Longint_finitereturn
  Float2Longint_infinite
  Float2Longint_subnormal
  Float2Longint_normalize
  AddSubFP__addsf3
  the_end__AddSub_FP
  AddSubFP__funpack2
  AddSubFP__fPropagateNaN
  AddSubFP_aisinfinite
  AddSubFP_checkspecialb
  AddSubFP_return2_3
  AddSubFP_getsign
  AddSubFP_gotsign
  AddSubFP_expcanonical
  AddSubFP_nonegate
  AddSubFP_aligniter
  AddSubFP_signoff
  AddSubFP_align
  AddSubFP_aligned
  AddSubFP_normalizesum
  AddSubFP_checknormal
  AddSubFP_round
  AddSubFP_discardguard
  AddSubFP_underflow
  AddSubFP_normalizeloop
  AddSubFP_normalizeexit
  AddSubFP_normalizetest
  AddSubFP__fpack
  AddSubFP__fbopExit
  AddSubFP_return8_3
  AddSubFP__fbopReturnNaN
  AddSubFP__funpack
  AddSubFP_return0_1
  AddSubFP_return8_1
  AddSubFP_notsubnormal_1
  AddSubFP_zerosig
  AddSubFP_subnormal_1
  AddSubFP_packupandgo
  AddSubFP_overflow
  AddSubFP_zeroorsub
  AddSubFP_nanorinf
  AddSubFP_finitereturn
  AddSubFP_infinite
  AddSubFP_subnormal_2
  AddSubFP_normalize
  MulFP___mulsf3
  the_end__Mul_FP
  MulFP__funpack2
  MulFP__fPropagateNaN
  MulFP_aisinfinite
  MulFP_bisinfinite
  MulFP_return8_1
  MulFP_return2_1
  MulFP_formsticky
  MulFP_formRandSig
  MulFP__fpack
  MulFP_return0_1
  MulFP__fbopExit
  MulFP__fbopReturnNaN
  MulFP__funpack
  MulFP_return0_2
  MulFP_return8_2
  MulFP_notsubnormal
  MulFP_zerosig
  MulFP_subnormal1
  MulFP_packupandgo
  MulFP_overflow
  MulFP_zeroorsub
  MulFP_nanorinf
  MulFP_finitereturn
  MulFP_infinite
  MulFP_subnormal2
  MulFP_normalize
  DivFP___divsf3
  the_end__Div_FP
  DivFP__funpack2
  DivFP__fPropagateNaN
  DivFP_aisinfinite
  DivFP_returnZero
  DivFP_aiszero
  DivFP_returnInf
  DivFP_finitenonzero
  DivFP_diventry
  DivFP_divnext
  DivFP_divdone
  DivFP_divloop
  DivFP_stickyok
  DivFP_guardused
  DivFP__fpack
  DivFP_return0_1
  DivFP__fbopExit
  DivFP__fbopReturnNaN
  DivFP_return8_1
  DivFP_return2_1
  DivFP__funpack
  DivFP_return0
  DivFP_return8
  DivFP_notsubnormal
  DivFP_zerosig
  DivFP_subnormal
  DivFP_packupandgo
  DivFP_overfloW
  DivFP_zeroorsub
  DivFP_nanorinf
  DivFP_finitereturn
  DivFP_infinite
  DivFP_subnormal2
  DivFP_normalize
  CompareFp__fcompare
  the_end__Compare_Fp
  CompareFp__funpack2
  CompareFp_exit
  CompareFp_comparemag
  CompareFp_returnEqual
  CompareFp_adjust
  CompareFp__funpack
  CompareFp_zeroorsub
  CompareFp_nanorinf
  CompareFp_finitereturn
  CompareFp_infinite
  CompareFp_subnormal
  CompareFp_normalize
  L_end_Float_fpack
  _Float_fpack
  L_end__Long2Float
  __Long2Float
  L_end__LongLong2Float
  __LongLong2Float
  L_end__Float2Longword
  __Float2Longword
  L_end__Float2Longint
  __Float2Longint
  L_end__AddSub_FP
  __AddSub_FP
  L_end__Sub_FP
  __Sub_FP
  L_end__Mul_FP
  __Mul_FP
  L_end__Div_FP
  __Div_FP
  L_end__Compare_Fp
  __Compare_Fp
  L_end__Compare_Le_Fp
  __Compare_Le_Fp
  L_end__Compare_Ge_Fp
  __Compare_Ge_Fp
